name: Deploy to Production and Create a Release

on:
  push:
    branches:
      - main


jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Get tag name
      id: tag
      run: |
        DATE=$(date +'%Y%m%d%H%M')
        VERSION=$(node -p "require('./apps/tanstack-start/package.json').version")
        echo "TAG_NAME=v${VERSION}-${DATE}" >> "$GITHUB_OUTPUT"

    - name: Create tag
      run: |
        TAG_NAME=${{ steps.tag.outputs.tag_name }}
        echo "Creating tag $TAG_NAME"
        git tag $TAG_NAME
        git push origin $TAG_NAME

    outputs:
      tag_name: ${{ steps.tag.outputs.tag_name }}

  build:
    name: üê≥ Build Docker Image
    runs-on: ubuntu-latest
    needs: create_tag
    steps:
      - uses: actions/checkout@v4

      - name: üê≥ Build Docker Image
        uses: ./.github/actions/build-docker
        with:
          # AWS
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-bucket-name: github-actions-cache-pchmn
          # Docker Hub
          # registry: <registry>
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          # Docker build
          context: .
          file: ./apps/tanstack-start/.docker/Dockerfile
          tags: pchmn/monorepo-template-tanstack-start:${{ needs.create_tag.outputs.tag_name }}
          push: true

    outputs:
      tag_name: ${{ needs.create_tag.outputs.tag_name }}

  deploy:
    name: üöÄ Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Dokploy
        uses: ./.github/actions/dokploy
        with:
          comment-pr: true
          dokploy-base-url: ${{ secrets.DOKPLOY_BASE_URL }}
          dokploy-token: ${{ secrets.DOKPLOY_TOKEN }}
          project-id: 0_G71Uh8nHwvaHXw0eqew
          application-name: Production
          docker-image: pchmn/monorepo-template-tanstack-start:${{ needs.build.outputs.tag_name }}
          docker-port: 8080
          env: |
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}

    outputs:
      tag_name: ${{ needs.build.outputs.tag_name }}

  gh-release:
    name: üì¶ Create GitHub Release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.deploy.outputs.tag_name }}
