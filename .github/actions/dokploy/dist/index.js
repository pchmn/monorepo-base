var bG = Object.create;
var pf = Object.defineProperty;
var FG = Object.getOwnPropertyDescriptor;
var SG = Object.getOwnPropertyNames;
var TG = Object.getPrototypeOf,
  NG = Object.prototype.hasOwnProperty;
var B = (A, e) => () => (e || A((e = { exports: {} }).exports, e), e.exports);
var UG = (A, e, t, r) => {
  if ((e && typeof e == 'object') || typeof e == 'function')
    for (let o of SG(e))
      !NG.call(A, o) &&
        o !== t &&
        pf(A, o, {
          get: () => e[o],
          enumerable: !(r = FG(e, o)) || r.enumerable,
        });
  return A;
};
var us = (A, e, t) => (
  (t = A != null ? bG(TG(A)) : {}),
  UG(
    e || !A || !A.__esModule
      ? pf(t, 'default', { value: A, enumerable: !0 })
      : t,
    A,
  )
);
var nc = B((hs) => {
  'use strict';
  Object.defineProperty(hs, '__esModule', { value: !0 });
  hs.toCommandProperties = hs.toCommandValue = void 0;
  function MG(A) {
    return A == null
      ? ''
      : typeof A == 'string' || A instanceof String
        ? A
        : JSON.stringify(A);
  }
  hs.toCommandValue = MG;
  function LG(A) {
    return Object.keys(A).length
      ? {
          title: A.title,
          file: A.file,
          line: A.startLine,
          endLine: A.endLine,
          col: A.startColumn,
          endColumn: A.endColumn,
        }
      : {};
  }
  hs.toCommandProperties = LG;
});
var mf = B((ct) => {
  'use strict';
  var GG =
      (ct && ct.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    xG =
      (ct && ct.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    vG =
      (ct && ct.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              GG(e, A, t);
        return xG(e, A), e;
      };
  Object.defineProperty(ct, '__esModule', { value: !0 });
  ct.issue = ct.issueCommand = void 0;
  var OG = vG(require('os')),
    yf = nc();
  function Df(A, e, t) {
    let r = new iQ(A, e, t);
    process.stdout.write(r.toString() + OG.EOL);
  }
  ct.issueCommand = Df;
  function YG(A, e = '') {
    Df(A, {}, e);
  }
  ct.issue = YG;
  var wf = '::',
    iQ = class {
      constructor(e, t, r) {
        e || (e = 'missing.command'),
          (this.command = e),
          (this.properties = t),
          (this.message = r);
      }
      toString() {
        let e = wf + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
          e += ' ';
          let t = !0;
          for (let r in this.properties)
            if (this.properties.hasOwnProperty(r)) {
              let o = this.properties[r];
              o && (t ? (t = !1) : (e += ','), (e += `${r}=${HG(o)}`));
            }
        }
        return (e += `${wf}${JG(this.message)}`), e;
      }
    };
  function JG(A) {
    return (0, yf.toCommandValue)(A)
      .replace(/%/g, '%25')
      .replace(/\r/g, '%0D')
      .replace(/\n/g, '%0A');
  }
  function HG(A) {
    return (0, yf.toCommandValue)(A)
      .replace(/%/g, '%25')
      .replace(/\r/g, '%0D')
      .replace(/\n/g, '%0A')
      .replace(/:/g, '%3A')
      .replace(/,/g, '%2C');
  }
});
var bf = B((gt) => {
  'use strict';
  var VG =
      (gt && gt.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    qG =
      (gt && gt.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    cQ =
      (gt && gt.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              VG(e, A, t);
        return qG(e, A), e;
      };
  Object.defineProperty(gt, '__esModule', { value: !0 });
  gt.prepareKeyValueMessage = gt.issueFileCommand = void 0;
  var PG = cQ(require('crypto')),
    kf = cQ(require('fs')),
    aQ = cQ(require('os')),
    Rf = nc();
  function WG(A, e) {
    let t = process.env[`GITHUB_${A}`];
    if (!t)
      throw new Error(
        `Unable to find environment variable for file command ${A}`,
      );
    if (!kf.existsSync(t)) throw new Error(`Missing file at path: ${t}`);
    kf.appendFileSync(t, `${(0, Rf.toCommandValue)(e)}${aQ.EOL}`, {
      encoding: 'utf8',
    });
  }
  gt.issueFileCommand = WG;
  function _G(A, e) {
    let t = `ghadelimiter_${PG.randomUUID()}`,
      r = (0, Rf.toCommandValue)(e);
    if (A.includes(t))
      throw new Error(
        `Unexpected input: name should not contain the delimiter "${t}"`,
      );
    if (r.includes(t))
      throw new Error(
        `Unexpected input: value should not contain the delimiter "${t}"`,
      );
    return `${A}<<${t}${aQ.EOL}${r}${aQ.EOL}${t}`;
  }
  gt.prepareKeyValueMessage = _G;
});
var Sf = B((Is) => {
  'use strict';
  Object.defineProperty(Is, '__esModule', { value: !0 });
  Is.checkBypass = Is.getProxyUrl = void 0;
  function jG(A) {
    let e = A.protocol === 'https:';
    if (Ff(A)) return;
    let t = e
      ? process.env.https_proxy || process.env.HTTPS_PROXY
      : process.env.http_proxy || process.env.HTTP_PROXY;
    if (t)
      try {
        return new ic(t);
      } catch {
        if (!t.startsWith('http://') && !t.startsWith('https://'))
          return new ic(`http://${t}`);
      }
    else return;
  }
  Is.getProxyUrl = jG;
  function Ff(A) {
    if (!A.hostname) return !1;
    let e = A.hostname;
    if (ZG(e)) return !0;
    let t = process.env.no_proxy || process.env.NO_PROXY || '';
    if (!t) return !1;
    let r;
    A.port
      ? (r = Number(A.port))
      : A.protocol === 'http:'
        ? (r = 80)
        : A.protocol === 'https:' && (r = 443);
    let o = [A.hostname.toUpperCase()];
    typeof r == 'number' && o.push(`${o[0]}:${r}`);
    for (let s of t
      .split(',')
      .map((n) => n.trim().toUpperCase())
      .filter((n) => n))
      if (
        s === '*' ||
        o.some(
          (n) =>
            n === s ||
            n.endsWith(`.${s}`) ||
            (s.startsWith('.') && n.endsWith(`${s}`)),
        )
      )
        return !0;
    return !1;
  }
  Is.checkBypass = Ff;
  function ZG(A) {
    let e = A.toLowerCase();
    return (
      e === 'localhost' ||
      e.startsWith('127.') ||
      e.startsWith('[::1]') ||
      e.startsWith('[0:0:0:0:0:0:0:1]')
    );
  }
  var ic = class extends URL {
    constructor(e, t) {
      super(e, t),
        (this._decodedUsername = decodeURIComponent(super.username)),
        (this._decodedPassword = decodeURIComponent(super.password));
    }
    get username() {
      return this._decodedUsername;
    }
    get password() {
      return this._decodedPassword;
    }
  };
});
var Mf = B((ds) => {
  'use strict';
  var btA = require('net'),
    KG = require('tls'),
    gQ = require('http'),
    Tf = require('https'),
    XG = require('events'),
    FtA = require('assert'),
    zG = require('util');
  ds.httpOverHttp = $G;
  ds.httpsOverHttp = Ax;
  ds.httpOverHttps = ex;
  ds.httpsOverHttps = tx;
  function $G(A) {
    var e = new dr(A);
    return (e.request = gQ.request), e;
  }
  function Ax(A) {
    var e = new dr(A);
    return (
      (e.request = gQ.request), (e.createSocket = Nf), (e.defaultPort = 443), e
    );
  }
  function ex(A) {
    var e = new dr(A);
    return (e.request = Tf.request), e;
  }
  function tx(A) {
    var e = new dr(A);
    return (
      (e.request = Tf.request), (e.createSocket = Nf), (e.defaultPort = 443), e
    );
  }
  function dr(A) {
    var e = this;
    (e.options = A || {}),
      (e.proxyOptions = e.options.proxy || {}),
      (e.maxSockets = e.options.maxSockets || gQ.Agent.defaultMaxSockets),
      (e.requests = []),
      (e.sockets = []),
      e.on('free', function (r, o, s, n) {
        for (var i = Uf(o, s, n), a = 0, c = e.requests.length; a < c; ++a) {
          var g = e.requests[a];
          if (g.host === i.host && g.port === i.port) {
            e.requests.splice(a, 1), g.request.onSocket(r);
            return;
          }
        }
        r.destroy(), e.removeSocket(r);
      });
  }
  zG.inherits(dr, XG.EventEmitter);
  dr.prototype.addRequest = function (e, t, r, o) {
    var s = this,
      n = EQ({ request: e }, s.options, Uf(t, r, o));
    if (s.sockets.length >= this.maxSockets) {
      s.requests.push(n);
      return;
    }
    s.createSocket(n, function (i) {
      i.on('free', a), i.on('close', c), i.on('agentRemove', c), e.onSocket(i);
      function a() {
        s.emit('free', i, n);
      }
      function c(g) {
        s.removeSocket(i),
          i.removeListener('free', a),
          i.removeListener('close', c),
          i.removeListener('agentRemove', c);
      }
    });
  };
  dr.prototype.createSocket = function (e, t) {
    var r = this,
      o = {};
    r.sockets.push(o);
    var s = EQ({}, r.proxyOptions, {
      method: 'CONNECT',
      path: e.host + ':' + e.port,
      agent: !1,
      headers: { host: e.host + ':' + e.port },
    });
    e.localAddress && (s.localAddress = e.localAddress),
      s.proxyAuth &&
        ((s.headers = s.headers || {}),
        (s.headers['Proxy-Authorization'] =
          'Basic ' + new Buffer(s.proxyAuth).toString('base64'))),
      _r('making CONNECT request');
    var n = r.request(s);
    (n.useChunkedEncodingByDefault = !1),
      n.once('response', i),
      n.once('upgrade', a),
      n.once('connect', c),
      n.once('error', g),
      n.end();
    function i(E) {
      E.upgrade = !0;
    }
    function a(E, l, C) {
      process.nextTick(function () {
        c(E, l, C);
      });
    }
    function c(E, l, C) {
      if (
        (n.removeAllListeners(), l.removeAllListeners(), E.statusCode !== 200)
      ) {
        _r(
          'tunneling socket could not be established, statusCode=%d',
          E.statusCode,
        ),
          l.destroy();
        var Q = new Error(
          'tunneling socket could not be established, statusCode=' +
            E.statusCode,
        );
        (Q.code = 'ECONNRESET'), e.request.emit('error', Q), r.removeSocket(o);
        return;
      }
      if (C.length > 0) {
        _r('got illegal response body from proxy'), l.destroy();
        var Q = new Error('got illegal response body from proxy');
        (Q.code = 'ECONNRESET'), e.request.emit('error', Q), r.removeSocket(o);
        return;
      }
      return (
        _r('tunneling connection has established'),
        (r.sockets[r.sockets.indexOf(o)] = l),
        t(l)
      );
    }
    function g(E) {
      n.removeAllListeners(),
        _r(
          `tunneling socket could not be established, cause=%s
`,
          E.message,
          E.stack,
        );
      var l = new Error(
        'tunneling socket could not be established, cause=' + E.message,
      );
      (l.code = 'ECONNRESET'), e.request.emit('error', l), r.removeSocket(o);
    }
  };
  dr.prototype.removeSocket = function (e) {
    var t = this.sockets.indexOf(e);
    if (t !== -1) {
      this.sockets.splice(t, 1);
      var r = this.requests.shift();
      r &&
        this.createSocket(r, function (o) {
          r.request.onSocket(o);
        });
    }
  };
  function Nf(A, e) {
    var t = this;
    dr.prototype.createSocket.call(t, A, function (r) {
      var o = A.request.getHeader('host'),
        s = EQ({}, t.options, {
          socket: r,
          servername: o ? o.replace(/:.*$/, '') : A.host,
        }),
        n = KG.connect(0, s);
      (t.sockets[t.sockets.indexOf(r)] = n), e(n);
    });
  }
  function Uf(A, e, t) {
    return typeof A == 'string' ? { host: A, port: e, localAddress: t } : A;
  }
  function EQ(A) {
    for (var e = 1, t = arguments.length; e < t; ++e) {
      var r = arguments[e];
      if (typeof r == 'object')
        for (var o = Object.keys(r), s = 0, n = o.length; s < n; ++s) {
          var i = o[s];
          r[i] !== void 0 && (A[i] = r[i]);
        }
    }
    return A;
  }
  var _r;
  process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)
    ? (_r = function () {
        var A = Array.prototype.slice.call(arguments);
        typeof A[0] == 'string'
          ? (A[0] = 'TUNNEL: ' + A[0])
          : A.unshift('TUNNEL:'),
          console.error.apply(console, A);
      })
    : (_r = function () {});
  ds.debug = _r;
});
var Gf = B((TtA, Lf) => {
  Lf.exports = Mf();
});
var dA = B((NtA, xf) => {
  xf.exports = {
    kClose: Symbol('close'),
    kDestroy: Symbol('destroy'),
    kDispatch: Symbol('dispatch'),
    kUrl: Symbol('url'),
    kWriting: Symbol('writing'),
    kResuming: Symbol('resuming'),
    kQueue: Symbol('queue'),
    kConnect: Symbol('connect'),
    kConnecting: Symbol('connecting'),
    kHeadersList: Symbol('headers list'),
    kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),
    kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),
    kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),
    kKeepAliveTimeoutValue: Symbol('keep alive timeout'),
    kKeepAlive: Symbol('keep alive'),
    kHeadersTimeout: Symbol('headers timeout'),
    kBodyTimeout: Symbol('body timeout'),
    kServerName: Symbol('server name'),
    kLocalAddress: Symbol('local address'),
    kHost: Symbol('host'),
    kNoRef: Symbol('no ref'),
    kBodyUsed: Symbol('used'),
    kRunning: Symbol('running'),
    kBlocking: Symbol('blocking'),
    kPending: Symbol('pending'),
    kSize: Symbol('size'),
    kBusy: Symbol('busy'),
    kQueued: Symbol('queued'),
    kFree: Symbol('free'),
    kConnected: Symbol('connected'),
    kClosed: Symbol('closed'),
    kNeedDrain: Symbol('need drain'),
    kReset: Symbol('reset'),
    kDestroyed: Symbol.for('nodejs.stream.destroyed'),
    kMaxHeadersSize: Symbol('max headers size'),
    kRunningIdx: Symbol('running index'),
    kPendingIdx: Symbol('pending index'),
    kError: Symbol('error'),
    kClients: Symbol('clients'),
    kClient: Symbol('client'),
    kParser: Symbol('parser'),
    kOnDestroyed: Symbol('destroy callbacks'),
    kPipelining: Symbol('pipelining'),
    kSocket: Symbol('socket'),
    kHostHeader: Symbol('host header'),
    kConnector: Symbol('connector'),
    kStrictContentLength: Symbol('strict content length'),
    kMaxRedirections: Symbol('maxRedirections'),
    kMaxRequests: Symbol('maxRequestsPerClient'),
    kProxy: Symbol('proxy agent options'),
    kCounter: Symbol('socket request counter'),
    kInterceptors: Symbol('dispatch interceptors'),
    kMaxResponseSize: Symbol('max response size'),
    kHTTP2Session: Symbol('http2Session'),
    kHTTP2SessionState: Symbol('http2Session state'),
    kHTTP2BuildRequest: Symbol('http2 build request'),
    kHTTP1BuildRequest: Symbol('http1 build request'),
    kHTTP2CopyHeaders: Symbol('http2 copy headers'),
    kHTTPConnVersion: Symbol('http connection version'),
    kRetryHandlerDefaultRetry: Symbol('retry agent default retry'),
    kConstruct: Symbol('constructable'),
  };
});
var uA = B((UtA, vf) => {
  'use strict';
  var OA = class extends Error {
      constructor(e) {
        super(e), (this.name = 'UndiciError'), (this.code = 'UND_ERR');
      }
    },
    lQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ConnectTimeoutError'),
          (this.message = e || 'Connect Timeout Error'),
          (this.code = 'UND_ERR_CONNECT_TIMEOUT');
      }
    },
    QQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'HeadersTimeoutError'),
          (this.message = e || 'Headers Timeout Error'),
          (this.code = 'UND_ERR_HEADERS_TIMEOUT');
      }
    },
    CQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'HeadersOverflowError'),
          (this.message = e || 'Headers Overflow Error'),
          (this.code = 'UND_ERR_HEADERS_OVERFLOW');
      }
    },
    BQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'BodyTimeoutError'),
          (this.message = e || 'Body Timeout Error'),
          (this.code = 'UND_ERR_BODY_TIMEOUT');
      }
    },
    uQ = class A extends OA {
      constructor(e, t, r, o) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ResponseStatusCodeError'),
          (this.message = e || 'Response Status Code Error'),
          (this.code = 'UND_ERR_RESPONSE_STATUS_CODE'),
          (this.body = o),
          (this.status = t),
          (this.statusCode = t),
          (this.headers = r);
      }
    },
    hQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'InvalidArgumentError'),
          (this.message = e || 'Invalid Argument Error'),
          (this.code = 'UND_ERR_INVALID_ARG');
      }
    },
    IQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'InvalidReturnValueError'),
          (this.message = e || 'Invalid Return Value Error'),
          (this.code = 'UND_ERR_INVALID_RETURN_VALUE');
      }
    },
    dQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'AbortError'),
          (this.message = e || 'Request aborted'),
          (this.code = 'UND_ERR_ABORTED');
      }
    },
    fQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'InformationalError'),
          (this.message = e || 'Request information'),
          (this.code = 'UND_ERR_INFO');
      }
    },
    pQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'RequestContentLengthMismatchError'),
          (this.message =
            e || 'Request body length does not match content-length header'),
          (this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH');
      }
    },
    wQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ResponseContentLengthMismatchError'),
          (this.message =
            e || 'Response body length does not match content-length header'),
          (this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH');
      }
    },
    yQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ClientDestroyedError'),
          (this.message = e || 'The client is destroyed'),
          (this.code = 'UND_ERR_DESTROYED');
      }
    },
    DQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ClientClosedError'),
          (this.message = e || 'The client is closed'),
          (this.code = 'UND_ERR_CLOSED');
      }
    },
    mQ = class A extends OA {
      constructor(e, t) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'SocketError'),
          (this.message = e || 'Socket error'),
          (this.code = 'UND_ERR_SOCKET'),
          (this.socket = t);
      }
    },
    ac = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'NotSupportedError'),
          (this.message = e || 'Not supported error'),
          (this.code = 'UND_ERR_NOT_SUPPORTED');
      }
    },
    kQ = class extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, ac),
          (this.name = 'MissingUpstreamError'),
          (this.message =
            e || 'No upstream has been added to the BalancedPool'),
          (this.code = 'UND_ERR_BPL_MISSING_UPSTREAM');
      }
    },
    RQ = class A extends Error {
      constructor(e, t, r) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'HTTPParserError'),
          (this.code = t ? `HPE_${t}` : void 0),
          (this.data = r ? r.toString() : void 0);
      }
    },
    bQ = class A extends OA {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'ResponseExceededMaxSizeError'),
          (this.message = e || 'Response content exceeded max size'),
          (this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE');
      }
    },
    FQ = class A extends OA {
      constructor(e, t, { headers: r, data: o }) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'RequestRetryError'),
          (this.message = e || 'Request retry error'),
          (this.code = 'UND_ERR_REQ_RETRY'),
          (this.statusCode = t),
          (this.data = o),
          (this.headers = r);
      }
    };
  vf.exports = {
    HTTPParserError: RQ,
    UndiciError: OA,
    HeadersTimeoutError: QQ,
    HeadersOverflowError: CQ,
    BodyTimeoutError: BQ,
    RequestContentLengthMismatchError: pQ,
    ConnectTimeoutError: lQ,
    ResponseStatusCodeError: uQ,
    InvalidArgumentError: hQ,
    InvalidReturnValueError: IQ,
    RequestAbortedError: dQ,
    ClientDestroyedError: yQ,
    ClientClosedError: DQ,
    InformationalError: fQ,
    SocketError: mQ,
    NotSupportedError: ac,
    ResponseContentLengthMismatchError: wQ,
    BalancedPoolMissingUpstreamError: kQ,
    ResponseExceededMaxSizeError: bQ,
    RequestRetryError: FQ,
  };
});
var Yf = B((MtA, Of) => {
  'use strict';
  var cc = {},
    SQ = [
      'Accept',
      'Accept-Encoding',
      'Accept-Language',
      'Accept-Ranges',
      'Access-Control-Allow-Credentials',
      'Access-Control-Allow-Headers',
      'Access-Control-Allow-Methods',
      'Access-Control-Allow-Origin',
      'Access-Control-Expose-Headers',
      'Access-Control-Max-Age',
      'Access-Control-Request-Headers',
      'Access-Control-Request-Method',
      'Age',
      'Allow',
      'Alt-Svc',
      'Alt-Used',
      'Authorization',
      'Cache-Control',
      'Clear-Site-Data',
      'Connection',
      'Content-Disposition',
      'Content-Encoding',
      'Content-Language',
      'Content-Length',
      'Content-Location',
      'Content-Range',
      'Content-Security-Policy',
      'Content-Security-Policy-Report-Only',
      'Content-Type',
      'Cookie',
      'Cross-Origin-Embedder-Policy',
      'Cross-Origin-Opener-Policy',
      'Cross-Origin-Resource-Policy',
      'Date',
      'Device-Memory',
      'Downlink',
      'ECT',
      'ETag',
      'Expect',
      'Expect-CT',
      'Expires',
      'Forwarded',
      'From',
      'Host',
      'If-Match',
      'If-Modified-Since',
      'If-None-Match',
      'If-Range',
      'If-Unmodified-Since',
      'Keep-Alive',
      'Last-Modified',
      'Link',
      'Location',
      'Max-Forwards',
      'Origin',
      'Permissions-Policy',
      'Pragma',
      'Proxy-Authenticate',
      'Proxy-Authorization',
      'RTT',
      'Range',
      'Referer',
      'Referrer-Policy',
      'Refresh',
      'Retry-After',
      'Sec-WebSocket-Accept',
      'Sec-WebSocket-Extensions',
      'Sec-WebSocket-Key',
      'Sec-WebSocket-Protocol',
      'Sec-WebSocket-Version',
      'Server',
      'Server-Timing',
      'Service-Worker-Allowed',
      'Service-Worker-Navigation-Preload',
      'Set-Cookie',
      'SourceMap',
      'Strict-Transport-Security',
      'Supports-Loading-Mode',
      'TE',
      'Timing-Allow-Origin',
      'Trailer',
      'Transfer-Encoding',
      'Upgrade',
      'Upgrade-Insecure-Requests',
      'User-Agent',
      'Vary',
      'Via',
      'WWW-Authenticate',
      'X-Content-Type-Options',
      'X-DNS-Prefetch-Control',
      'X-Frame-Options',
      'X-Permitted-Cross-Domain-Policies',
      'X-Powered-By',
      'X-Requested-With',
      'X-XSS-Protection',
    ];
  for (let A = 0; A < SQ.length; ++A) {
    let e = SQ[A],
      t = e.toLowerCase();
    cc[e] = cc[t] = t;
  }
  Object.setPrototypeOf(cc, null);
  Of.exports = { wellknownHeaderNames: SQ, headerNameLowerCasedRecord: cc };
});
var eA = B((LtA, Xf) => {
  'use strict';
  var qf = require('assert'),
    { kDestroyed: Pf, kBodyUsed: Jf } = dA(),
    { IncomingMessage: rx } = require('http'),
    fs = require('stream'),
    ox = require('net'),
    { InvalidArgumentError: re } = uA(),
    { Blob: Hf } = require('buffer'),
    gc = require('util'),
    { stringify: sx } = require('querystring'),
    { headerNameLowerCasedRecord: nx } = Yf(),
    [TQ, Vf] = process.versions.node.split('.').map((A) => Number(A));
  function ix() {}
  function NQ(A) {
    return (
      A &&
      typeof A == 'object' &&
      typeof A.pipe == 'function' &&
      typeof A.on == 'function'
    );
  }
  function Wf(A) {
    return (
      (Hf && A instanceof Hf) ||
      (A &&
        typeof A == 'object' &&
        (typeof A.stream == 'function' || typeof A.arrayBuffer == 'function') &&
        /^(Blob|File)$/.test(A[Symbol.toStringTag]))
    );
  }
  function ax(A, e) {
    if (A.includes('?') || A.includes('#'))
      throw new Error(
        'Query params cannot be passed when url already contains "?" or "#".',
      );
    let t = sx(e);
    return t && (A += '?' + t), A;
  }
  function _f(A) {
    if (typeof A == 'string') {
      if (((A = new URL(A)), !/^https?:/.test(A.origin || A.protocol)))
        throw new re(
          'Invalid URL protocol: the URL must start with `http:` or `https:`.',
        );
      return A;
    }
    if (!A || typeof A != 'object')
      throw new re('Invalid URL: The URL argument must be a non-null object.');
    if (!/^https?:/.test(A.origin || A.protocol))
      throw new re(
        'Invalid URL protocol: the URL must start with `http:` or `https:`.',
      );
    if (!(A instanceof URL)) {
      if (A.port != null && A.port !== '' && !Number.isFinite(parseInt(A.port)))
        throw new re(
          'Invalid URL: port must be a valid integer or a string representation of an integer.',
        );
      if (A.path != null && typeof A.path != 'string')
        throw new re(
          'Invalid URL path: the path must be a string or null/undefined.',
        );
      if (A.pathname != null && typeof A.pathname != 'string')
        throw new re(
          'Invalid URL pathname: the pathname must be a string or null/undefined.',
        );
      if (A.hostname != null && typeof A.hostname != 'string')
        throw new re(
          'Invalid URL hostname: the hostname must be a string or null/undefined.',
        );
      if (A.origin != null && typeof A.origin != 'string')
        throw new re(
          'Invalid URL origin: the origin must be a string or null/undefined.',
        );
      let e = A.port != null ? A.port : A.protocol === 'https:' ? 443 : 80,
        t = A.origin != null ? A.origin : `${A.protocol}//${A.hostname}:${e}`,
        r = A.path != null ? A.path : `${A.pathname || ''}${A.search || ''}`;
      t.endsWith('/') && (t = t.substring(0, t.length - 1)),
        r && !r.startsWith('/') && (r = `/${r}`),
        (A = new URL(t + r));
    }
    return A;
  }
  function cx(A) {
    if (((A = _f(A)), A.pathname !== '/' || A.search || A.hash))
      throw new re('invalid url');
    return A;
  }
  function gx(A) {
    if (A[0] === '[') {
      let t = A.indexOf(']');
      return qf(t !== -1), A.substring(1, t);
    }
    let e = A.indexOf(':');
    return e === -1 ? A : A.substring(0, e);
  }
  function Ex(A) {
    if (!A) return null;
    qf.strictEqual(typeof A, 'string');
    let e = gx(A);
    return ox.isIP(e) ? '' : e;
  }
  function lx(A) {
    return JSON.parse(JSON.stringify(A));
  }
  function Qx(A) {
    return A != null && typeof A[Symbol.asyncIterator] == 'function';
  }
  function Cx(A) {
    return (
      A != null &&
      (typeof A[Symbol.iterator] == 'function' ||
        typeof A[Symbol.asyncIterator] == 'function')
    );
  }
  function Bx(A) {
    if (A == null) return 0;
    if (NQ(A)) {
      let e = A._readableState;
      return e &&
        e.objectMode === !1 &&
        e.ended === !0 &&
        Number.isFinite(e.length)
        ? e.length
        : null;
    } else {
      if (Wf(A)) return A.size != null ? A.size : null;
      if (Zf(A)) return A.byteLength;
    }
    return null;
  }
  function UQ(A) {
    return !A || !!(A.destroyed || A[Pf]);
  }
  function jf(A) {
    let e = A && A._readableState;
    return UQ(A) && e && !e.endEmitted;
  }
  function ux(A, e) {
    A == null ||
      !NQ(A) ||
      UQ(A) ||
      (typeof A.destroy == 'function'
        ? (Object.getPrototypeOf(A).constructor === rx && (A.socket = null),
          A.destroy(e))
        : e &&
          process.nextTick(
            (t, r) => {
              t.emit('error', r);
            },
            A,
            e,
          ),
      A.destroyed !== !0 && (A[Pf] = !0));
  }
  var hx = /timeout=(\d+)/;
  function Ix(A) {
    let e = A.toString().match(hx);
    return e ? parseInt(e[1], 10) * 1e3 : null;
  }
  function dx(A) {
    return nx[A] || A.toLowerCase();
  }
  function fx(A, e = {}) {
    if (!Array.isArray(A)) return A;
    for (let t = 0; t < A.length; t += 2) {
      let r = A[t].toString().toLowerCase(),
        o = e[r];
      o
        ? (Array.isArray(o) || ((o = [o]), (e[r] = o)),
          o.push(A[t + 1].toString('utf8')))
        : Array.isArray(A[t + 1])
          ? (e[r] = A[t + 1].map((s) => s.toString('utf8')))
          : (e[r] = A[t + 1].toString('utf8'));
    }
    return (
      'content-length' in e &&
        'content-disposition' in e &&
        (e['content-disposition'] = Buffer.from(
          e['content-disposition'],
        ).toString('latin1')),
      e
    );
  }
  function px(A) {
    let e = [],
      t = !1,
      r = -1;
    for (let o = 0; o < A.length; o += 2) {
      let s = A[o + 0].toString(),
        n = A[o + 1].toString('utf8');
      s.length === 14 &&
      (s === 'content-length' || s.toLowerCase() === 'content-length')
        ? (e.push(s, n), (t = !0))
        : s.length === 19 &&
            (s === 'content-disposition' ||
              s.toLowerCase() === 'content-disposition')
          ? (r = e.push(s, n) - 1)
          : e.push(s, n);
    }
    return t && r !== -1 && (e[r] = Buffer.from(e[r]).toString('latin1')), e;
  }
  function Zf(A) {
    return A instanceof Uint8Array || Buffer.isBuffer(A);
  }
  function wx(A, e, t) {
    if (!A || typeof A != 'object') throw new re('handler must be an object');
    if (typeof A.onConnect != 'function')
      throw new re('invalid onConnect method');
    if (typeof A.onError != 'function') throw new re('invalid onError method');
    if (typeof A.onBodySent != 'function' && A.onBodySent !== void 0)
      throw new re('invalid onBodySent method');
    if (t || e === 'CONNECT') {
      if (typeof A.onUpgrade != 'function')
        throw new re('invalid onUpgrade method');
    } else {
      if (typeof A.onHeaders != 'function')
        throw new re('invalid onHeaders method');
      if (typeof A.onData != 'function') throw new re('invalid onData method');
      if (typeof A.onComplete != 'function')
        throw new re('invalid onComplete method');
    }
  }
  function yx(A) {
    return !!(
      A &&
      (fs.isDisturbed
        ? fs.isDisturbed(A) || A[Jf]
        : A[Jf] ||
          A.readableDidRead ||
          (A._readableState && A._readableState.dataEmitted) ||
          jf(A))
    );
  }
  function Dx(A) {
    return !!(
      A &&
      (fs.isErrored ? fs.isErrored(A) : /state: 'errored'/.test(gc.inspect(A)))
    );
  }
  function mx(A) {
    return !!(
      A &&
      (fs.isReadable
        ? fs.isReadable(A)
        : /state: 'readable'/.test(gc.inspect(A)))
    );
  }
  function kx(A) {
    return {
      localAddress: A.localAddress,
      localPort: A.localPort,
      remoteAddress: A.remoteAddress,
      remotePort: A.remotePort,
      remoteFamily: A.remoteFamily,
      timeout: A.timeout,
      bytesWritten: A.bytesWritten,
      bytesRead: A.bytesRead,
    };
  }
  async function* Rx(A) {
    for await (let e of A) yield Buffer.isBuffer(e) ? e : Buffer.from(e);
  }
  var gi;
  function bx(A) {
    if ((gi || (gi = require('stream/web').ReadableStream), gi.from))
      return gi.from(Rx(A));
    let e;
    return new gi(
      {
        async start() {
          e = A[Symbol.asyncIterator]();
        },
        async pull(t) {
          let { done: r, value: o } = await e.next();
          if (r)
            queueMicrotask(() => {
              t.close();
            });
          else {
            let s = Buffer.isBuffer(o) ? o : Buffer.from(o);
            t.enqueue(new Uint8Array(s));
          }
          return t.desiredSize > 0;
        },
        async cancel(t) {
          await e.return();
        },
      },
      0,
    );
  }
  function Fx(A) {
    return (
      A &&
      typeof A == 'object' &&
      typeof A.append == 'function' &&
      typeof A.delete == 'function' &&
      typeof A.get == 'function' &&
      typeof A.getAll == 'function' &&
      typeof A.has == 'function' &&
      typeof A.set == 'function' &&
      A[Symbol.toStringTag] === 'FormData'
    );
  }
  function Sx(A) {
    if (A) {
      if (typeof A.throwIfAborted == 'function') A.throwIfAborted();
      else if (A.aborted) {
        let e = new Error('The operation was aborted');
        throw ((e.name = 'AbortError'), e);
      }
    }
  }
  function Tx(A, e) {
    return 'addEventListener' in A
      ? (A.addEventListener('abort', e, { once: !0 }),
        () => A.removeEventListener('abort', e))
      : (A.addListener('abort', e), () => A.removeListener('abort', e));
  }
  var Nx = !!String.prototype.toWellFormed;
  function Ux(A) {
    return Nx
      ? `${A}`.toWellFormed()
      : gc.toUSVString
        ? gc.toUSVString(A)
        : `${A}`;
  }
  function Mx(A) {
    if (A == null || A === '') return { start: 0, end: null, size: null };
    let e = A ? A.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
    return e
      ? {
          start: parseInt(e[1]),
          end: e[2] ? parseInt(e[2]) : null,
          size: e[3] ? parseInt(e[3]) : null,
        }
      : null;
  }
  var Kf = Object.create(null);
  Kf.enumerable = !0;
  Xf.exports = {
    kEnumerableProperty: Kf,
    nop: ix,
    isDisturbed: yx,
    isErrored: Dx,
    isReadable: mx,
    toUSVString: Ux,
    isReadableAborted: jf,
    isBlobLike: Wf,
    parseOrigin: cx,
    parseURL: _f,
    getServerName: Ex,
    isStream: NQ,
    isIterable: Cx,
    isAsyncIterable: Qx,
    isDestroyed: UQ,
    headerNameToString: dx,
    parseRawHeaders: px,
    parseHeaders: fx,
    parseKeepAliveTimeout: Ix,
    destroy: ux,
    bodyLength: Bx,
    deepClone: lx,
    ReadableStreamFrom: bx,
    isBuffer: Zf,
    validateHandler: wx,
    getSocketInfo: kx,
    isFormDataLike: Fx,
    buildURL: ax,
    throwIfAborted: Sx,
    addAbortListener: Tx,
    parseRangeHeader: Mx,
    nodeMajor: TQ,
    nodeMinor: Vf,
    nodeHasAutoSelectFamily: TQ > 18 || (TQ === 18 && Vf >= 13),
    safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE'],
  };
});
var Ap = B((GtA, $f) => {
  'use strict';
  var MQ = Date.now(),
    jr,
    Zr = [];
  function Lx() {
    MQ = Date.now();
    let A = Zr.length,
      e = 0;
    for (; e < A; ) {
      let t = Zr[e];
      t.state === 0
        ? (t.state = MQ + t.delay)
        : t.state > 0 &&
          MQ >= t.state &&
          ((t.state = -1), t.callback(t.opaque)),
        t.state === -1
          ? ((t.state = -2),
            e !== A - 1 ? (Zr[e] = Zr.pop()) : Zr.pop(),
            (A -= 1))
          : (e += 1);
    }
    Zr.length > 0 && zf();
  }
  function zf() {
    jr && jr.refresh
      ? jr.refresh()
      : (clearTimeout(jr), (jr = setTimeout(Lx, 1e3)), jr.unref && jr.unref());
  }
  var Ec = class {
    constructor(e, t, r) {
      (this.callback = e),
        (this.delay = t),
        (this.opaque = r),
        (this.state = -2),
        this.refresh();
    }
    refresh() {
      this.state === -2 && (Zr.push(this), (!jr || Zr.length === 1) && zf()),
        (this.state = 0);
    }
    clear() {
      this.state = -1;
    }
  };
  $f.exports = {
    setTimeout(A, e, t) {
      return e < 1e3 ? setTimeout(A, e, t) : new Ec(A, e, t);
    },
    clearTimeout(A) {
      A instanceof Ec ? A.clear() : clearTimeout(A);
    },
  };
});
var LQ = B((xtA, ep) => {
  'use strict';
  var Gx = require('node:events').EventEmitter,
    xx = require('node:util').inherits;
  function mo(A) {
    if ((typeof A == 'string' && (A = Buffer.from(A)), !Buffer.isBuffer(A)))
      throw new TypeError('The needle has to be a String or a Buffer.');
    let e = A.length;
    if (e === 0)
      throw new Error('The needle cannot be an empty String/Buffer.');
    if (e > 256)
      throw new Error('The needle cannot have a length bigger than 256.');
    (this.maxMatches = 1 / 0),
      (this.matches = 0),
      (this._occ = new Array(256).fill(e)),
      (this._lookbehind_size = 0),
      (this._needle = A),
      (this._bufpos = 0),
      (this._lookbehind = Buffer.alloc(e));
    for (var t = 0; t < e - 1; ++t) this._occ[A[t]] = e - 1 - t;
  }
  xx(mo, Gx);
  mo.prototype.reset = function () {
    (this._lookbehind_size = 0), (this.matches = 0), (this._bufpos = 0);
  };
  mo.prototype.push = function (A, e) {
    Buffer.isBuffer(A) || (A = Buffer.from(A, 'binary'));
    let t = A.length;
    this._bufpos = e || 0;
    let r;
    for (; r !== t && this.matches < this.maxMatches; ) r = this._sbmh_feed(A);
    return r;
  };
  mo.prototype._sbmh_feed = function (A) {
    let e = A.length,
      t = this._needle,
      r = t.length,
      o = t[r - 1],
      s = -this._lookbehind_size,
      n;
    if (s < 0) {
      for (; s < 0 && s <= e - r; ) {
        if (
          ((n = this._sbmh_lookup_char(A, s + r - 1)),
          n === o && this._sbmh_memcmp(A, s, r - 1))
        )
          return (
            (this._lookbehind_size = 0),
            ++this.matches,
            this.emit('info', !0),
            (this._bufpos = s + r)
          );
        s += this._occ[n];
      }
      if (s < 0) for (; s < 0 && !this._sbmh_memcmp(A, s, e - s); ) ++s;
      if (s >= 0)
        this.emit('info', !1, this._lookbehind, 0, this._lookbehind_size),
          (this._lookbehind_size = 0);
      else {
        let i = this._lookbehind_size + s;
        return (
          i > 0 && this.emit('info', !1, this._lookbehind, 0, i),
          this._lookbehind.copy(
            this._lookbehind,
            0,
            i,
            this._lookbehind_size - i,
          ),
          (this._lookbehind_size -= i),
          A.copy(this._lookbehind, this._lookbehind_size),
          (this._lookbehind_size += e),
          (this._bufpos = e),
          e
        );
      }
    }
    if (((s += (s >= 0) * this._bufpos), A.indexOf(t, s) !== -1))
      return (
        (s = A.indexOf(t, s)),
        ++this.matches,
        s > 0
          ? this.emit('info', !0, A, this._bufpos, s)
          : this.emit('info', !0),
        (this._bufpos = s + r)
      );
    for (
      s = e - r;
      s < e &&
      (A[s] !== t[0] ||
        Buffer.compare(A.subarray(s, s + e - s), t.subarray(0, e - s)) !== 0);
    )
      ++s;
    return (
      s < e &&
        (A.copy(this._lookbehind, 0, s, s + (e - s)),
        (this._lookbehind_size = e - s)),
      s > 0 && this.emit('info', !1, A, this._bufpos, s < e ? s : e),
      (this._bufpos = e),
      e
    );
  };
  mo.prototype._sbmh_lookup_char = function (A, e) {
    return e < 0 ? this._lookbehind[this._lookbehind_size + e] : A[e];
  };
  mo.prototype._sbmh_memcmp = function (A, e, t) {
    for (var r = 0; r < t; ++r)
      if (this._sbmh_lookup_char(A, e + r) !== this._needle[r]) return !1;
    return !0;
  };
  ep.exports = mo;
});
var op = B((vtA, rp) => {
  'use strict';
  var vx = require('node:util').inherits,
    tp = require('node:stream').Readable;
  function GQ(A) {
    tp.call(this, A);
  }
  vx(GQ, tp);
  GQ.prototype._read = function (A) {};
  rp.exports = GQ;
});
var lc = B((OtA, sp) => {
  'use strict';
  sp.exports = function (e, t, r) {
    if (!e || e[t] === void 0 || e[t] === null) return r;
    if (typeof e[t] != 'number' || isNaN(e[t]))
      throw new TypeError('Limit ' + t + ' is not a valid number');
    return e[t];
  };
});
var cp = B((YtA, ap) => {
  'use strict';
  var ip = require('node:events').EventEmitter,
    Ox = require('node:util').inherits,
    np = lc(),
    Yx = LQ(),
    Jx = Buffer.from(`\r
\r
`),
    Hx = /\r\n/g,
    Vx = /^([^:]+):[ \t]?([\x00-\xFF]+)?$/;
  function ps(A) {
    ip.call(this), (A = A || {});
    let e = this;
    (this.nread = 0),
      (this.maxed = !1),
      (this.npairs = 0),
      (this.maxHeaderPairs = np(A, 'maxHeaderPairs', 2e3)),
      (this.maxHeaderSize = np(A, 'maxHeaderSize', 80 * 1024)),
      (this.buffer = ''),
      (this.header = {}),
      (this.finished = !1),
      (this.ss = new Yx(Jx)),
      this.ss.on('info', function (t, r, o, s) {
        r &&
          !e.maxed &&
          (e.nread + s - o >= e.maxHeaderSize
            ? ((s = e.maxHeaderSize - e.nread + o),
              (e.nread = e.maxHeaderSize),
              (e.maxed = !0))
            : (e.nread += s - o),
          (e.buffer += r.toString('binary', o, s))),
          t && e._finish();
      });
  }
  Ox(ps, ip);
  ps.prototype.push = function (A) {
    let e = this.ss.push(A);
    if (this.finished) return e;
  };
  ps.prototype.reset = function () {
    (this.finished = !1),
      (this.buffer = ''),
      (this.header = {}),
      this.ss.reset();
  };
  ps.prototype._finish = function () {
    this.buffer && this._parseHeader(), (this.ss.matches = this.ss.maxMatches);
    let A = this.header;
    (this.header = {}),
      (this.buffer = ''),
      (this.finished = !0),
      (this.nread = this.npairs = 0),
      (this.maxed = !1),
      this.emit('header', A);
  };
  ps.prototype._parseHeader = function () {
    if (this.npairs === this.maxHeaderPairs) return;
    let A = this.buffer.split(Hx),
      e = A.length,
      t,
      r;
    for (var o = 0; o < e; ++o) {
      if (A[o].length === 0) continue;
      if ((A[o][0] === '	' || A[o][0] === ' ') && r) {
        this.header[r][this.header[r].length - 1] += A[o];
        continue;
      }
      let s = A[o].indexOf(':');
      if (s === -1 || s === 0) return;
      if (
        ((t = Vx.exec(A[o])),
        (r = t[1].toLowerCase()),
        (this.header[r] = this.header[r] || []),
        this.header[r].push(t[2] || ''),
        ++this.npairs === this.maxHeaderPairs)
      )
        break;
    }
  };
  ap.exports = ps;
});
var vQ = B((JtA, Ep) => {
  'use strict';
  var xQ = require('node:stream').Writable,
    qx = require('node:util').inherits,
    Px = LQ(),
    gp = op(),
    Wx = cp(),
    _x = 45,
    jx = Buffer.from('-'),
    Zx = Buffer.from(`\r
`),
    Kx = function () {};
  function St(A) {
    if (!(this instanceof St)) return new St(A);
    if (
      (xQ.call(this, A),
      !A || (!A.headerFirst && typeof A.boundary != 'string'))
    )
      throw new TypeError('Boundary required');
    typeof A.boundary == 'string'
      ? this.setBoundary(A.boundary)
      : (this._bparser = void 0),
      (this._headerFirst = A.headerFirst),
      (this._dashes = 0),
      (this._parts = 0),
      (this._finished = !1),
      (this._realFinish = !1),
      (this._isPreamble = !0),
      (this._justMatched = !1),
      (this._firstWrite = !0),
      (this._inHeader = !0),
      (this._part = void 0),
      (this._cb = void 0),
      (this._ignoreData = !1),
      (this._partOpts = { highWaterMark: A.partHwm }),
      (this._pause = !1);
    let e = this;
    (this._hparser = new Wx(A)),
      this._hparser.on('header', function (t) {
        (e._inHeader = !1), e._part.emit('header', t);
      });
  }
  qx(St, xQ);
  St.prototype.emit = function (A) {
    if (A === 'finish' && !this._realFinish) {
      if (!this._finished) {
        let e = this;
        process.nextTick(function () {
          if (
            (e.emit('error', new Error('Unexpected end of multipart data')),
            e._part && !e._ignoreData)
          ) {
            let t = e._isPreamble ? 'Preamble' : 'Part';
            e._part.emit(
              'error',
              new Error(
                t + ' terminated early due to unexpected end of multipart data',
              ),
            ),
              e._part.push(null),
              process.nextTick(function () {
                (e._realFinish = !0), e.emit('finish'), (e._realFinish = !1);
              });
            return;
          }
          (e._realFinish = !0), e.emit('finish'), (e._realFinish = !1);
        });
      }
    } else xQ.prototype.emit.apply(this, arguments);
  };
  St.prototype._write = function (A, e, t) {
    if (!this._hparser && !this._bparser) return t();
    if (this._headerFirst && this._isPreamble) {
      this._part ||
        ((this._part = new gp(this._partOpts)),
        this.listenerCount('preamble') !== 0
          ? this.emit('preamble', this._part)
          : this._ignore());
      let r = this._hparser.push(A);
      if (!this._inHeader && r !== void 0 && r < A.length) A = A.slice(r);
      else return t();
    }
    this._firstWrite && (this._bparser.push(Zx), (this._firstWrite = !1)),
      this._bparser.push(A),
      this._pause ? (this._cb = t) : t();
  };
  St.prototype.reset = function () {
    (this._part = void 0), (this._bparser = void 0), (this._hparser = void 0);
  };
  St.prototype.setBoundary = function (A) {
    let e = this;
    (this._bparser = new Px(
      `\r
--` + A,
    )),
      this._bparser.on('info', function (t, r, o, s) {
        e._oninfo(t, r, o, s);
      });
  };
  St.prototype._ignore = function () {
    this._part &&
      !this._ignoreData &&
      ((this._ignoreData = !0),
      this._part.on('error', Kx),
      this._part.resume());
  };
  St.prototype._oninfo = function (A, e, t, r) {
    let o,
      s = this,
      n = 0,
      i,
      a = !0;
    if (!this._part && this._justMatched && e) {
      for (; this._dashes < 2 && t + n < r; )
        if (e[t + n] === _x) ++n, ++this._dashes;
        else {
          this._dashes && (o = jx), (this._dashes = 0);
          break;
        }
      if (
        (this._dashes === 2 &&
          (t + n < r &&
            this.listenerCount('trailer') !== 0 &&
            this.emit('trailer', e.slice(t + n, r)),
          this.reset(),
          (this._finished = !0),
          s._parts === 0 &&
            ((s._realFinish = !0), s.emit('finish'), (s._realFinish = !1))),
        this._dashes)
      )
        return;
    }
    this._justMatched && (this._justMatched = !1),
      this._part ||
        ((this._part = new gp(this._partOpts)),
        (this._part._read = function (c) {
          s._unpause();
        }),
        this._isPreamble && this.listenerCount('preamble') !== 0
          ? this.emit('preamble', this._part)
          : this._isPreamble !== !0 && this.listenerCount('part') !== 0
            ? this.emit('part', this._part)
            : this._ignore(),
        this._isPreamble || (this._inHeader = !0)),
      e &&
        t < r &&
        !this._ignoreData &&
        (this._isPreamble || !this._inHeader
          ? (o && (a = this._part.push(o)),
            (a = this._part.push(e.slice(t, r))),
            a || (this._pause = !0))
          : !this._isPreamble &&
            this._inHeader &&
            (o && this._hparser.push(o),
            (i = this._hparser.push(e.slice(t, r))),
            !this._inHeader &&
              i !== void 0 &&
              i < r &&
              this._oninfo(!1, e, t + i, r))),
      A &&
        (this._hparser.reset(),
        this._isPreamble
          ? (this._isPreamble = !1)
          : t !== r &&
            (++this._parts,
            this._part.on('end', function () {
              --s._parts === 0 &&
                (s._finished
                  ? ((s._realFinish = !0),
                    s.emit('finish'),
                    (s._realFinish = !1))
                  : s._unpause());
            })),
        this._part.push(null),
        (this._part = void 0),
        (this._ignoreData = !1),
        (this._justMatched = !0),
        (this._dashes = 0));
  };
  St.prototype._unpause = function () {
    if (this._pause && ((this._pause = !1), this._cb)) {
      let A = this._cb;
      (this._cb = void 0), A();
    }
  };
  Ep.exports = St;
});
var Qc = B((OQ, Cp) => {
  'use strict';
  var lp = new TextDecoder('utf-8'),
    Qp = new Map([
      ['utf-8', lp],
      ['utf8', lp],
    ]);
  function Xx(A) {
    let e;
    for (;;)
      switch (A) {
        case 'utf-8':
        case 'utf8':
          return Ei.utf8;
        case 'latin1':
        case 'ascii':
        case 'us-ascii':
        case 'iso-8859-1':
        case 'iso8859-1':
        case 'iso88591':
        case 'iso_8859-1':
        case 'windows-1252':
        case 'iso_8859-1:1987':
        case 'cp1252':
        case 'x-cp1252':
          return Ei.latin1;
        case 'utf16le':
        case 'utf-16le':
        case 'ucs2':
        case 'ucs-2':
          return Ei.utf16le;
        case 'base64':
          return Ei.base64;
        default:
          if (e === void 0) {
            (e = !0), (A = A.toLowerCase());
            continue;
          }
          return Ei.other.bind(A);
      }
  }
  var Ei = {
    utf8: (A, e) =>
      A.length === 0
        ? ''
        : (typeof A == 'string' && (A = Buffer.from(A, e)),
          A.utf8Slice(0, A.length)),
    latin1: (A, e) =>
      A.length === 0
        ? ''
        : typeof A == 'string'
          ? A
          : A.latin1Slice(0, A.length),
    utf16le: (A, e) =>
      A.length === 0
        ? ''
        : (typeof A == 'string' && (A = Buffer.from(A, e)),
          A.ucs2Slice(0, A.length)),
    base64: (A, e) =>
      A.length === 0
        ? ''
        : (typeof A == 'string' && (A = Buffer.from(A, e)),
          A.base64Slice(0, A.length)),
    other: (A, e) => {
      if (A.length === 0) return '';
      if (
        (typeof A == 'string' && (A = Buffer.from(A, e)), Qp.has(OQ.toString()))
      )
        try {
          return Qp.get(OQ).decode(A);
        } catch {}
      return typeof A == 'string' ? A : A.toString();
    },
  };
  function zx(A, e, t) {
    return A && Xx(t)(A, e);
  }
  Cp.exports = zx;
});
var JQ = B((HtA, dp) => {
  'use strict';
  var Cc = Qc(),
    Bp = /%[a-fA-F0-9][a-fA-F0-9]/g,
    $x = {
      '%00': '\0',
      '%01': '',
      '%02': '',
      '%03': '',
      '%04': '',
      '%05': '',
      '%06': '',
      '%07': '\x07',
      '%08': '\b',
      '%09': '	',
      '%0a': `
`,
      '%0A': `
`,
      '%0b': '\v',
      '%0B': '\v',
      '%0c': '\f',
      '%0C': '\f',
      '%0d': '\r',
      '%0D': '\r',
      '%0e': '',
      '%0E': '',
      '%0f': '',
      '%0F': '',
      '%10': '',
      '%11': '',
      '%12': '',
      '%13': '',
      '%14': '',
      '%15': '',
      '%16': '',
      '%17': '',
      '%18': '',
      '%19': '',
      '%1a': '',
      '%1A': '',
      '%1b': '\x1B',
      '%1B': '\x1B',
      '%1c': '',
      '%1C': '',
      '%1d': '',
      '%1D': '',
      '%1e': '',
      '%1E': '',
      '%1f': '',
      '%1F': '',
      '%20': ' ',
      '%21': '!',
      '%22': '"',
      '%23': '#',
      '%24': '$',
      '%25': '%',
      '%26': '&',
      '%27': "'",
      '%28': '(',
      '%29': ')',
      '%2a': '*',
      '%2A': '*',
      '%2b': '+',
      '%2B': '+',
      '%2c': ',',
      '%2C': ',',
      '%2d': '-',
      '%2D': '-',
      '%2e': '.',
      '%2E': '.',
      '%2f': '/',
      '%2F': '/',
      '%30': '0',
      '%31': '1',
      '%32': '2',
      '%33': '3',
      '%34': '4',
      '%35': '5',
      '%36': '6',
      '%37': '7',
      '%38': '8',
      '%39': '9',
      '%3a': ':',
      '%3A': ':',
      '%3b': ';',
      '%3B': ';',
      '%3c': '<',
      '%3C': '<',
      '%3d': '=',
      '%3D': '=',
      '%3e': '>',
      '%3E': '>',
      '%3f': '?',
      '%3F': '?',
      '%40': '@',
      '%41': 'A',
      '%42': 'B',
      '%43': 'C',
      '%44': 'D',
      '%45': 'E',
      '%46': 'F',
      '%47': 'G',
      '%48': 'H',
      '%49': 'I',
      '%4a': 'J',
      '%4A': 'J',
      '%4b': 'K',
      '%4B': 'K',
      '%4c': 'L',
      '%4C': 'L',
      '%4d': 'M',
      '%4D': 'M',
      '%4e': 'N',
      '%4E': 'N',
      '%4f': 'O',
      '%4F': 'O',
      '%50': 'P',
      '%51': 'Q',
      '%52': 'R',
      '%53': 'S',
      '%54': 'T',
      '%55': 'U',
      '%56': 'V',
      '%57': 'W',
      '%58': 'X',
      '%59': 'Y',
      '%5a': 'Z',
      '%5A': 'Z',
      '%5b': '[',
      '%5B': '[',
      '%5c': '\\',
      '%5C': '\\',
      '%5d': ']',
      '%5D': ']',
      '%5e': '^',
      '%5E': '^',
      '%5f': '_',
      '%5F': '_',
      '%60': '`',
      '%61': 'a',
      '%62': 'b',
      '%63': 'c',
      '%64': 'd',
      '%65': 'e',
      '%66': 'f',
      '%67': 'g',
      '%68': 'h',
      '%69': 'i',
      '%6a': 'j',
      '%6A': 'j',
      '%6b': 'k',
      '%6B': 'k',
      '%6c': 'l',
      '%6C': 'l',
      '%6d': 'm',
      '%6D': 'm',
      '%6e': 'n',
      '%6E': 'n',
      '%6f': 'o',
      '%6F': 'o',
      '%70': 'p',
      '%71': 'q',
      '%72': 'r',
      '%73': 's',
      '%74': 't',
      '%75': 'u',
      '%76': 'v',
      '%77': 'w',
      '%78': 'x',
      '%79': 'y',
      '%7a': 'z',
      '%7A': 'z',
      '%7b': '{',
      '%7B': '{',
      '%7c': '|',
      '%7C': '|',
      '%7d': '}',
      '%7D': '}',
      '%7e': '~',
      '%7E': '~',
      '%7f': '\x7F',
      '%7F': '\x7F',
      '%80': '\x80',
      '%81': '\x81',
      '%82': '\x82',
      '%83': '\x83',
      '%84': '\x84',
      '%85': '\x85',
      '%86': '\x86',
      '%87': '\x87',
      '%88': '\x88',
      '%89': '\x89',
      '%8a': '\x8A',
      '%8A': '\x8A',
      '%8b': '\x8B',
      '%8B': '\x8B',
      '%8c': '\x8C',
      '%8C': '\x8C',
      '%8d': '\x8D',
      '%8D': '\x8D',
      '%8e': '\x8E',
      '%8E': '\x8E',
      '%8f': '\x8F',
      '%8F': '\x8F',
      '%90': '\x90',
      '%91': '\x91',
      '%92': '\x92',
      '%93': '\x93',
      '%94': '\x94',
      '%95': '\x95',
      '%96': '\x96',
      '%97': '\x97',
      '%98': '\x98',
      '%99': '\x99',
      '%9a': '\x9A',
      '%9A': '\x9A',
      '%9b': '\x9B',
      '%9B': '\x9B',
      '%9c': '\x9C',
      '%9C': '\x9C',
      '%9d': '\x9D',
      '%9D': '\x9D',
      '%9e': '\x9E',
      '%9E': '\x9E',
      '%9f': '\x9F',
      '%9F': '\x9F',
      '%a0': '\xA0',
      '%A0': '\xA0',
      '%a1': '\xA1',
      '%A1': '\xA1',
      '%a2': '\xA2',
      '%A2': '\xA2',
      '%a3': '\xA3',
      '%A3': '\xA3',
      '%a4': '\xA4',
      '%A4': '\xA4',
      '%a5': '\xA5',
      '%A5': '\xA5',
      '%a6': '\xA6',
      '%A6': '\xA6',
      '%a7': '\xA7',
      '%A7': '\xA7',
      '%a8': '\xA8',
      '%A8': '\xA8',
      '%a9': '\xA9',
      '%A9': '\xA9',
      '%aa': '\xAA',
      '%Aa': '\xAA',
      '%aA': '\xAA',
      '%AA': '\xAA',
      '%ab': '\xAB',
      '%Ab': '\xAB',
      '%aB': '\xAB',
      '%AB': '\xAB',
      '%ac': '\xAC',
      '%Ac': '\xAC',
      '%aC': '\xAC',
      '%AC': '\xAC',
      '%ad': '\xAD',
      '%Ad': '\xAD',
      '%aD': '\xAD',
      '%AD': '\xAD',
      '%ae': '\xAE',
      '%Ae': '\xAE',
      '%aE': '\xAE',
      '%AE': '\xAE',
      '%af': '\xAF',
      '%Af': '\xAF',
      '%aF': '\xAF',
      '%AF': '\xAF',
      '%b0': '\xB0',
      '%B0': '\xB0',
      '%b1': '\xB1',
      '%B1': '\xB1',
      '%b2': '\xB2',
      '%B2': '\xB2',
      '%b3': '\xB3',
      '%B3': '\xB3',
      '%b4': '\xB4',
      '%B4': '\xB4',
      '%b5': '\xB5',
      '%B5': '\xB5',
      '%b6': '\xB6',
      '%B6': '\xB6',
      '%b7': '\xB7',
      '%B7': '\xB7',
      '%b8': '\xB8',
      '%B8': '\xB8',
      '%b9': '\xB9',
      '%B9': '\xB9',
      '%ba': '\xBA',
      '%Ba': '\xBA',
      '%bA': '\xBA',
      '%BA': '\xBA',
      '%bb': '\xBB',
      '%Bb': '\xBB',
      '%bB': '\xBB',
      '%BB': '\xBB',
      '%bc': '\xBC',
      '%Bc': '\xBC',
      '%bC': '\xBC',
      '%BC': '\xBC',
      '%bd': '\xBD',
      '%Bd': '\xBD',
      '%bD': '\xBD',
      '%BD': '\xBD',
      '%be': '\xBE',
      '%Be': '\xBE',
      '%bE': '\xBE',
      '%BE': '\xBE',
      '%bf': '\xBF',
      '%Bf': '\xBF',
      '%bF': '\xBF',
      '%BF': '\xBF',
      '%c0': '\xC0',
      '%C0': '\xC0',
      '%c1': '\xC1',
      '%C1': '\xC1',
      '%c2': '\xC2',
      '%C2': '\xC2',
      '%c3': '\xC3',
      '%C3': '\xC3',
      '%c4': '\xC4',
      '%C4': '\xC4',
      '%c5': '\xC5',
      '%C5': '\xC5',
      '%c6': '\xC6',
      '%C6': '\xC6',
      '%c7': '\xC7',
      '%C7': '\xC7',
      '%c8': '\xC8',
      '%C8': '\xC8',
      '%c9': '\xC9',
      '%C9': '\xC9',
      '%ca': '\xCA',
      '%Ca': '\xCA',
      '%cA': '\xCA',
      '%CA': '\xCA',
      '%cb': '\xCB',
      '%Cb': '\xCB',
      '%cB': '\xCB',
      '%CB': '\xCB',
      '%cc': '\xCC',
      '%Cc': '\xCC',
      '%cC': '\xCC',
      '%CC': '\xCC',
      '%cd': '\xCD',
      '%Cd': '\xCD',
      '%cD': '\xCD',
      '%CD': '\xCD',
      '%ce': '\xCE',
      '%Ce': '\xCE',
      '%cE': '\xCE',
      '%CE': '\xCE',
      '%cf': '\xCF',
      '%Cf': '\xCF',
      '%cF': '\xCF',
      '%CF': '\xCF',
      '%d0': '\xD0',
      '%D0': '\xD0',
      '%d1': '\xD1',
      '%D1': '\xD1',
      '%d2': '\xD2',
      '%D2': '\xD2',
      '%d3': '\xD3',
      '%D3': '\xD3',
      '%d4': '\xD4',
      '%D4': '\xD4',
      '%d5': '\xD5',
      '%D5': '\xD5',
      '%d6': '\xD6',
      '%D6': '\xD6',
      '%d7': '\xD7',
      '%D7': '\xD7',
      '%d8': '\xD8',
      '%D8': '\xD8',
      '%d9': '\xD9',
      '%D9': '\xD9',
      '%da': '\xDA',
      '%Da': '\xDA',
      '%dA': '\xDA',
      '%DA': '\xDA',
      '%db': '\xDB',
      '%Db': '\xDB',
      '%dB': '\xDB',
      '%DB': '\xDB',
      '%dc': '\xDC',
      '%Dc': '\xDC',
      '%dC': '\xDC',
      '%DC': '\xDC',
      '%dd': '\xDD',
      '%Dd': '\xDD',
      '%dD': '\xDD',
      '%DD': '\xDD',
      '%de': '\xDE',
      '%De': '\xDE',
      '%dE': '\xDE',
      '%DE': '\xDE',
      '%df': '\xDF',
      '%Df': '\xDF',
      '%dF': '\xDF',
      '%DF': '\xDF',
      '%e0': '\xE0',
      '%E0': '\xE0',
      '%e1': '\xE1',
      '%E1': '\xE1',
      '%e2': '\xE2',
      '%E2': '\xE2',
      '%e3': '\xE3',
      '%E3': '\xE3',
      '%e4': '\xE4',
      '%E4': '\xE4',
      '%e5': '\xE5',
      '%E5': '\xE5',
      '%e6': '\xE6',
      '%E6': '\xE6',
      '%e7': '\xE7',
      '%E7': '\xE7',
      '%e8': '\xE8',
      '%E8': '\xE8',
      '%e9': '\xE9',
      '%E9': '\xE9',
      '%ea': '\xEA',
      '%Ea': '\xEA',
      '%eA': '\xEA',
      '%EA': '\xEA',
      '%eb': '\xEB',
      '%Eb': '\xEB',
      '%eB': '\xEB',
      '%EB': '\xEB',
      '%ec': '\xEC',
      '%Ec': '\xEC',
      '%eC': '\xEC',
      '%EC': '\xEC',
      '%ed': '\xED',
      '%Ed': '\xED',
      '%eD': '\xED',
      '%ED': '\xED',
      '%ee': '\xEE',
      '%Ee': '\xEE',
      '%eE': '\xEE',
      '%EE': '\xEE',
      '%ef': '\xEF',
      '%Ef': '\xEF',
      '%eF': '\xEF',
      '%EF': '\xEF',
      '%f0': '\xF0',
      '%F0': '\xF0',
      '%f1': '\xF1',
      '%F1': '\xF1',
      '%f2': '\xF2',
      '%F2': '\xF2',
      '%f3': '\xF3',
      '%F3': '\xF3',
      '%f4': '\xF4',
      '%F4': '\xF4',
      '%f5': '\xF5',
      '%F5': '\xF5',
      '%f6': '\xF6',
      '%F6': '\xF6',
      '%f7': '\xF7',
      '%F7': '\xF7',
      '%f8': '\xF8',
      '%F8': '\xF8',
      '%f9': '\xF9',
      '%F9': '\xF9',
      '%fa': '\xFA',
      '%Fa': '\xFA',
      '%fA': '\xFA',
      '%FA': '\xFA',
      '%fb': '\xFB',
      '%Fb': '\xFB',
      '%fB': '\xFB',
      '%FB': '\xFB',
      '%fc': '\xFC',
      '%Fc': '\xFC',
      '%fC': '\xFC',
      '%FC': '\xFC',
      '%fd': '\xFD',
      '%Fd': '\xFD',
      '%fD': '\xFD',
      '%FD': '\xFD',
      '%fe': '\xFE',
      '%Fe': '\xFE',
      '%fE': '\xFE',
      '%FE': '\xFE',
      '%ff': '\xFF',
      '%Ff': '\xFF',
      '%fF': '\xFF',
      '%FF': '\xFF',
    };
  function up(A) {
    return $x[A];
  }
  var Bc = 0,
    hp = 1,
    YQ = 2,
    Ip = 3;
  function Av(A) {
    let e = [],
      t = Bc,
      r = '',
      o = !1,
      s = !1,
      n = 0,
      i = '',
      a = A.length;
    for (var c = 0; c < a; ++c) {
      let g = A[c];
      if (g === '\\' && o)
        if (s) s = !1;
        else {
          s = !0;
          continue;
        }
      else if (g === '"')
        if (s) s = !1;
        else {
          o ? ((o = !1), (t = Bc)) : (o = !0);
          continue;
        }
      else if (
        (s && o && (i += '\\'), (s = !1), (t === YQ || t === Ip) && g === "'")
      ) {
        t === YQ ? ((t = Ip), (r = i.substring(1))) : (t = hp), (i = '');
        continue;
      } else if (t === Bc && (g === '*' || g === '=') && e.length) {
        (t = g === '*' ? YQ : hp), (e[n] = [i, void 0]), (i = '');
        continue;
      } else if (!o && g === ';') {
        (t = Bc),
          r
            ? (i.length && (i = Cc(i.replace(Bp, up), 'binary', r)), (r = ''))
            : i.length && (i = Cc(i, 'binary', 'utf8')),
          e[n] === void 0 ? (e[n] = i) : (e[n][1] = i),
          (i = ''),
          ++n;
        continue;
      } else if (!o && (g === ' ' || g === '	')) continue;
      i += g;
    }
    return (
      r && i.length
        ? (i = Cc(i.replace(Bp, up), 'binary', r))
        : i && (i = Cc(i, 'binary', 'utf8')),
      e[n] === void 0 ? i && (e[n] = i) : (e[n][1] = i),
      e
    );
  }
  dp.exports = Av;
});
var pp = B((VtA, fp) => {
  'use strict';
  fp.exports = function (e) {
    if (typeof e != 'string') return '';
    for (var t = e.length - 1; t >= 0; --t)
      switch (e.charCodeAt(t)) {
        case 47:
        case 92:
          return (e = e.slice(t + 1)), e === '..' || e === '.' ? '' : e;
      }
    return e === '..' || e === '.' ? '' : e;
  };
});
var mp = B((qtA, Dp) => {
  'use strict';
  var { Readable: yp } = require('node:stream'),
    { inherits: ev } = require('node:util'),
    tv = vQ(),
    wp = JQ(),
    rv = Qc(),
    ov = pp(),
    ko = lc(),
    sv = /^boundary$/i,
    nv = /^form-data$/i,
    iv = /^charset$/i,
    av = /^filename$/i,
    cv = /^name$/i;
  uc.detect = /^multipart\/form-data/i;
  function uc(A, e) {
    let t,
      r,
      o = this,
      s,
      n = e.limits,
      i =
        e.isPartAFile ||
        ((IA, K, gA) => K === 'application/octet-stream' || gA !== void 0),
      a = e.parsedConType || [],
      c = e.defCharset || 'utf8',
      g = e.preservePath,
      E = { highWaterMark: e.fileHwm };
    for (t = 0, r = a.length; t < r; ++t)
      if (Array.isArray(a[t]) && sv.test(a[t][0])) {
        s = a[t][1];
        break;
      }
    function l() {
      j === 0 && qA && !A._done && ((qA = !1), o.end());
    }
    if (typeof s != 'string') throw new Error('Multipart: Boundary not found');
    let C = ko(n, 'fieldSize', 1 * 1024 * 1024),
      Q = ko(n, 'fileSize', 1 / 0),
      h = ko(n, 'files', 1 / 0),
      I = ko(n, 'fields', 1 / 0),
      u = ko(n, 'parts', 1 / 0),
      d = ko(n, 'headerPairs', 2e3),
      f = ko(n, 'headerSize', 80 * 1024),
      D = 0,
      q = 0,
      j = 0,
      J,
      yA,
      qA = !1;
    (this._needDrain = !1),
      (this._pause = !1),
      (this._cb = void 0),
      (this._nparts = 0),
      (this._boy = A);
    let vA = {
      boundary: s,
      maxHeaderPairs: d,
      maxHeaderSize: f,
      partHwm: E.highWaterMark,
      highWaterMark: e.highWaterMark,
    };
    (this.parser = new tv(vA)),
      this.parser
        .on('drain', function () {
          if (((o._needDrain = !1), o._cb && !o._pause)) {
            let IA = o._cb;
            (o._cb = void 0), IA();
          }
        })
        .on('part', function IA(K) {
          if (++o._nparts > u)
            return (
              o.parser.removeListener('part', IA),
              o.parser.on('part', ws),
              (A.hitPartsLimit = !0),
              A.emit('partsLimit'),
              ws(K)
            );
          if (yA) {
            let gA = yA;
            gA.emit('end'), gA.removeAllListeners('end');
          }
          K.on('header', function (gA) {
            let QA,
              qe,
              Pe,
              oc,
              sc,
              ai,
              ci = 0;
            if (
              gA['content-type'] &&
              ((Pe = wp(gA['content-type'][0])), Pe[0])
            ) {
              for (QA = Pe[0].toLowerCase(), t = 0, r = Pe.length; t < r; ++t)
                if (iv.test(Pe[t][0])) {
                  oc = Pe[t][1].toLowerCase();
                  break;
                }
            }
            if (
              (QA === void 0 && (QA = 'text/plain'),
              oc === void 0 && (oc = c),
              gA['content-disposition'])
            ) {
              if (((Pe = wp(gA['content-disposition'][0])), !nv.test(Pe[0])))
                return ws(K);
              for (t = 0, r = Pe.length; t < r; ++t)
                cv.test(Pe[t][0])
                  ? (qe = Pe[t][1])
                  : av.test(Pe[t][0]) && ((ai = Pe[t][1]), g || (ai = ov(ai)));
            } else return ws(K);
            gA['content-transfer-encoding']
              ? (sc = gA['content-transfer-encoding'][0].toLowerCase())
              : (sc = '7bit');
            let sQ, nQ;
            if (i(qe, QA, ai)) {
              if (D === h)
                return (
                  A.hitFilesLimit ||
                    ((A.hitFilesLimit = !0), A.emit('filesLimit')),
                  ws(K)
                );
              if ((++D, A.listenerCount('file') === 0)) {
                o.parser._ignore();
                return;
              }
              ++j;
              let $A = new HQ(E);
              (J = $A),
                $A.on('end', function () {
                  if ((--j, (o._pause = !1), l(), o._cb && !o._needDrain)) {
                    let Pt = o._cb;
                    (o._cb = void 0), Pt();
                  }
                }),
                ($A._read = function (Pt) {
                  if (o._pause && ((o._pause = !1), o._cb && !o._needDrain)) {
                    let Ir = o._cb;
                    (o._cb = void 0), Ir();
                  }
                }),
                A.emit('file', qe, $A, ai, sc, QA),
                (sQ = function (Pt) {
                  if ((ci += Pt.length) > Q) {
                    let Ir = Q - ci + Pt.length;
                    Ir > 0 && $A.push(Pt.slice(0, Ir)),
                      ($A.truncated = !0),
                      ($A.bytesRead = Q),
                      K.removeAllListeners('data'),
                      $A.emit('limit');
                    return;
                  } else $A.push(Pt) || (o._pause = !0);
                  $A.bytesRead = ci;
                }),
                (nQ = function () {
                  (J = void 0), $A.push(null);
                });
            } else {
              if (q === I)
                return (
                  A.hitFieldsLimit ||
                    ((A.hitFieldsLimit = !0), A.emit('fieldsLimit')),
                  ws(K)
                );
              ++q, ++j;
              let $A = '',
                Pt = !1;
              (yA = K),
                (sQ = function (Ir) {
                  if ((ci += Ir.length) > C) {
                    let RG = C - (ci - Ir.length);
                    ($A += Ir.toString('binary', 0, RG)),
                      (Pt = !0),
                      K.removeAllListeners('data');
                  } else $A += Ir.toString('binary');
                }),
                (nQ = function () {
                  (yA = void 0),
                    $A.length && ($A = rv($A, 'binary', oc)),
                    A.emit('field', qe, $A, !1, Pt, sc, QA),
                    --j,
                    l();
                });
            }
            (K._readableState.sync = !1), K.on('data', sQ), K.on('end', nQ);
          }).on('error', function (gA) {
            J && J.emit('error', gA);
          });
        })
        .on('error', function (IA) {
          A.emit('error', IA);
        })
        .on('finish', function () {
          (qA = !0), l();
        });
  }
  uc.prototype.write = function (A, e) {
    let t = this.parser.write(A);
    t && !this._pause ? e() : ((this._needDrain = !t), (this._cb = e));
  };
  uc.prototype.end = function () {
    let A = this;
    A.parser.writable
      ? A.parser.end()
      : A._boy._done ||
        process.nextTick(function () {
          (A._boy._done = !0), A._boy.emit('finish');
        });
  };
  function ws(A) {
    A.resume();
  }
  function HQ(A) {
    yp.call(this, A), (this.bytesRead = 0), (this.truncated = !1);
  }
  ev(HQ, yp);
  HQ.prototype._read = function (A) {};
  Dp.exports = uc;
});
var Rp = B((PtA, kp) => {
  'use strict';
  var gv = /\+/g,
    Ev = [
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
      1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1,
      1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
      0, 0, 0,
    ];
  function VQ() {
    this.buffer = void 0;
  }
  VQ.prototype.write = function (A) {
    A = A.replace(gv, ' ');
    let e = '',
      t = 0,
      r = 0,
      o = A.length;
    for (; t < o; ++t)
      this.buffer !== void 0
        ? Ev[A.charCodeAt(t)]
          ? ((this.buffer += A[t]),
            ++r,
            this.buffer.length === 2 &&
              ((e += String.fromCharCode(parseInt(this.buffer, 16))),
              (this.buffer = void 0)))
          : ((e += '%' + this.buffer), (this.buffer = void 0), --t)
        : A[t] === '%' &&
          (t > r && ((e += A.substring(r, t)), (r = t)),
          (this.buffer = ''),
          ++r);
    return r < o && this.buffer === void 0 && (e += A.substring(r)), e;
  };
  VQ.prototype.reset = function () {
    this.buffer = void 0;
  };
  kp.exports = VQ;
});
var Fp = B((WtA, bp) => {
  'use strict';
  var lv = Rp(),
    ys = Qc(),
    qQ = lc(),
    Qv = /^charset$/i;
  hc.detect = /^application\/x-www-form-urlencoded/i;
  function hc(A, e) {
    let t = e.limits,
      r = e.parsedConType;
    (this.boy = A),
      (this.fieldSizeLimit = qQ(t, 'fieldSize', 1 * 1024 * 1024)),
      (this.fieldNameSizeLimit = qQ(t, 'fieldNameSize', 100)),
      (this.fieldsLimit = qQ(t, 'fields', 1 / 0));
    let o;
    for (var s = 0, n = r.length; s < n; ++s)
      if (Array.isArray(r[s]) && Qv.test(r[s][0])) {
        o = r[s][1].toLowerCase();
        break;
      }
    o === void 0 && (o = e.defCharset || 'utf8'),
      (this.decoder = new lv()),
      (this.charset = o),
      (this._fields = 0),
      (this._state = 'key'),
      (this._checkingBytes = !0),
      (this._bytesKey = 0),
      (this._bytesVal = 0),
      (this._key = ''),
      (this._val = ''),
      (this._keyTrunc = !1),
      (this._valTrunc = !1),
      (this._hitLimit = !1);
  }
  hc.prototype.write = function (A, e) {
    if (this._fields === this.fieldsLimit)
      return (
        this.boy.hitFieldsLimit ||
          ((this.boy.hitFieldsLimit = !0), this.boy.emit('fieldsLimit')),
        e()
      );
    let t,
      r,
      o,
      s = 0,
      n = A.length;
    for (; s < n; )
      if (this._state === 'key') {
        for (t = r = void 0, o = s; o < n; ++o) {
          if ((this._checkingBytes || ++s, A[o] === 61)) {
            t = o;
            break;
          } else if (A[o] === 38) {
            r = o;
            break;
          }
          if (
            this._checkingBytes &&
            this._bytesKey === this.fieldNameSizeLimit
          ) {
            this._hitLimit = !0;
            break;
          } else this._checkingBytes && ++this._bytesKey;
        }
        if (t !== void 0)
          t > s &&
            (this._key += this.decoder.write(A.toString('binary', s, t))),
            (this._state = 'val'),
            (this._hitLimit = !1),
            (this._checkingBytes = !0),
            (this._val = ''),
            (this._bytesVal = 0),
            (this._valTrunc = !1),
            this.decoder.reset(),
            (s = t + 1);
        else if (r !== void 0) {
          ++this._fields;
          let i,
            a = this._keyTrunc;
          if (
            (r > s
              ? (i = this._key +=
                  this.decoder.write(A.toString('binary', s, r)))
              : (i = this._key),
            (this._hitLimit = !1),
            (this._checkingBytes = !0),
            (this._key = ''),
            (this._bytesKey = 0),
            (this._keyTrunc = !1),
            this.decoder.reset(),
            i.length &&
              this.boy.emit('field', ys(i, 'binary', this.charset), '', a, !1),
            (s = r + 1),
            this._fields === this.fieldsLimit)
          )
            return e();
        } else
          this._hitLimit
            ? (o > s &&
                (this._key += this.decoder.write(A.toString('binary', s, o))),
              (s = o),
              (this._bytesKey = this._key.length) === this.fieldNameSizeLimit &&
                ((this._checkingBytes = !1), (this._keyTrunc = !0)))
            : (s < n &&
                (this._key += this.decoder.write(A.toString('binary', s))),
              (s = n));
      } else {
        for (r = void 0, o = s; o < n; ++o) {
          if ((this._checkingBytes || ++s, A[o] === 38)) {
            r = o;
            break;
          }
          if (this._checkingBytes && this._bytesVal === this.fieldSizeLimit) {
            this._hitLimit = !0;
            break;
          } else this._checkingBytes && ++this._bytesVal;
        }
        if (r !== void 0) {
          if (
            (++this._fields,
            r > s &&
              (this._val += this.decoder.write(A.toString('binary', s, r))),
            this.boy.emit(
              'field',
              ys(this._key, 'binary', this.charset),
              ys(this._val, 'binary', this.charset),
              this._keyTrunc,
              this._valTrunc,
            ),
            (this._state = 'key'),
            (this._hitLimit = !1),
            (this._checkingBytes = !0),
            (this._key = ''),
            (this._bytesKey = 0),
            (this._keyTrunc = !1),
            this.decoder.reset(),
            (s = r + 1),
            this._fields === this.fieldsLimit)
          )
            return e();
        } else
          this._hitLimit
            ? (o > s &&
                (this._val += this.decoder.write(A.toString('binary', s, o))),
              (s = o),
              ((this._val === '' && this.fieldSizeLimit === 0) ||
                (this._bytesVal = this._val.length) === this.fieldSizeLimit) &&
                ((this._checkingBytes = !1), (this._valTrunc = !0)))
            : (s < n &&
                (this._val += this.decoder.write(A.toString('binary', s))),
              (s = n));
      }
    e();
  };
  hc.prototype.end = function () {
    this.boy._done ||
      (this._state === 'key' && this._key.length > 0
        ? this.boy.emit(
            'field',
            ys(this._key, 'binary', this.charset),
            '',
            this._keyTrunc,
            !1,
          )
        : this._state === 'val' &&
          this.boy.emit(
            'field',
            ys(this._key, 'binary', this.charset),
            ys(this._val, 'binary', this.charset),
            this._keyTrunc,
            this._valTrunc,
          ),
      (this.boy._done = !0),
      this.boy.emit('finish'));
  };
  bp.exports = hc;
});
var Np = B((_tA, li) => {
  'use strict';
  var PQ = require('node:stream').Writable,
    { inherits: Cv } = require('node:util'),
    Bv = vQ(),
    Sp = mp(),
    Tp = Fp(),
    uv = JQ();
  function fr(A) {
    if (!(this instanceof fr)) return new fr(A);
    if (typeof A != 'object')
      throw new TypeError('Busboy expected an options-Object.');
    if (typeof A.headers != 'object')
      throw new TypeError(
        'Busboy expected an options-Object with headers-attribute.',
      );
    if (typeof A.headers['content-type'] != 'string')
      throw new TypeError('Missing Content-Type-header.');
    let { headers: e, ...t } = A;
    (this.opts = { autoDestroy: !1, ...t }),
      PQ.call(this, this.opts),
      (this._done = !1),
      (this._parser = this.getParserByHeaders(e)),
      (this._finished = !1);
  }
  Cv(fr, PQ);
  fr.prototype.emit = function (A) {
    if (A === 'finish') {
      if (this._done) {
        if (this._finished) return;
      } else {
        this._parser?.end();
        return;
      }
      this._finished = !0;
    }
    PQ.prototype.emit.apply(this, arguments);
  };
  fr.prototype.getParserByHeaders = function (A) {
    let e = uv(A['content-type']),
      t = {
        defCharset: this.opts.defCharset,
        fileHwm: this.opts.fileHwm,
        headers: A,
        highWaterMark: this.opts.highWaterMark,
        isPartAFile: this.opts.isPartAFile,
        limits: this.opts.limits,
        parsedConType: e,
        preservePath: this.opts.preservePath,
      };
    if (Sp.detect.test(e[0])) return new Sp(this, t);
    if (Tp.detect.test(e[0])) return new Tp(this, t);
    throw new Error('Unsupported Content-Type.');
  };
  fr.prototype._write = function (A, e, t) {
    this._parser.write(A, t);
  };
  li.exports = fr;
  li.exports.default = fr;
  li.exports.Busboy = fr;
  li.exports.Dicer = Bv;
});
var Kr = B((jtA, Yp) => {
  'use strict';
  var {
      MessageChannel: hv,
      receiveMessageOnPort: Iv,
    } = require('worker_threads'),
    Up = ['GET', 'HEAD', 'POST'],
    dv = new Set(Up),
    fv = [101, 204, 205, 304],
    Mp = [301, 302, 303, 307, 308],
    pv = new Set(Mp),
    Lp = [
      '1',
      '7',
      '9',
      '11',
      '13',
      '15',
      '17',
      '19',
      '20',
      '21',
      '22',
      '23',
      '25',
      '37',
      '42',
      '43',
      '53',
      '69',
      '77',
      '79',
      '87',
      '95',
      '101',
      '102',
      '103',
      '104',
      '109',
      '110',
      '111',
      '113',
      '115',
      '117',
      '119',
      '123',
      '135',
      '137',
      '139',
      '143',
      '161',
      '179',
      '389',
      '427',
      '465',
      '512',
      '513',
      '514',
      '515',
      '526',
      '530',
      '531',
      '532',
      '540',
      '548',
      '554',
      '556',
      '563',
      '587',
      '601',
      '636',
      '989',
      '990',
      '993',
      '995',
      '1719',
      '1720',
      '1723',
      '2049',
      '3659',
      '4045',
      '5060',
      '5061',
      '6000',
      '6566',
      '6665',
      '6666',
      '6667',
      '6668',
      '6669',
      '6697',
      '10080',
    ],
    wv = new Set(Lp),
    Gp = [
      '',
      'no-referrer',
      'no-referrer-when-downgrade',
      'same-origin',
      'origin',
      'strict-origin',
      'origin-when-cross-origin',
      'strict-origin-when-cross-origin',
      'unsafe-url',
    ],
    yv = new Set(Gp),
    Dv = ['follow', 'manual', 'error'],
    xp = ['GET', 'HEAD', 'OPTIONS', 'TRACE'],
    mv = new Set(xp),
    kv = ['navigate', 'same-origin', 'no-cors', 'cors'],
    Rv = ['omit', 'same-origin', 'include'],
    bv = [
      'default',
      'no-store',
      'reload',
      'no-cache',
      'force-cache',
      'only-if-cached',
    ],
    Fv = [
      'content-encoding',
      'content-language',
      'content-location',
      'content-type',
      'content-length',
    ],
    Sv = ['half'],
    vp = ['CONNECT', 'TRACE', 'TRACK'],
    Tv = new Set(vp),
    Op = [
      'audio',
      'audioworklet',
      'font',
      'image',
      'manifest',
      'paintworklet',
      'script',
      'style',
      'track',
      'video',
      'xslt',
      '',
    ],
    Nv = new Set(Op),
    Uv =
      globalThis.DOMException ??
      (() => {
        try {
          atob('~');
        } catch (A) {
          return Object.getPrototypeOf(A).constructor;
        }
      })(),
    Ds,
    Mv =
      globalThis.structuredClone ??
      function (e, t = void 0) {
        if (arguments.length === 0) throw new TypeError('missing argument');
        return (
          Ds || (Ds = new hv()),
          Ds.port1.unref(),
          Ds.port2.unref(),
          Ds.port1.postMessage(e, t?.transfer),
          Iv(Ds.port2).message
        );
      };
  Yp.exports = {
    DOMException: Uv,
    structuredClone: Mv,
    subresource: Op,
    forbiddenMethods: vp,
    requestBodyHeader: Fv,
    referrerPolicy: Gp,
    requestRedirect: Dv,
    requestMode: kv,
    requestCredentials: Rv,
    requestCache: bv,
    redirectStatus: Mp,
    corsSafeListedMethods: Up,
    nullBodyStatus: fv,
    safeMethods: xp,
    badPorts: Lp,
    requestDuplex: Sv,
    subresourceSet: Nv,
    badPortsSet: wv,
    redirectStatusSet: pv,
    corsSafeListedMethodsSet: dv,
    safeMethodsSet: mv,
    forbiddenMethodsSet: Tv,
    referrerPolicySet: yv,
  };
});
var ms = B((ZtA, Jp) => {
  'use strict';
  var WQ = Symbol.for('undici.globalOrigin.1');
  function Lv() {
    return globalThis[WQ];
  }
  function Gv(A) {
    if (A === void 0) {
      Object.defineProperty(globalThis, WQ, {
        value: void 0,
        writable: !0,
        enumerable: !1,
        configurable: !1,
      });
      return;
    }
    let e = new URL(A);
    if (e.protocol !== 'http:' && e.protocol !== 'https:')
      throw new TypeError(
        `Only http & https urls are allowed, received ${e.protocol}`,
      );
    Object.defineProperty(globalThis, WQ, {
      value: e,
      writable: !0,
      enumerable: !1,
      configurable: !1,
    });
  }
  Jp.exports = { getGlobalOrigin: Lv, setGlobalOrigin: Gv };
});
var Et = B((KtA, Zp) => {
  'use strict';
  var { redirectStatusSet: xv, referrerPolicySet: vv, badPortsSet: Ov } = Kr(),
    { getGlobalOrigin: Yv } = ms(),
    { performance: Jv } = require('perf_hooks'),
    { isBlobLike: Hv, toUSVString: Vv, ReadableStreamFrom: qv } = eA(),
    ks = require('assert'),
    { isUint8Array: Pv } = require('util/types'),
    Hp = [],
    Ic;
  try {
    Ic = require('crypto');
    let A = ['sha256', 'sha384', 'sha512'];
    Hp = Ic.getHashes().filter((e) => A.includes(e));
  } catch {}
  function Vp(A) {
    let e = A.urlList,
      t = e.length;
    return t === 0 ? null : e[t - 1].toString();
  }
  function Wv(A, e) {
    if (!xv.has(A.status)) return null;
    let t = A.headersList.get('location');
    return (
      t !== null && Pp(t) && (t = new URL(t, Vp(A))),
      t && !t.hash && (t.hash = e),
      t
    );
  }
  function Ci(A) {
    return A.urlList[A.urlList.length - 1];
  }
  function _v(A) {
    let e = Ci(A);
    return jp(e) && Ov.has(e.port) ? 'blocked' : 'allowed';
  }
  function jv(A) {
    return (
      A instanceof Error ||
      A?.constructor?.name === 'Error' ||
      A?.constructor?.name === 'DOMException'
    );
  }
  function Zv(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (!(t === 9 || (t >= 32 && t <= 126) || (t >= 128 && t <= 255)))
        return !1;
    }
    return !0;
  }
  function Kv(A) {
    switch (A) {
      case 34:
      case 40:
      case 41:
      case 44:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 123:
      case 125:
        return !1;
      default:
        return A >= 33 && A <= 126;
    }
  }
  function qp(A) {
    if (A.length === 0) return !1;
    for (let e = 0; e < A.length; ++e) if (!Kv(A.charCodeAt(e))) return !1;
    return !0;
  }
  function Xv(A) {
    return qp(A);
  }
  function Pp(A) {
    return !(
      A.startsWith('	') ||
      A.startsWith(' ') ||
      A.endsWith('	') ||
      A.endsWith(' ') ||
      A.includes('\0') ||
      A.includes('\r') ||
      A.includes(`
`)
    );
  }
  function zv(A, e) {
    let { headersList: t } = e,
      r = (t.get('referrer-policy') ?? '').split(','),
      o = '';
    if (r.length > 0)
      for (let s = r.length; s !== 0; s--) {
        let n = r[s - 1].trim();
        if (vv.has(n)) {
          o = n;
          break;
        }
      }
    o !== '' && (A.referrerPolicy = o);
  }
  function $v() {
    return 'allowed';
  }
  function AO() {
    return 'success';
  }
  function eO() {
    return 'success';
  }
  function tO(A) {
    let e = null;
    (e = A.mode), A.headersList.set('sec-fetch-mode', e);
  }
  function rO(A) {
    let e = A.origin;
    if (A.responseTainting === 'cors' || A.mode === 'websocket')
      e && A.headersList.append('origin', e);
    else if (A.method !== 'GET' && A.method !== 'HEAD') {
      switch (A.referrerPolicy) {
        case 'no-referrer':
          e = null;
          break;
        case 'no-referrer-when-downgrade':
        case 'strict-origin':
        case 'strict-origin-when-cross-origin':
          A.origin && ZQ(A.origin) && !ZQ(Ci(A)) && (e = null);
          break;
        case 'same-origin':
          dc(A, Ci(A)) || (e = null);
          break;
        default:
      }
      e && A.headersList.append('origin', e);
    }
  }
  function oO(A) {
    return Jv.now();
  }
  function sO(A) {
    return {
      startTime: A.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: A.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null,
    };
  }
  function nO() {
    return { referrerPolicy: 'strict-origin-when-cross-origin' };
  }
  function iO(A) {
    return { referrerPolicy: A.referrerPolicy };
  }
  function aO(A) {
    let e = A.referrerPolicy;
    ks(e);
    let t = null;
    if (A.referrer === 'client') {
      let i = Yv();
      if (!i || i.origin === 'null') return 'no-referrer';
      t = new URL(i);
    } else A.referrer instanceof URL && (t = A.referrer);
    let r = _Q(t),
      o = _Q(t, !0);
    r.toString().length > 4096 && (r = o);
    let s = dc(A, r),
      n = Qi(r) && !Qi(A.url);
    switch (e) {
      case 'origin':
        return o ?? _Q(t, !0);
      case 'unsafe-url':
        return r;
      case 'same-origin':
        return s ? o : 'no-referrer';
      case 'origin-when-cross-origin':
        return s ? r : o;
      case 'strict-origin-when-cross-origin': {
        let i = Ci(A);
        return dc(r, i) ? r : Qi(r) && !Qi(i) ? 'no-referrer' : o;
      }
      case 'strict-origin':
      case 'no-referrer-when-downgrade':
      default:
        return n ? 'no-referrer' : o;
    }
  }
  function _Q(A, e) {
    return (
      ks(A instanceof URL),
      A.protocol === 'file:' ||
      A.protocol === 'about:' ||
      A.protocol === 'blank:'
        ? 'no-referrer'
        : ((A.username = ''),
          (A.password = ''),
          (A.hash = ''),
          e && ((A.pathname = ''), (A.search = '')),
          A)
    );
  }
  function Qi(A) {
    if (!(A instanceof URL)) return !1;
    if (
      A.href === 'about:blank' ||
      A.href === 'about:srcdoc' ||
      A.protocol === 'data:' ||
      A.protocol === 'file:'
    )
      return !0;
    return e(A.origin);
    function e(t) {
      if (t == null || t === 'null') return !1;
      let r = new URL(t);
      return !!(
        r.protocol === 'https:' ||
        r.protocol === 'wss:' ||
        /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(
          r.hostname,
        ) ||
        r.hostname === 'localhost' ||
        r.hostname.includes('localhost.') ||
        r.hostname.endsWith('.localhost')
      );
    }
  }
  function cO(A, e) {
    if (Ic === void 0) return !0;
    let t = Wp(e);
    if (t === 'no metadata' || t.length === 0) return !0;
    let r = EO(t),
      o = lO(t, r);
    for (let s of o) {
      let n = s.algo,
        i = s.hash,
        a = Ic.createHash(n).update(A).digest('base64');
      if (
        (a[a.length - 1] === '=' &&
          (a[a.length - 2] === '='
            ? (a = a.slice(0, -2))
            : (a = a.slice(0, -1))),
        QO(a, i))
      )
        return !0;
    }
    return !1;
  }
  var gO =
    /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
  function Wp(A) {
    let e = [],
      t = !0;
    for (let r of A.split(' ')) {
      t = !1;
      let o = gO.exec(r);
      if (o === null || o.groups === void 0 || o.groups.algo === void 0)
        continue;
      let s = o.groups.algo.toLowerCase();
      Hp.includes(s) && e.push(o.groups);
    }
    return t === !0 ? 'no metadata' : e;
  }
  function EO(A) {
    let e = A[0].algo;
    if (e[3] === '5') return e;
    for (let t = 1; t < A.length; ++t) {
      let r = A[t];
      if (r.algo[3] === '5') {
        e = 'sha512';
        break;
      } else {
        if (e[3] === '3') continue;
        r.algo[3] === '3' && (e = 'sha384');
      }
    }
    return e;
  }
  function lO(A, e) {
    if (A.length === 1) return A;
    let t = 0;
    for (let r = 0; r < A.length; ++r) A[r].algo === e && (A[t++] = A[r]);
    return (A.length = t), A;
  }
  function QO(A, e) {
    if (A.length !== e.length) return !1;
    for (let t = 0; t < A.length; ++t)
      if (A[t] !== e[t]) {
        if ((A[t] === '+' && e[t] === '-') || (A[t] === '/' && e[t] === '_'))
          continue;
        return !1;
      }
    return !0;
  }
  function CO(A) {}
  function dc(A, e) {
    return (
      (A.origin === e.origin && A.origin === 'null') ||
      (A.protocol === e.protocol &&
        A.hostname === e.hostname &&
        A.port === e.port)
    );
  }
  function BO() {
    let A, e;
    return {
      promise: new Promise((r, o) => {
        (A = r), (e = o);
      }),
      resolve: A,
      reject: e,
    };
  }
  function uO(A) {
    return A.controller.state === 'aborted';
  }
  function hO(A) {
    return (
      A.controller.state === 'aborted' || A.controller.state === 'terminated'
    );
  }
  var KQ = {
    delete: 'DELETE',
    DELETE: 'DELETE',
    get: 'GET',
    GET: 'GET',
    head: 'HEAD',
    HEAD: 'HEAD',
    options: 'OPTIONS',
    OPTIONS: 'OPTIONS',
    post: 'POST',
    POST: 'POST',
    put: 'PUT',
    PUT: 'PUT',
  };
  Object.setPrototypeOf(KQ, null);
  function IO(A) {
    return KQ[A.toLowerCase()] ?? A;
  }
  function dO(A) {
    let e = JSON.stringify(A);
    if (e === void 0) throw new TypeError('Value is not JSON serializable');
    return ks(typeof e == 'string'), e;
  }
  var fO = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
  function pO(A, e, t) {
    let r = { index: 0, kind: t, target: A },
      o = {
        next() {
          if (Object.getPrototypeOf(this) !== o)
            throw new TypeError(
              `'next' called on an object that does not implement interface ${e} Iterator.`,
            );
          let { index: s, kind: n, target: i } = r,
            a = i(),
            c = a.length;
          if (s >= c) return { value: void 0, done: !0 };
          let g = a[s];
          return (r.index = s + 1), wO(g, n);
        },
        [Symbol.toStringTag]: `${e} Iterator`,
      };
    return Object.setPrototypeOf(o, fO), Object.setPrototypeOf({}, o);
  }
  function wO(A, e) {
    let t;
    switch (e) {
      case 'key': {
        t = A[0];
        break;
      }
      case 'value': {
        t = A[1];
        break;
      }
      case 'key+value': {
        t = A;
        break;
      }
    }
    return { value: t, done: !1 };
  }
  async function yO(A, e, t) {
    let r = e,
      o = t,
      s;
    try {
      s = A.stream.getReader();
    } catch (n) {
      o(n);
      return;
    }
    try {
      let n = await _p(s);
      r(n);
    } catch (n) {
      o(n);
    }
  }
  var jQ = globalThis.ReadableStream;
  function DO(A) {
    return (
      jQ || (jQ = require('stream/web').ReadableStream),
      A instanceof jQ ||
        (A[Symbol.toStringTag] === 'ReadableStream' &&
          typeof A.tee == 'function')
    );
  }
  var mO = 65535;
  function kO(A) {
    return A.length < mO
      ? String.fromCharCode(...A)
      : A.reduce((e, t) => e + String.fromCharCode(t), '');
  }
  function RO(A) {
    try {
      A.close();
    } catch (e) {
      if (!e.message.includes('Controller is already closed')) throw e;
    }
  }
  function bO(A) {
    for (let e = 0; e < A.length; e++) ks(A.charCodeAt(e) <= 255);
    return A;
  }
  async function _p(A) {
    let e = [],
      t = 0;
    for (;;) {
      let { done: r, value: o } = await A.read();
      if (r) return Buffer.concat(e, t);
      if (!Pv(o)) throw new TypeError('Received non-Uint8Array chunk');
      e.push(o), (t += o.length);
    }
  }
  function FO(A) {
    ks('protocol' in A);
    let e = A.protocol;
    return e === 'about:' || e === 'blob:' || e === 'data:';
  }
  function ZQ(A) {
    return typeof A == 'string'
      ? A.startsWith('https:')
      : A.protocol === 'https:';
  }
  function jp(A) {
    ks('protocol' in A);
    let e = A.protocol;
    return e === 'http:' || e === 'https:';
  }
  var SO =
    Object.hasOwn || ((A, e) => Object.prototype.hasOwnProperty.call(A, e));
  Zp.exports = {
    isAborted: uO,
    isCancelled: hO,
    createDeferredPromise: BO,
    ReadableStreamFrom: qv,
    toUSVString: Vv,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: CO,
    coarsenedSharedCurrentTime: oO,
    determineRequestsReferrer: aO,
    makePolicyContainer: nO,
    clonePolicyContainer: iO,
    appendFetchMetadata: tO,
    appendRequestOriginHeader: rO,
    TAOCheck: eO,
    corsCheck: AO,
    crossOriginResourcePolicyCheck: $v,
    createOpaqueTimingInfo: sO,
    setRequestReferrerPolicyOnRedirect: zv,
    isValidHTTPToken: qp,
    requestBadPort: _v,
    requestCurrentURL: Ci,
    responseURL: Vp,
    responseLocationURL: Wv,
    isBlobLike: Hv,
    isURLPotentiallyTrustworthy: Qi,
    isValidReasonPhrase: Zv,
    sameOrigin: dc,
    normalizeMethod: IO,
    serializeJavascriptValueToJSONString: dO,
    makeIterator: pO,
    isValidHeaderName: Xv,
    isValidHeaderValue: Pp,
    hasOwn: SO,
    isErrorLike: jv,
    fullyReadBody: yO,
    bytesMatch: cO,
    isReadableStreamLike: DO,
    readableStreamClose: RO,
    isomorphicEncode: bO,
    isomorphicDecode: kO,
    urlIsLocal: FO,
    urlHasHttpsScheme: ZQ,
    urlIsHttpHttpsScheme: jp,
    readAllBytes: _p,
    normalizeMethodRecord: KQ,
    parseMetadata: Wp,
  };
});
var pr = B((XtA, Kp) => {
  'use strict';
  Kp.exports = {
    kUrl: Symbol('url'),
    kHeaders: Symbol('headers'),
    kSignal: Symbol('signal'),
    kState: Symbol('state'),
    kGuard: Symbol('guard'),
    kRealm: Symbol('realm'),
  };
});
var Ie = B((ztA, zp) => {
  'use strict';
  var { types: Wt } = require('util'),
    { hasOwn: Xp, toUSVString: TO } = Et(),
    m = {};
  m.converters = {};
  m.util = {};
  m.errors = {};
  m.errors.exception = function (A) {
    return new TypeError(`${A.header}: ${A.message}`);
  };
  m.errors.conversionFailed = function (A) {
    let e = A.types.length === 1 ? '' : ' one of',
      t = `${A.argument} could not be converted to${e}: ${A.types.join(', ')}.`;
    return m.errors.exception({ header: A.prefix, message: t });
  };
  m.errors.invalidArgument = function (A) {
    return m.errors.exception({
      header: A.prefix,
      message: `"${A.value}" is an invalid ${A.type}.`,
    });
  };
  m.brandCheck = function (A, e, t = void 0) {
    if (t?.strict !== !1 && !(A instanceof e))
      throw new TypeError('Illegal invocation');
    return A?.[Symbol.toStringTag] === e.prototype[Symbol.toStringTag];
  };
  m.argumentLengthCheck = function ({ length: A }, e, t) {
    if (A < e)
      throw m.errors.exception({
        message: `${e} argument${e !== 1 ? 's' : ''} required, but${A ? ' only' : ''} ${A} found.`,
        ...t,
      });
  };
  m.illegalConstructor = function () {
    throw m.errors.exception({
      header: 'TypeError',
      message: 'Illegal constructor',
    });
  };
  m.util.Type = function (A) {
    switch (typeof A) {
      case 'undefined':
        return 'Undefined';
      case 'boolean':
        return 'Boolean';
      case 'string':
        return 'String';
      case 'symbol':
        return 'Symbol';
      case 'number':
        return 'Number';
      case 'bigint':
        return 'BigInt';
      case 'function':
      case 'object':
        return A === null ? 'Null' : 'Object';
    }
  };
  m.util.ConvertToInt = function (A, e, t, r = {}) {
    let o, s;
    e === 64
      ? ((o = Math.pow(2, 53) - 1),
        t === 'unsigned' ? (s = 0) : (s = Math.pow(-2, 53) + 1))
      : t === 'unsigned'
        ? ((s = 0), (o = Math.pow(2, e) - 1))
        : ((s = Math.pow(-2, e) - 1), (o = Math.pow(2, e - 1) - 1));
    let n = Number(A);
    if ((n === 0 && (n = 0), r.enforceRange === !0)) {
      if (
        Number.isNaN(n) ||
        n === Number.POSITIVE_INFINITY ||
        n === Number.NEGATIVE_INFINITY
      )
        throw m.errors.exception({
          header: 'Integer conversion',
          message: `Could not convert ${A} to an integer.`,
        });
      if (((n = m.util.IntegerPart(n)), n < s || n > o))
        throw m.errors.exception({
          header: 'Integer conversion',
          message: `Value must be between ${s}-${o}, got ${n}.`,
        });
      return n;
    }
    return !Number.isNaN(n) && r.clamp === !0
      ? ((n = Math.min(Math.max(n, s), o)),
        Math.floor(n) % 2 === 0 ? (n = Math.floor(n)) : (n = Math.ceil(n)),
        n)
      : Number.isNaN(n) ||
          (n === 0 && Object.is(0, n)) ||
          n === Number.POSITIVE_INFINITY ||
          n === Number.NEGATIVE_INFINITY
        ? 0
        : ((n = m.util.IntegerPart(n)),
          (n = n % Math.pow(2, e)),
          t === 'signed' && n >= Math.pow(2, e) - 1 ? n - Math.pow(2, e) : n);
  };
  m.util.IntegerPart = function (A) {
    let e = Math.floor(Math.abs(A));
    return A < 0 ? -1 * e : e;
  };
  m.sequenceConverter = function (A) {
    return (e) => {
      if (m.util.Type(e) !== 'Object')
        throw m.errors.exception({
          header: 'Sequence',
          message: `Value of type ${m.util.Type(e)} is not an Object.`,
        });
      let t = e?.[Symbol.iterator]?.(),
        r = [];
      if (t === void 0 || typeof t.next != 'function')
        throw m.errors.exception({
          header: 'Sequence',
          message: 'Object is not an iterator.',
        });
      for (;;) {
        let { done: o, value: s } = t.next();
        if (o) break;
        r.push(A(s));
      }
      return r;
    };
  };
  m.recordConverter = function (A, e) {
    return (t) => {
      if (m.util.Type(t) !== 'Object')
        throw m.errors.exception({
          header: 'Record',
          message: `Value of type ${m.util.Type(t)} is not an Object.`,
        });
      let r = {};
      if (!Wt.isProxy(t)) {
        let s = Object.keys(t);
        for (let n of s) {
          let i = A(n),
            a = e(t[n]);
          r[i] = a;
        }
        return r;
      }
      let o = Reflect.ownKeys(t);
      for (let s of o)
        if (Reflect.getOwnPropertyDescriptor(t, s)?.enumerable) {
          let i = A(s),
            a = e(t[s]);
          r[i] = a;
        }
      return r;
    };
  };
  m.interfaceConverter = function (A) {
    return (e, t = {}) => {
      if (t.strict !== !1 && !(e instanceof A))
        throw m.errors.exception({
          header: A.name,
          message: `Expected ${e} to be an instance of ${A.name}.`,
        });
      return e;
    };
  };
  m.dictionaryConverter = function (A) {
    return (e) => {
      let t = m.util.Type(e),
        r = {};
      if (t === 'Null' || t === 'Undefined') return r;
      if (t !== 'Object')
        throw m.errors.exception({
          header: 'Dictionary',
          message: `Expected ${e} to be one of: Null, Undefined, Object.`,
        });
      for (let o of A) {
        let { key: s, defaultValue: n, required: i, converter: a } = o;
        if (i === !0 && !Xp(e, s))
          throw m.errors.exception({
            header: 'Dictionary',
            message: `Missing required key "${s}".`,
          });
        let c = e[s],
          g = Xp(o, 'defaultValue');
        if ((g && c !== null && (c = c ?? n), i || g || c !== void 0)) {
          if (((c = a(c)), o.allowedValues && !o.allowedValues.includes(c)))
            throw m.errors.exception({
              header: 'Dictionary',
              message: `${c} is not an accepted type. Expected one of ${o.allowedValues.join(', ')}.`,
            });
          r[s] = c;
        }
      }
      return r;
    };
  };
  m.nullableConverter = function (A) {
    return (e) => (e === null ? e : A(e));
  };
  m.converters.DOMString = function (A, e = {}) {
    if (A === null && e.legacyNullToEmptyString) return '';
    if (typeof A == 'symbol')
      throw new TypeError(
        'Could not convert argument of type symbol to string.',
      );
    return String(A);
  };
  m.converters.ByteString = function (A) {
    let e = m.converters.DOMString(A);
    for (let t = 0; t < e.length; t++)
      if (e.charCodeAt(t) > 255)
        throw new TypeError(
          `Cannot convert argument to a ByteString because the character at index ${t} has a value of ${e.charCodeAt(t)} which is greater than 255.`,
        );
    return e;
  };
  m.converters.USVString = TO;
  m.converters.boolean = function (A) {
    return !!A;
  };
  m.converters.any = function (A) {
    return A;
  };
  m.converters['long long'] = function (A) {
    return m.util.ConvertToInt(A, 64, 'signed');
  };
  m.converters['unsigned long long'] = function (A) {
    return m.util.ConvertToInt(A, 64, 'unsigned');
  };
  m.converters['unsigned long'] = function (A) {
    return m.util.ConvertToInt(A, 32, 'unsigned');
  };
  m.converters['unsigned short'] = function (A, e) {
    return m.util.ConvertToInt(A, 16, 'unsigned', e);
  };
  m.converters.ArrayBuffer = function (A, e = {}) {
    if (m.util.Type(A) !== 'Object' || !Wt.isAnyArrayBuffer(A))
      throw m.errors.conversionFailed({
        prefix: `${A}`,
        argument: `${A}`,
        types: ['ArrayBuffer'],
      });
    if (e.allowShared === !1 && Wt.isSharedArrayBuffer(A))
      throw m.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    return A;
  };
  m.converters.TypedArray = function (A, e, t = {}) {
    if (
      m.util.Type(A) !== 'Object' ||
      !Wt.isTypedArray(A) ||
      A.constructor.name !== e.name
    )
      throw m.errors.conversionFailed({
        prefix: `${e.name}`,
        argument: `${A}`,
        types: [e.name],
      });
    if (t.allowShared === !1 && Wt.isSharedArrayBuffer(A.buffer))
      throw m.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    return A;
  };
  m.converters.DataView = function (A, e = {}) {
    if (m.util.Type(A) !== 'Object' || !Wt.isDataView(A))
      throw m.errors.exception({
        header: 'DataView',
        message: 'Object is not a DataView.',
      });
    if (e.allowShared === !1 && Wt.isSharedArrayBuffer(A.buffer))
      throw m.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    return A;
  };
  m.converters.BufferSource = function (A, e = {}) {
    if (Wt.isAnyArrayBuffer(A)) return m.converters.ArrayBuffer(A, e);
    if (Wt.isTypedArray(A)) return m.converters.TypedArray(A, A.constructor);
    if (Wt.isDataView(A)) return m.converters.DataView(A, e);
    throw new TypeError(`Could not convert ${A} to a BufferSource.`);
  };
  m.converters['sequence<ByteString>'] = m.sequenceConverter(
    m.converters.ByteString,
  );
  m.converters['sequence<sequence<ByteString>>'] = m.sequenceConverter(
    m.converters['sequence<ByteString>'],
  );
  m.converters['record<ByteString, ByteString>'] = m.recordConverter(
    m.converters.ByteString,
    m.converters.ByteString,
  );
  zp.exports = { webidl: m };
});
var Tt = B(($tA, ow) => {
  var pc = require('assert'),
    { atob: NO } = require('buffer'),
    { isomorphicDecode: UO } = Et(),
    MO = new TextEncoder(),
    fc = /^[!#$%&'*+-.^_|~A-Za-z0-9]+$/,
    LO = /(\u000A|\u000D|\u0009|\u0020)/,
    GO = /[\u0009|\u0020-\u007E|\u0080-\u00FF]/;
  function xO(A) {
    pc(A.protocol === 'data:');
    let e = ew(A, !0);
    e = e.slice(5);
    let t = { position: 0 },
      r = Rs(',', e, t),
      o = r.length;
    if (((r = JO(r, !0, !0)), t.position >= e.length)) return 'failure';
    t.position++;
    let s = e.slice(o + 1),
      n = tw(s);
    if (/;(\u0020){0,}base64$/i.test(r)) {
      let a = UO(n);
      if (((n = OO(a)), n === 'failure')) return 'failure';
      (r = r.slice(0, -6)),
        (r = r.replace(/(\u0020)+$/, '')),
        (r = r.slice(0, -1));
    }
    r.startsWith(';') && (r = 'text/plain' + r);
    let i = zQ(r);
    return (
      i === 'failure' && (i = zQ('text/plain;charset=US-ASCII')),
      { mimeType: i, body: n }
    );
  }
  function ew(A, e = !1) {
    if (!e) return A.href;
    let t = A.href,
      r = A.hash.length;
    return r === 0 ? t : t.substring(0, t.length - r);
  }
  function wc(A, e, t) {
    let r = '';
    for (; t.position < e.length && A(e[t.position]); )
      (r += e[t.position]), t.position++;
    return r;
  }
  function Rs(A, e, t) {
    let r = e.indexOf(A, t.position),
      o = t.position;
    return r === -1
      ? ((t.position = e.length), e.slice(o))
      : ((t.position = r), e.slice(o, t.position));
  }
  function tw(A) {
    let e = MO.encode(A);
    return vO(e);
  }
  function vO(A) {
    let e = [];
    for (let t = 0; t < A.length; t++) {
      let r = A[t];
      if (r !== 37) e.push(r);
      else if (
        r === 37 &&
        !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(A[t + 1], A[t + 2]))
      )
        e.push(37);
      else {
        let o = String.fromCharCode(A[t + 1], A[t + 2]),
          s = Number.parseInt(o, 16);
        e.push(s), (t += 2);
      }
    }
    return Uint8Array.from(e);
  }
  function zQ(A) {
    A = XQ(A, !0, !0);
    let e = { position: 0 },
      t = Rs('/', A, e);
    if (t.length === 0 || !fc.test(t) || e.position > A.length)
      return 'failure';
    e.position++;
    let r = Rs(';', A, e);
    if (((r = XQ(r, !1, !0)), r.length === 0 || !fc.test(r))) return 'failure';
    let o = t.toLowerCase(),
      s = r.toLowerCase(),
      n = { type: o, subtype: s, parameters: new Map(), essence: `${o}/${s}` };
    for (; e.position < A.length; ) {
      e.position++, wc((c) => LO.test(c), A, e);
      let i = wc((c) => c !== ';' && c !== '=', A, e);
      if (((i = i.toLowerCase()), e.position < A.length)) {
        if (A[e.position] === ';') continue;
        e.position++;
      }
      if (e.position > A.length) break;
      let a = null;
      if (A[e.position] === '"') (a = rw(A, e, !0)), Rs(';', A, e);
      else if (((a = Rs(';', A, e)), (a = XQ(a, !1, !0)), a.length === 0))
        continue;
      i.length !== 0 &&
        fc.test(i) &&
        (a.length === 0 || GO.test(a)) &&
        !n.parameters.has(i) &&
        n.parameters.set(i, a);
    }
    return n;
  }
  function OO(A) {
    if (
      ((A = A.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, '')),
      A.length % 4 === 0 && (A = A.replace(/=?=$/, '')),
      A.length % 4 === 1 || /[^+/0-9A-Za-z]/.test(A))
    )
      return 'failure';
    let e = NO(A),
      t = new Uint8Array(e.length);
    for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
    return t;
  }
  function rw(A, e, t) {
    let r = e.position,
      o = '';
    for (
      pc(A[e.position] === '"'), e.position++;
      (o += wc((n) => n !== '"' && n !== '\\', A, e)),
        !(e.position >= A.length);
    ) {
      let s = A[e.position];
      if ((e.position++, s === '\\')) {
        if (e.position >= A.length) {
          o += '\\';
          break;
        }
        (o += A[e.position]), e.position++;
      } else {
        pc(s === '"');
        break;
      }
    }
    return t ? o : A.slice(r, e.position);
  }
  function YO(A) {
    pc(A !== 'failure');
    let { parameters: e, essence: t } = A,
      r = t;
    for (let [o, s] of e.entries())
      (r += ';'),
        (r += o),
        (r += '='),
        fc.test(s) ||
          ((s = s.replace(/(\\|")/g, '\\$1')), (s = '"' + s), (s += '"')),
        (r += s);
    return r;
  }
  function $p(A) {
    return (
      A === '\r' ||
      A ===
        `
` ||
      A === '	' ||
      A === ' '
    );
  }
  function XQ(A, e = !0, t = !0) {
    let r = 0,
      o = A.length - 1;
    if (e) for (; r < A.length && $p(A[r]); r++);
    if (t) for (; o > 0 && $p(A[o]); o--);
    return A.slice(r, o + 1);
  }
  function Aw(A) {
    return (
      A === '\r' ||
      A ===
        `
` ||
      A === '	' ||
      A === '\f' ||
      A === ' '
    );
  }
  function JO(A, e = !0, t = !0) {
    let r = 0,
      o = A.length - 1;
    if (e) for (; r < A.length && Aw(A[r]); r++);
    if (t) for (; o > 0 && Aw(A[o]); o--);
    return A.slice(r, o + 1);
  }
  ow.exports = {
    dataURLProcessor: xO,
    URLSerializer: ew,
    collectASequenceOfCodePoints: wc,
    collectASequenceOfCodePointsFast: Rs,
    stringPercentDecode: tw,
    parseMIMEType: zQ,
    collectAnHTTPQuotedString: rw,
    serializeAMimeType: YO,
  };
});
var yc = B((ArA, cw) => {
  'use strict';
  var { Blob: iw, File: sw } = require('buffer'),
    { types: $Q } = require('util'),
    { kState: We } = pr(),
    { isBlobLike: aw } = Et(),
    { webidl: nA } = Ie(),
    { parseMIMEType: HO, serializeAMimeType: VO } = Tt(),
    { kEnumerableProperty: nw } = eA(),
    qO = new TextEncoder(),
    Bi = class A extends iw {
      constructor(e, t, r = {}) {
        nA.argumentLengthCheck(arguments, 2, { header: 'File constructor' }),
          (e = nA.converters['sequence<BlobPart>'](e)),
          (t = nA.converters.USVString(t)),
          (r = nA.converters.FilePropertyBag(r));
        let o = t,
          s = r.type,
          n;
        A: {
          if (s) {
            if (((s = HO(s)), s === 'failure')) {
              s = '';
              break A;
            }
            s = VO(s).toLowerCase();
          }
          n = r.lastModified;
        }
        super(PO(e, r), { type: s }),
          (this[We] = { name: o, lastModified: n, type: s });
      }
      get name() {
        return nA.brandCheck(this, A), this[We].name;
      }
      get lastModified() {
        return nA.brandCheck(this, A), this[We].lastModified;
      }
      get type() {
        return nA.brandCheck(this, A), this[We].type;
      }
    },
    AC = class A {
      constructor(e, t, r = {}) {
        let o = t,
          s = r.type,
          n = r.lastModified ?? Date.now();
        this[We] = { blobLike: e, name: o, type: s, lastModified: n };
      }
      stream(...e) {
        return nA.brandCheck(this, A), this[We].blobLike.stream(...e);
      }
      arrayBuffer(...e) {
        return nA.brandCheck(this, A), this[We].blobLike.arrayBuffer(...e);
      }
      slice(...e) {
        return nA.brandCheck(this, A), this[We].blobLike.slice(...e);
      }
      text(...e) {
        return nA.brandCheck(this, A), this[We].blobLike.text(...e);
      }
      get size() {
        return nA.brandCheck(this, A), this[We].blobLike.size;
      }
      get type() {
        return nA.brandCheck(this, A), this[We].blobLike.type;
      }
      get name() {
        return nA.brandCheck(this, A), this[We].name;
      }
      get lastModified() {
        return nA.brandCheck(this, A), this[We].lastModified;
      }
      get [Symbol.toStringTag]() {
        return 'File';
      }
    };
  Object.defineProperties(Bi.prototype, {
    [Symbol.toStringTag]: { value: 'File', configurable: !0 },
    name: nw,
    lastModified: nw,
  });
  nA.converters.Blob = nA.interfaceConverter(iw);
  nA.converters.BlobPart = function (A, e) {
    if (nA.util.Type(A) === 'Object') {
      if (aw(A)) return nA.converters.Blob(A, { strict: !1 });
      if (ArrayBuffer.isView(A) || $Q.isAnyArrayBuffer(A))
        return nA.converters.BufferSource(A, e);
    }
    return nA.converters.USVString(A, e);
  };
  nA.converters['sequence<BlobPart>'] = nA.sequenceConverter(
    nA.converters.BlobPart,
  );
  nA.converters.FilePropertyBag = nA.dictionaryConverter([
    {
      key: 'lastModified',
      converter: nA.converters['long long'],
      get defaultValue() {
        return Date.now();
      },
    },
    { key: 'type', converter: nA.converters.DOMString, defaultValue: '' },
    {
      key: 'endings',
      converter: (A) => (
        (A = nA.converters.DOMString(A)),
        (A = A.toLowerCase()),
        A !== 'native' && (A = 'transparent'),
        A
      ),
      defaultValue: 'transparent',
    },
  ]);
  function PO(A, e) {
    let t = [];
    for (let r of A)
      if (typeof r == 'string') {
        let o = r;
        e.endings === 'native' && (o = WO(o)), t.push(qO.encode(o));
      } else
        $Q.isAnyArrayBuffer(r) || $Q.isTypedArray(r)
          ? r.buffer
            ? t.push(new Uint8Array(r.buffer, r.byteOffset, r.byteLength))
            : t.push(new Uint8Array(r))
          : aw(r) && t.push(r);
    return t;
  }
  function WO(A) {
    let e = `
`;
    return (
      process.platform === 'win32' &&
        (e = `\r
`),
      A.replace(/\r?\n/g, e)
    );
  }
  function _O(A) {
    return (
      (sw && A instanceof sw) ||
      A instanceof Bi ||
      (A &&
        (typeof A.stream == 'function' || typeof A.arrayBuffer == 'function') &&
        A[Symbol.toStringTag] === 'File')
    );
  }
  cw.exports = { File: Bi, FileLike: AC, isFileLike: _O };
});
var mc = B((erA, Cw) => {
  'use strict';
  var { isBlobLike: Dc, toUSVString: jO, makeIterator: eC } = Et(),
    { kState: ce } = pr(),
    { File: Qw, FileLike: gw, isFileLike: ZO } = yc(),
    { webidl: EA } = Ie(),
    { Blob: KO, File: tC } = require('buffer'),
    Ew = tC ?? Qw,
    bs = class A {
      constructor(e) {
        if (e !== void 0)
          throw EA.errors.conversionFailed({
            prefix: 'FormData constructor',
            argument: 'Argument 1',
            types: ['undefined'],
          });
        this[ce] = [];
      }
      append(e, t, r = void 0) {
        if (
          (EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 2, { header: 'FormData.append' }),
          arguments.length === 3 && !Dc(t))
        )
          throw new TypeError(
            "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'",
          );
        (e = EA.converters.USVString(e)),
          (t = Dc(t)
            ? EA.converters.Blob(t, { strict: !1 })
            : EA.converters.USVString(t)),
          (r = arguments.length === 3 ? EA.converters.USVString(r) : void 0);
        let o = lw(e, t, r);
        this[ce].push(o);
      }
      delete(e) {
        EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 1, { header: 'FormData.delete' }),
          (e = EA.converters.USVString(e)),
          (this[ce] = this[ce].filter((t) => t.name !== e));
      }
      get(e) {
        EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 1, { header: 'FormData.get' }),
          (e = EA.converters.USVString(e));
        let t = this[ce].findIndex((r) => r.name === e);
        return t === -1 ? null : this[ce][t].value;
      }
      getAll(e) {
        return (
          EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 1, { header: 'FormData.getAll' }),
          (e = EA.converters.USVString(e)),
          this[ce].filter((t) => t.name === e).map((t) => t.value)
        );
      }
      has(e) {
        return (
          EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 1, { header: 'FormData.has' }),
          (e = EA.converters.USVString(e)),
          this[ce].findIndex((t) => t.name === e) !== -1
        );
      }
      set(e, t, r = void 0) {
        if (
          (EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 2, { header: 'FormData.set' }),
          arguments.length === 3 && !Dc(t))
        )
          throw new TypeError(
            "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'",
          );
        (e = EA.converters.USVString(e)),
          (t = Dc(t)
            ? EA.converters.Blob(t, { strict: !1 })
            : EA.converters.USVString(t)),
          (r = arguments.length === 3 ? jO(r) : void 0);
        let o = lw(e, t, r),
          s = this[ce].findIndex((n) => n.name === e);
        s !== -1
          ? (this[ce] = [
              ...this[ce].slice(0, s),
              o,
              ...this[ce].slice(s + 1).filter((n) => n.name !== e),
            ])
          : this[ce].push(o);
      }
      entries() {
        return (
          EA.brandCheck(this, A),
          eC(
            () => this[ce].map((e) => [e.name, e.value]),
            'FormData',
            'key+value',
          )
        );
      }
      keys() {
        return (
          EA.brandCheck(this, A),
          eC(() => this[ce].map((e) => [e.name, e.value]), 'FormData', 'key')
        );
      }
      values() {
        return (
          EA.brandCheck(this, A),
          eC(() => this[ce].map((e) => [e.name, e.value]), 'FormData', 'value')
        );
      }
      forEach(e, t = globalThis) {
        if (
          (EA.brandCheck(this, A),
          EA.argumentLengthCheck(arguments, 1, { header: 'FormData.forEach' }),
          typeof e != 'function')
        )
          throw new TypeError(
            "Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.",
          );
        for (let [r, o] of this) e.apply(t, [o, r, this]);
      }
    };
  bs.prototype[Symbol.iterator] = bs.prototype.entries;
  Object.defineProperties(bs.prototype, {
    [Symbol.toStringTag]: { value: 'FormData', configurable: !0 },
  });
  function lw(A, e, t) {
    if (((A = Buffer.from(A).toString('utf8')), typeof e == 'string'))
      e = Buffer.from(e).toString('utf8');
    else if (
      (ZO(e) ||
        (e =
          e instanceof KO
            ? new Ew([e], 'blob', { type: e.type })
            : new gw(e, 'blob', { type: e.type })),
      t !== void 0)
    ) {
      let r = { type: e.type, lastModified: e.lastModified };
      e =
        (tC && e instanceof tC) || e instanceof Qw
          ? new Ew([e], t, r)
          : new gw(e, t, r);
    }
    return { name: A, value: e };
  }
  Cw.exports = { FormData: bs };
});
var ui = B((trA, yw) => {
  'use strict';
  var XO = Np(),
    Fs = eA(),
    {
      ReadableStreamFrom: zO,
      isBlobLike: Bw,
      isReadableStreamLike: $O,
      readableStreamClose: AY,
      createDeferredPromise: eY,
      fullyReadBody: tY,
    } = Et(),
    { FormData: uw } = mc(),
    { kState: yr } = pr(),
    { webidl: rC } = Ie(),
    { DOMException: dw, structuredClone: rY } = Kr(),
    { Blob: oY, File: sY } = require('buffer'),
    { kBodyUsed: nY } = dA(),
    oC = require('assert'),
    { isErrored: iY } = eA(),
    { isUint8Array: fw, isArrayBuffer: aY } = require('util/types'),
    { File: cY } = yc(),
    { parseMIMEType: gY, serializeAMimeType: EY } = Tt(),
    wr = globalThis.ReadableStream,
    hw = sY ?? cY,
    kc = new TextEncoder(),
    lY = new TextDecoder();
  function pw(A, e = !1) {
    wr || (wr = require('stream/web').ReadableStream);
    let t = null;
    A instanceof wr
      ? (t = A)
      : Bw(A)
        ? (t = A.stream())
        : (t = new wr({
            async pull(a) {
              a.enqueue(typeof o == 'string' ? kc.encode(o) : o),
                queueMicrotask(() => AY(a));
            },
            start() {},
            type: void 0,
          })),
      oC($O(t));
    let r = null,
      o = null,
      s = null,
      n = null;
    if (typeof A == 'string') (o = A), (n = 'text/plain;charset=UTF-8');
    else if (A instanceof URLSearchParams)
      (o = A.toString()),
        (n = 'application/x-www-form-urlencoded;charset=UTF-8');
    else if (aY(A)) o = new Uint8Array(A.slice());
    else if (ArrayBuffer.isView(A))
      o = new Uint8Array(
        A.buffer.slice(A.byteOffset, A.byteOffset + A.byteLength),
      );
    else if (Fs.isFormDataLike(A)) {
      let a = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`,
        c = `--${a}\r
Content-Disposition: form-data`;
      let g = (I) =>
          I.replace(/\n/g, '%0A').replace(/\r/g, '%0D').replace(/"/g, '%22'),
        E = (I) =>
          I.replace(
            /\r?\n|\r/g,
            `\r
`,
          ),
        l = [],
        C = new Uint8Array([13, 10]);
      s = 0;
      let Q = !1;
      for (let [I, u] of A)
        if (typeof u == 'string') {
          let d = kc.encode(
            c +
              `; name="${g(E(I))}"\r
\r
${E(u)}\r
`,
          );
          l.push(d), (s += d.byteLength);
        } else {
          let d = kc.encode(
            `${c}; name="${g(E(I))}"` +
              (u.name ? `; filename="${g(u.name)}"` : '') +
              `\r
Content-Type: ${u.type || 'application/octet-stream'}\r
\r
`,
          );
          l.push(d, u, C),
            typeof u.size == 'number'
              ? (s += d.byteLength + u.size + C.byteLength)
              : (Q = !0);
        }
      let h = kc.encode(`--${a}--`);
      l.push(h),
        (s += h.byteLength),
        Q && (s = null),
        (o = A),
        (r = async function* () {
          for (let I of l) I.stream ? yield* I.stream() : yield I;
        }),
        (n = 'multipart/form-data; boundary=' + a);
    } else if (Bw(A)) (o = A), (s = A.size), A.type && (n = A.type);
    else if (typeof A[Symbol.asyncIterator] == 'function') {
      if (e) throw new TypeError('keepalive');
      if (Fs.isDisturbed(A) || A.locked)
        throw new TypeError(
          'Response body object should not be disturbed or locked',
        );
      t = A instanceof wr ? A : zO(A);
    }
    if (
      ((typeof o == 'string' || Fs.isBuffer(o)) && (s = Buffer.byteLength(o)),
      r != null)
    ) {
      let a;
      t = new wr({
        async start() {
          a = r(A)[Symbol.asyncIterator]();
        },
        async pull(c) {
          let { value: g, done: E } = await a.next();
          return (
            E
              ? queueMicrotask(() => {
                  c.close();
                })
              : iY(t) || c.enqueue(new Uint8Array(g)),
            c.desiredSize > 0
          );
        },
        async cancel(c) {
          await a.return();
        },
        type: void 0,
      });
    }
    return [{ stream: t, source: o, length: s }, n];
  }
  function QY(A, e = !1) {
    return (
      wr || (wr = require('stream/web').ReadableStream),
      A instanceof wr &&
        (oC(!Fs.isDisturbed(A), 'The body has already been consumed.'),
        oC(!A.locked, 'The stream is locked.')),
      pw(A, e)
    );
  }
  function CY(A) {
    let [e, t] = A.stream.tee(),
      r = rY(t, { transfer: [t] }),
      [, o] = r.tee();
    return (A.stream = e), { stream: o, length: A.length, source: A.source };
  }
  async function* Iw(A) {
    if (A)
      if (fw(A)) yield A;
      else {
        let e = A.stream;
        if (Fs.isDisturbed(e))
          throw new TypeError('The body has already been consumed.');
        if (e.locked) throw new TypeError('The stream is locked.');
        (e[nY] = !0), yield* e;
      }
  }
  function sC(A) {
    if (A.aborted) throw new dw('The operation was aborted.', 'AbortError');
  }
  function BY(A) {
    return {
      blob() {
        return Rc(
          this,
          (t) => {
            let r = dY(this);
            return (
              r === 'failure' ? (r = '') : r && (r = EY(r)),
              new oY([t], { type: r })
            );
          },
          A,
        );
      },
      arrayBuffer() {
        return Rc(this, (t) => new Uint8Array(t).buffer, A);
      },
      text() {
        return Rc(this, ww, A);
      },
      json() {
        return Rc(this, IY, A);
      },
      async formData() {
        rC.brandCheck(this, A), sC(this[yr]);
        let t = this.headers.get('Content-Type');
        if (/multipart\/form-data/.test(t)) {
          let r = {};
          for (let [i, a] of this.headers) r[i.toLowerCase()] = a;
          let o = new uw(),
            s;
          try {
            s = new XO({ headers: r, preservePath: !0 });
          } catch (i) {
            throw new dw(`${i}`, 'AbortError');
          }
          s.on('field', (i, a) => {
            o.append(i, a);
          }),
            s.on('file', (i, a, c, g, E) => {
              let l = [];
              if (g === 'base64' || g.toLowerCase() === 'base64') {
                let C = '';
                a.on('data', (Q) => {
                  C += Q.toString().replace(/[\r\n]/gm, '');
                  let h = C.length - (C.length % 4);
                  l.push(Buffer.from(C.slice(0, h), 'base64')),
                    (C = C.slice(h));
                }),
                  a.on('end', () => {
                    l.push(Buffer.from(C, 'base64')),
                      o.append(i, new hw(l, c, { type: E }));
                  });
              } else
                a.on('data', (C) => {
                  l.push(C);
                }),
                  a.on('end', () => {
                    o.append(i, new hw(l, c, { type: E }));
                  });
            });
          let n = new Promise((i, a) => {
            s.on('finish', i), s.on('error', (c) => a(new TypeError(c)));
          });
          if (this.body !== null)
            for await (let i of Iw(this[yr].body)) s.write(i);
          return s.end(), await n, o;
        } else if (/application\/x-www-form-urlencoded/.test(t)) {
          let r;
          try {
            let s = '',
              n = new TextDecoder('utf-8', { ignoreBOM: !0 });
            for await (let i of Iw(this[yr].body)) {
              if (!fw(i)) throw new TypeError('Expected Uint8Array chunk');
              s += n.decode(i, { stream: !0 });
            }
            (s += n.decode()), (r = new URLSearchParams(s));
          } catch (s) {
            throw Object.assign(new TypeError(), { cause: s });
          }
          let o = new uw();
          for (let [s, n] of r) o.append(s, n);
          return o;
        } else
          throw (
            (await Promise.resolve(),
            sC(this[yr]),
            rC.errors.exception({
              header: `${A.name}.formData`,
              message: 'Could not parse content as FormData.',
            }))
          );
      },
    };
  }
  function uY(A) {
    Object.assign(A.prototype, BY(A));
  }
  async function Rc(A, e, t) {
    if ((rC.brandCheck(A, t), sC(A[yr]), hY(A[yr].body)))
      throw new TypeError('Body is unusable');
    let r = eY(),
      o = (n) => r.reject(n),
      s = (n) => {
        try {
          r.resolve(e(n));
        } catch (i) {
          o(i);
        }
      };
    return A[yr].body == null
      ? (s(new Uint8Array()), r.promise)
      : (await tY(A[yr].body, s, o), r.promise);
  }
  function hY(A) {
    return A != null && (A.stream.locked || Fs.isDisturbed(A.stream));
  }
  function ww(A) {
    return A.length === 0
      ? ''
      : (A[0] === 239 && A[1] === 187 && A[2] === 191 && (A = A.subarray(3)),
        lY.decode(A));
  }
  function IY(A) {
    return JSON.parse(ww(A));
  }
  function dY(A) {
    let { headersList: e } = A[yr],
      t = e.get('content-type');
    return t === null ? 'failure' : gY(t);
  }
  yw.exports = {
    extractBody: pw,
    safelyExtractBody: QY,
    cloneBody: CY,
    mixinBody: uY,
  };
});
var Rw = B((rrA, kw) => {
  'use strict';
  var { InvalidArgumentError: fA, NotSupportedError: fY } = uA(),
    Dr = require('assert'),
    {
      kHTTP2BuildRequest: pY,
      kHTTP2CopyHeaders: wY,
      kHTTP1BuildRequest: yY,
    } = dA(),
    Re = eA(),
    Dw = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/,
    mw = /[^\t\x20-\x7e\x80-\xff]/,
    DY = /[^\u0021-\u00ff]/,
    Nt = Symbol('handler'),
    PA = {},
    nC;
  try {
    let A = require('diagnostics_channel');
    (PA.create = A.channel('undici:request:create')),
      (PA.bodySent = A.channel('undici:request:bodySent')),
      (PA.headers = A.channel('undici:request:headers')),
      (PA.trailers = A.channel('undici:request:trailers')),
      (PA.error = A.channel('undici:request:error'));
  } catch {
    (PA.create = { hasSubscribers: !1 }),
      (PA.bodySent = { hasSubscribers: !1 }),
      (PA.headers = { hasSubscribers: !1 }),
      (PA.trailers = { hasSubscribers: !1 }),
      (PA.error = { hasSubscribers: !1 });
  }
  var iC = class A {
    constructor(
      e,
      {
        path: t,
        method: r,
        body: o,
        headers: s,
        query: n,
        idempotent: i,
        blocking: a,
        upgrade: c,
        headersTimeout: g,
        bodyTimeout: E,
        reset: l,
        throwOnError: C,
        expectContinue: Q,
      },
      h,
    ) {
      if (typeof t != 'string') throw new fA('path must be a string');
      if (
        t[0] !== '/' &&
        !(t.startsWith('http://') || t.startsWith('https://')) &&
        r !== 'CONNECT'
      )
        throw new fA('path must be an absolute URL or start with a slash');
      if (DY.exec(t) !== null) throw new fA('invalid request path');
      if (typeof r != 'string') throw new fA('method must be a string');
      if (Dw.exec(r) === null) throw new fA('invalid request method');
      if (c && typeof c != 'string') throw new fA('upgrade must be a string');
      if (g != null && (!Number.isFinite(g) || g < 0))
        throw new fA('invalid headersTimeout');
      if (E != null && (!Number.isFinite(E) || E < 0))
        throw new fA('invalid bodyTimeout');
      if (l != null && typeof l != 'boolean') throw new fA('invalid reset');
      if (Q != null && typeof Q != 'boolean')
        throw new fA('invalid expectContinue');
      if (
        ((this.headersTimeout = g),
        (this.bodyTimeout = E),
        (this.throwOnError = C === !0),
        (this.method = r),
        (this.abort = null),
        o == null)
      )
        this.body = null;
      else if (Re.isStream(o)) {
        this.body = o;
        let I = this.body._readableState;
        (!I || !I.autoDestroy) &&
          ((this.endHandler = function () {
            Re.destroy(this);
          }),
          this.body.on('end', this.endHandler)),
          (this.errorHandler = (u) => {
            this.abort ? this.abort(u) : (this.error = u);
          }),
          this.body.on('error', this.errorHandler);
      } else if (Re.isBuffer(o)) this.body = o.byteLength ? o : null;
      else if (ArrayBuffer.isView(o))
        this.body = o.buffer.byteLength
          ? Buffer.from(o.buffer, o.byteOffset, o.byteLength)
          : null;
      else if (o instanceof ArrayBuffer)
        this.body = o.byteLength ? Buffer.from(o) : null;
      else if (typeof o == 'string')
        this.body = o.length ? Buffer.from(o) : null;
      else if (Re.isFormDataLike(o) || Re.isIterable(o) || Re.isBlobLike(o))
        this.body = o;
      else
        throw new fA(
          'body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable',
        );
      if (
        ((this.completed = !1),
        (this.aborted = !1),
        (this.upgrade = c || null),
        (this.path = n ? Re.buildURL(t, n) : t),
        (this.origin = e),
        (this.idempotent = i ?? (r === 'HEAD' || r === 'GET')),
        (this.blocking = a ?? !1),
        (this.reset = l ?? null),
        (this.host = null),
        (this.contentLength = null),
        (this.contentType = null),
        (this.headers = ''),
        (this.expectContinue = Q ?? !1),
        Array.isArray(s))
      ) {
        if (s.length % 2 !== 0) throw new fA('headers array must be even');
        for (let I = 0; I < s.length; I += 2) hi(this, s[I], s[I + 1]);
      } else if (s && typeof s == 'object') {
        let I = Object.keys(s);
        for (let u = 0; u < I.length; u++) {
          let d = I[u];
          hi(this, d, s[d]);
        }
      } else if (s != null)
        throw new fA('headers must be an object or an array');
      if (Re.isFormDataLike(this.body)) {
        if (Re.nodeMajor < 16 || (Re.nodeMajor === 16 && Re.nodeMinor < 8))
          throw new fA(
            'Form-Data bodies are only supported in node v16.8 and newer.',
          );
        nC || (nC = ui().extractBody);
        let [I, u] = nC(o);
        this.contentType == null &&
          ((this.contentType = u),
          (this.headers += `content-type: ${u}\r
`)),
          (this.body = I.stream),
          (this.contentLength = I.length);
      } else
        Re.isBlobLike(o) &&
          this.contentType == null &&
          o.type &&
          ((this.contentType = o.type),
          (this.headers += `content-type: ${o.type}\r
`));
      Re.validateHandler(h, r, c),
        (this.servername = Re.getServerName(this.host)),
        (this[Nt] = h),
        PA.create.hasSubscribers && PA.create.publish({ request: this });
    }
    onBodySent(e) {
      if (this[Nt].onBodySent)
        try {
          return this[Nt].onBodySent(e);
        } catch (t) {
          this.abort(t);
        }
    }
    onRequestSent() {
      if (
        (PA.bodySent.hasSubscribers && PA.bodySent.publish({ request: this }),
        this[Nt].onRequestSent)
      )
        try {
          return this[Nt].onRequestSent();
        } catch (e) {
          this.abort(e);
        }
    }
    onConnect(e) {
      if ((Dr(!this.aborted), Dr(!this.completed), this.error)) e(this.error);
      else return (this.abort = e), this[Nt].onConnect(e);
    }
    onHeaders(e, t, r, o) {
      Dr(!this.aborted),
        Dr(!this.completed),
        PA.headers.hasSubscribers &&
          PA.headers.publish({
            request: this,
            response: { statusCode: e, headers: t, statusText: o },
          });
      try {
        return this[Nt].onHeaders(e, t, r, o);
      } catch (s) {
        this.abort(s);
      }
    }
    onData(e) {
      Dr(!this.aborted), Dr(!this.completed);
      try {
        return this[Nt].onData(e);
      } catch (t) {
        return this.abort(t), !1;
      }
    }
    onUpgrade(e, t, r) {
      return (
        Dr(!this.aborted), Dr(!this.completed), this[Nt].onUpgrade(e, t, r)
      );
    }
    onComplete(e) {
      this.onFinally(),
        Dr(!this.aborted),
        (this.completed = !0),
        PA.trailers.hasSubscribers &&
          PA.trailers.publish({ request: this, trailers: e });
      try {
        return this[Nt].onComplete(e);
      } catch (t) {
        this.onError(t);
      }
    }
    onError(e) {
      if (
        (this.onFinally(),
        PA.error.hasSubscribers &&
          PA.error.publish({ request: this, error: e }),
        !this.aborted)
      )
        return (this.aborted = !0), this[Nt].onError(e);
    }
    onFinally() {
      this.errorHandler &&
        (this.body.off('error', this.errorHandler), (this.errorHandler = null)),
        this.endHandler &&
          (this.body.off('end', this.endHandler), (this.endHandler = null));
    }
    addHeader(e, t) {
      return hi(this, e, t), this;
    }
    static [yY](e, t, r) {
      return new A(e, t, r);
    }
    static [pY](e, t, r) {
      let o = t.headers;
      t = { ...t, headers: null };
      let s = new A(e, t, r);
      if (((s.headers = {}), Array.isArray(o))) {
        if (o.length % 2 !== 0) throw new fA('headers array must be even');
        for (let n = 0; n < o.length; n += 2) hi(s, o[n], o[n + 1], !0);
      } else if (o && typeof o == 'object') {
        let n = Object.keys(o);
        for (let i = 0; i < n.length; i++) {
          let a = n[i];
          hi(s, a, o[a], !0);
        }
      } else if (o != null)
        throw new fA('headers must be an object or an array');
      return s;
    }
    static [wY](e) {
      let t = e.split(`\r
`),
        r = {};
      for (let o of t) {
        let [s, n] = o.split(': ');
        n == null || n.length === 0 || (r[s] ? (r[s] += `,${n}`) : (r[s] = n));
      }
      return r;
    }
  };
  function Ro(A, e, t) {
    if (e && typeof e == 'object') throw new fA(`invalid ${A} header`);
    if (((e = e != null ? `${e}` : ''), mw.exec(e) !== null))
      throw new fA(`invalid ${A} header`);
    return t
      ? e
      : `${A}: ${e}\r
`;
  }
  function hi(A, e, t, r = !1) {
    if (t && typeof t == 'object' && !Array.isArray(t))
      throw new fA(`invalid ${e} header`);
    if (t === void 0) return;
    if (A.host === null && e.length === 4 && e.toLowerCase() === 'host') {
      if (mw.exec(t) !== null) throw new fA(`invalid ${e} header`);
      A.host = t;
    } else if (
      A.contentLength === null &&
      e.length === 14 &&
      e.toLowerCase() === 'content-length'
    ) {
      if (
        ((A.contentLength = parseInt(t, 10)), !Number.isFinite(A.contentLength))
      )
        throw new fA('invalid content-length header');
    } else if (
      A.contentType === null &&
      e.length === 12 &&
      e.toLowerCase() === 'content-type'
    )
      (A.contentType = t),
        r ? (A.headers[e] = Ro(e, t, r)) : (A.headers += Ro(e, t));
    else {
      if (e.length === 17 && e.toLowerCase() === 'transfer-encoding')
        throw new fA('invalid transfer-encoding header');
      if (e.length === 10 && e.toLowerCase() === 'connection') {
        let o = typeof t == 'string' ? t.toLowerCase() : null;
        if (o !== 'close' && o !== 'keep-alive')
          throw new fA('invalid connection header');
        o === 'close' && (A.reset = !0);
      } else {
        if (e.length === 10 && e.toLowerCase() === 'keep-alive')
          throw new fA('invalid keep-alive header');
        if (e.length === 7 && e.toLowerCase() === 'upgrade')
          throw new fA('invalid upgrade header');
        if (e.length === 6 && e.toLowerCase() === 'expect')
          throw new fY('expect header not supported');
        if (Dw.exec(e) === null) throw new fA('invalid header key');
        if (Array.isArray(t))
          for (let o = 0; o < t.length; o++)
            r
              ? A.headers[e]
                ? (A.headers[e] += `,${Ro(e, t[o], r)}`)
                : (A.headers[e] = Ro(e, t[o], r))
              : (A.headers += Ro(e, t[o]));
        else r ? (A.headers[e] = Ro(e, t, r)) : (A.headers += Ro(e, t));
      }
    }
  }
  kw.exports = iC;
});
var bc = B((orA, bw) => {
  'use strict';
  var mY = require('events'),
    aC = class extends mY {
      dispatch() {
        throw new Error('not implemented');
      }
      close() {
        throw new Error('not implemented');
      }
      destroy() {
        throw new Error('not implemented');
      }
    };
  bw.exports = aC;
});
var di = B((srA, Fw) => {
  'use strict';
  var kY = bc(),
    {
      ClientDestroyedError: cC,
      ClientClosedError: RY,
      InvalidArgumentError: Ss,
    } = uA(),
    { kDestroy: bY, kClose: FY, kDispatch: gC, kInterceptors: bo } = dA(),
    Ts = Symbol('destroyed'),
    Ii = Symbol('closed'),
    mr = Symbol('onDestroyed'),
    Ns = Symbol('onClosed'),
    Fc = Symbol('Intercepted Dispatch'),
    EC = class extends kY {
      constructor() {
        super(),
          (this[Ts] = !1),
          (this[mr] = null),
          (this[Ii] = !1),
          (this[Ns] = []);
      }
      get destroyed() {
        return this[Ts];
      }
      get closed() {
        return this[Ii];
      }
      get interceptors() {
        return this[bo];
      }
      set interceptors(e) {
        if (e) {
          for (let t = e.length - 1; t >= 0; t--)
            if (typeof this[bo][t] != 'function')
              throw new Ss('interceptor must be an function');
        }
        this[bo] = e;
      }
      close(e) {
        if (e === void 0)
          return new Promise((r, o) => {
            this.close((s, n) => (s ? o(s) : r(n)));
          });
        if (typeof e != 'function') throw new Ss('invalid callback');
        if (this[Ts]) {
          queueMicrotask(() => e(new cC(), null));
          return;
        }
        if (this[Ii]) {
          this[Ns] ? this[Ns].push(e) : queueMicrotask(() => e(null, null));
          return;
        }
        (this[Ii] = !0), this[Ns].push(e);
        let t = () => {
          let r = this[Ns];
          this[Ns] = null;
          for (let o = 0; o < r.length; o++) r[o](null, null);
        };
        this[FY]()
          .then(() => this.destroy())
          .then(() => {
            queueMicrotask(t);
          });
      }
      destroy(e, t) {
        if ((typeof e == 'function' && ((t = e), (e = null)), t === void 0))
          return new Promise((o, s) => {
            this.destroy(e, (n, i) => (n ? s(n) : o(i)));
          });
        if (typeof t != 'function') throw new Ss('invalid callback');
        if (this[Ts]) {
          this[mr] ? this[mr].push(t) : queueMicrotask(() => t(null, null));
          return;
        }
        e || (e = new cC()),
          (this[Ts] = !0),
          (this[mr] = this[mr] || []),
          this[mr].push(t);
        let r = () => {
          let o = this[mr];
          this[mr] = null;
          for (let s = 0; s < o.length; s++) o[s](null, null);
        };
        this[bY](e).then(() => {
          queueMicrotask(r);
        });
      }
      [Fc](e, t) {
        if (!this[bo] || this[bo].length === 0)
          return (this[Fc] = this[gC]), this[gC](e, t);
        let r = this[gC].bind(this);
        for (let o = this[bo].length - 1; o >= 0; o--) r = this[bo][o](r);
        return (this[Fc] = r), r(e, t);
      }
      dispatch(e, t) {
        if (!t || typeof t != 'object')
          throw new Ss('handler must be an object');
        try {
          if (!e || typeof e != 'object')
            throw new Ss('opts must be an object.');
          if (this[Ts] || this[mr]) throw new cC();
          if (this[Ii]) throw new RY();
          return this[Fc](e, t);
        } catch (r) {
          if (typeof t.onError != 'function')
            throw new Ss('invalid onError method');
          return t.onError(r), !1;
        }
      }
    };
  Fw.exports = EC;
});
var fi = B((arA, Nw) => {
  'use strict';
  var SY = require('net'),
    Sw = require('assert'),
    Tw = eA(),
    { InvalidArgumentError: TY, ConnectTimeoutError: NY } = uA(),
    lC,
    QC;
  global.FinalizationRegistry && !process.env.NODE_V8_COVERAGE
    ? (QC = class {
        constructor(e) {
          (this._maxCachedSessions = e),
            (this._sessionCache = new Map()),
            (this._sessionRegistry = new global.FinalizationRegistry((t) => {
              if (this._sessionCache.size < this._maxCachedSessions) return;
              let r = this._sessionCache.get(t);
              r !== void 0 &&
                r.deref() === void 0 &&
                this._sessionCache.delete(t);
            }));
        }
        get(e) {
          let t = this._sessionCache.get(e);
          return t ? t.deref() : null;
        }
        set(e, t) {
          this._maxCachedSessions !== 0 &&
            (this._sessionCache.set(e, new WeakRef(t)),
            this._sessionRegistry.register(t, e));
        }
      })
    : (QC = class {
        constructor(e) {
          (this._maxCachedSessions = e), (this._sessionCache = new Map());
        }
        get(e) {
          return this._sessionCache.get(e);
        }
        set(e, t) {
          if (this._maxCachedSessions !== 0) {
            if (this._sessionCache.size >= this._maxCachedSessions) {
              let { value: r } = this._sessionCache.keys().next();
              this._sessionCache.delete(r);
            }
            this._sessionCache.set(e, t);
          }
        }
      });
  function UY({
    allowH2: A,
    maxCachedSessions: e,
    socketPath: t,
    timeout: r,
    ...o
  }) {
    if (e != null && (!Number.isInteger(e) || e < 0))
      throw new TY('maxCachedSessions must be a positive integer or zero');
    let s = { path: t, ...o },
      n = new QC(e ?? 100);
    return (
      (r = r ?? 1e4),
      (A = A ?? !1),
      function (
        {
          hostname: a,
          host: c,
          protocol: g,
          port: E,
          servername: l,
          localAddress: C,
          httpSocket: Q,
        },
        h,
      ) {
        let I;
        if (g === 'https:') {
          lC || (lC = require('tls')),
            (l = l || s.servername || Tw.getServerName(c) || null);
          let d = l || a,
            f = n.get(d) || null;
          Sw(d),
            (I = lC.connect({
              highWaterMark: 16384,
              ...s,
              servername: l,
              session: f,
              localAddress: C,
              ALPNProtocols: A ? ['http/1.1', 'h2'] : ['http/1.1'],
              socket: Q,
              port: E || 443,
              host: a,
            })),
            I.on('session', function (D) {
              n.set(d, D);
            });
        } else
          Sw(!Q, 'httpSocket can only be sent on TLS update'),
            (I = SY.connect({
              highWaterMark: 64 * 1024,
              ...s,
              localAddress: C,
              port: E || 80,
              host: a,
            }));
        if (s.keepAlive == null || s.keepAlive) {
          let d =
            s.keepAliveInitialDelay === void 0 ? 6e4 : s.keepAliveInitialDelay;
          I.setKeepAlive(!0, d);
        }
        let u = MY(() => LY(I), r);
        return (
          I.setNoDelay(!0)
            .once(g === 'https:' ? 'secureConnect' : 'connect', function () {
              if ((u(), h)) {
                let d = h;
                (h = null), d(null, this);
              }
            })
            .on('error', function (d) {
              if ((u(), h)) {
                let f = h;
                (h = null), f(d);
              }
            }),
          I
        );
      }
    );
  }
  function MY(A, e) {
    if (!e) return () => {};
    let t = null,
      r = null,
      o = setTimeout(() => {
        t = setImmediate(() => {
          process.platform === 'win32' ? (r = setImmediate(() => A())) : A();
        });
      }, e);
    return () => {
      clearTimeout(o), clearImmediate(t), clearImmediate(r);
    };
  }
  function LY(A) {
    Tw.destroy(A, new NY());
  }
  Nw.exports = UY;
});
var Uw = B((Sc) => {
  'use strict';
  Object.defineProperty(Sc, '__esModule', { value: !0 });
  Sc.enumToMap = void 0;
  function GY(A) {
    let e = {};
    return (
      Object.keys(A).forEach((t) => {
        let r = A[t];
        typeof r == 'number' && (e[t] = r);
      }),
      e
    );
  }
  Sc.enumToMap = GY;
});
var Mw = B((w) => {
  'use strict';
  Object.defineProperty(w, '__esModule', { value: !0 });
  w.SPECIAL_HEADERS =
    w.HEADER_STATE =
    w.MINOR =
    w.MAJOR =
    w.CONNECTION_TOKEN_CHARS =
    w.HEADER_CHARS =
    w.TOKEN =
    w.STRICT_TOKEN =
    w.HEX =
    w.URL_CHAR =
    w.STRICT_URL_CHAR =
    w.USERINFO_CHARS =
    w.MARK =
    w.ALPHANUM =
    w.NUM =
    w.HEX_MAP =
    w.NUM_MAP =
    w.ALPHA =
    w.FINISH =
    w.H_METHOD_MAP =
    w.METHOD_MAP =
    w.METHODS_RTSP =
    w.METHODS_ICE =
    w.METHODS_HTTP =
    w.METHODS =
    w.LENIENT_FLAGS =
    w.FLAGS =
    w.TYPE =
    w.ERROR =
      void 0;
  var xY = Uw(),
    vY;
  (function (A) {
    (A[(A.OK = 0)] = 'OK'),
      (A[(A.INTERNAL = 1)] = 'INTERNAL'),
      (A[(A.STRICT = 2)] = 'STRICT'),
      (A[(A.LF_EXPECTED = 3)] = 'LF_EXPECTED'),
      (A[(A.UNEXPECTED_CONTENT_LENGTH = 4)] = 'UNEXPECTED_CONTENT_LENGTH'),
      (A[(A.CLOSED_CONNECTION = 5)] = 'CLOSED_CONNECTION'),
      (A[(A.INVALID_METHOD = 6)] = 'INVALID_METHOD'),
      (A[(A.INVALID_URL = 7)] = 'INVALID_URL'),
      (A[(A.INVALID_CONSTANT = 8)] = 'INVALID_CONSTANT'),
      (A[(A.INVALID_VERSION = 9)] = 'INVALID_VERSION'),
      (A[(A.INVALID_HEADER_TOKEN = 10)] = 'INVALID_HEADER_TOKEN'),
      (A[(A.INVALID_CONTENT_LENGTH = 11)] = 'INVALID_CONTENT_LENGTH'),
      (A[(A.INVALID_CHUNK_SIZE = 12)] = 'INVALID_CHUNK_SIZE'),
      (A[(A.INVALID_STATUS = 13)] = 'INVALID_STATUS'),
      (A[(A.INVALID_EOF_STATE = 14)] = 'INVALID_EOF_STATE'),
      (A[(A.INVALID_TRANSFER_ENCODING = 15)] = 'INVALID_TRANSFER_ENCODING'),
      (A[(A.CB_MESSAGE_BEGIN = 16)] = 'CB_MESSAGE_BEGIN'),
      (A[(A.CB_HEADERS_COMPLETE = 17)] = 'CB_HEADERS_COMPLETE'),
      (A[(A.CB_MESSAGE_COMPLETE = 18)] = 'CB_MESSAGE_COMPLETE'),
      (A[(A.CB_CHUNK_HEADER = 19)] = 'CB_CHUNK_HEADER'),
      (A[(A.CB_CHUNK_COMPLETE = 20)] = 'CB_CHUNK_COMPLETE'),
      (A[(A.PAUSED = 21)] = 'PAUSED'),
      (A[(A.PAUSED_UPGRADE = 22)] = 'PAUSED_UPGRADE'),
      (A[(A.PAUSED_H2_UPGRADE = 23)] = 'PAUSED_H2_UPGRADE'),
      (A[(A.USER = 24)] = 'USER');
  })((vY = w.ERROR || (w.ERROR = {})));
  var OY;
  (function (A) {
    (A[(A.BOTH = 0)] = 'BOTH'),
      (A[(A.REQUEST = 1)] = 'REQUEST'),
      (A[(A.RESPONSE = 2)] = 'RESPONSE');
  })((OY = w.TYPE || (w.TYPE = {})));
  var YY;
  (function (A) {
    (A[(A.CONNECTION_KEEP_ALIVE = 1)] = 'CONNECTION_KEEP_ALIVE'),
      (A[(A.CONNECTION_CLOSE = 2)] = 'CONNECTION_CLOSE'),
      (A[(A.CONNECTION_UPGRADE = 4)] = 'CONNECTION_UPGRADE'),
      (A[(A.CHUNKED = 8)] = 'CHUNKED'),
      (A[(A.UPGRADE = 16)] = 'UPGRADE'),
      (A[(A.CONTENT_LENGTH = 32)] = 'CONTENT_LENGTH'),
      (A[(A.SKIPBODY = 64)] = 'SKIPBODY'),
      (A[(A.TRAILING = 128)] = 'TRAILING'),
      (A[(A.TRANSFER_ENCODING = 512)] = 'TRANSFER_ENCODING');
  })((YY = w.FLAGS || (w.FLAGS = {})));
  var JY;
  (function (A) {
    (A[(A.HEADERS = 1)] = 'HEADERS'),
      (A[(A.CHUNKED_LENGTH = 2)] = 'CHUNKED_LENGTH'),
      (A[(A.KEEP_ALIVE = 4)] = 'KEEP_ALIVE');
  })((JY = w.LENIENT_FLAGS || (w.LENIENT_FLAGS = {})));
  var N;
  (function (A) {
    (A[(A.DELETE = 0)] = 'DELETE'),
      (A[(A.GET = 1)] = 'GET'),
      (A[(A.HEAD = 2)] = 'HEAD'),
      (A[(A.POST = 3)] = 'POST'),
      (A[(A.PUT = 4)] = 'PUT'),
      (A[(A.CONNECT = 5)] = 'CONNECT'),
      (A[(A.OPTIONS = 6)] = 'OPTIONS'),
      (A[(A.TRACE = 7)] = 'TRACE'),
      (A[(A.COPY = 8)] = 'COPY'),
      (A[(A.LOCK = 9)] = 'LOCK'),
      (A[(A.MKCOL = 10)] = 'MKCOL'),
      (A[(A.MOVE = 11)] = 'MOVE'),
      (A[(A.PROPFIND = 12)] = 'PROPFIND'),
      (A[(A.PROPPATCH = 13)] = 'PROPPATCH'),
      (A[(A.SEARCH = 14)] = 'SEARCH'),
      (A[(A.UNLOCK = 15)] = 'UNLOCK'),
      (A[(A.BIND = 16)] = 'BIND'),
      (A[(A.REBIND = 17)] = 'REBIND'),
      (A[(A.UNBIND = 18)] = 'UNBIND'),
      (A[(A.ACL = 19)] = 'ACL'),
      (A[(A.REPORT = 20)] = 'REPORT'),
      (A[(A.MKACTIVITY = 21)] = 'MKACTIVITY'),
      (A[(A.CHECKOUT = 22)] = 'CHECKOUT'),
      (A[(A.MERGE = 23)] = 'MERGE'),
      (A[(A['M-SEARCH'] = 24)] = 'M-SEARCH'),
      (A[(A.NOTIFY = 25)] = 'NOTIFY'),
      (A[(A.SUBSCRIBE = 26)] = 'SUBSCRIBE'),
      (A[(A.UNSUBSCRIBE = 27)] = 'UNSUBSCRIBE'),
      (A[(A.PATCH = 28)] = 'PATCH'),
      (A[(A.PURGE = 29)] = 'PURGE'),
      (A[(A.MKCALENDAR = 30)] = 'MKCALENDAR'),
      (A[(A.LINK = 31)] = 'LINK'),
      (A[(A.UNLINK = 32)] = 'UNLINK'),
      (A[(A.SOURCE = 33)] = 'SOURCE'),
      (A[(A.PRI = 34)] = 'PRI'),
      (A[(A.DESCRIBE = 35)] = 'DESCRIBE'),
      (A[(A.ANNOUNCE = 36)] = 'ANNOUNCE'),
      (A[(A.SETUP = 37)] = 'SETUP'),
      (A[(A.PLAY = 38)] = 'PLAY'),
      (A[(A.PAUSE = 39)] = 'PAUSE'),
      (A[(A.TEARDOWN = 40)] = 'TEARDOWN'),
      (A[(A.GET_PARAMETER = 41)] = 'GET_PARAMETER'),
      (A[(A.SET_PARAMETER = 42)] = 'SET_PARAMETER'),
      (A[(A.REDIRECT = 43)] = 'REDIRECT'),
      (A[(A.RECORD = 44)] = 'RECORD'),
      (A[(A.FLUSH = 45)] = 'FLUSH');
  })((N = w.METHODS || (w.METHODS = {})));
  w.METHODS_HTTP = [
    N.DELETE,
    N.GET,
    N.HEAD,
    N.POST,
    N.PUT,
    N.CONNECT,
    N.OPTIONS,
    N.TRACE,
    N.COPY,
    N.LOCK,
    N.MKCOL,
    N.MOVE,
    N.PROPFIND,
    N.PROPPATCH,
    N.SEARCH,
    N.UNLOCK,
    N.BIND,
    N.REBIND,
    N.UNBIND,
    N.ACL,
    N.REPORT,
    N.MKACTIVITY,
    N.CHECKOUT,
    N.MERGE,
    N['M-SEARCH'],
    N.NOTIFY,
    N.SUBSCRIBE,
    N.UNSUBSCRIBE,
    N.PATCH,
    N.PURGE,
    N.MKCALENDAR,
    N.LINK,
    N.UNLINK,
    N.PRI,
    N.SOURCE,
  ];
  w.METHODS_ICE = [N.SOURCE];
  w.METHODS_RTSP = [
    N.OPTIONS,
    N.DESCRIBE,
    N.ANNOUNCE,
    N.SETUP,
    N.PLAY,
    N.PAUSE,
    N.TEARDOWN,
    N.GET_PARAMETER,
    N.SET_PARAMETER,
    N.REDIRECT,
    N.RECORD,
    N.FLUSH,
    N.GET,
    N.POST,
  ];
  w.METHOD_MAP = xY.enumToMap(N);
  w.H_METHOD_MAP = {};
  Object.keys(w.METHOD_MAP).forEach((A) => {
    /^H/.test(A) && (w.H_METHOD_MAP[A] = w.METHOD_MAP[A]);
  });
  var HY;
  (function (A) {
    (A[(A.SAFE = 0)] = 'SAFE'),
      (A[(A.SAFE_WITH_CB = 1)] = 'SAFE_WITH_CB'),
      (A[(A.UNSAFE = 2)] = 'UNSAFE');
  })((HY = w.FINISH || (w.FINISH = {})));
  w.ALPHA = [];
  for (let A = 65; A <= 90; A++)
    w.ALPHA.push(String.fromCharCode(A)),
      w.ALPHA.push(String.fromCharCode(A + 32));
  w.NUM_MAP = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9 };
  w.HEX_MAP = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  };
  w.NUM = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
  w.ALPHANUM = w.ALPHA.concat(w.NUM);
  w.MARK = ['-', '_', '.', '!', '~', '*', "'", '(', ')'];
  w.USERINFO_CHARS = w.ALPHANUM.concat(w.MARK).concat([
    '%',
    ';',
    ':',
    '&',
    '=',
    '+',
    '$',
    ',',
  ]);
  w.STRICT_URL_CHAR = [
    '!',
    '"',
    '$',
    '%',
    '&',
    "'",
    '(',
    ')',
    '*',
    '+',
    ',',
    '-',
    '.',
    '/',
    ':',
    ';',
    '<',
    '=',
    '>',
    '@',
    '[',
    '\\',
    ']',
    '^',
    '_',
    '`',
    '{',
    '|',
    '}',
    '~',
  ].concat(w.ALPHANUM);
  w.URL_CHAR = w.STRICT_URL_CHAR.concat(['	', '\f']);
  for (let A = 128; A <= 255; A++) w.URL_CHAR.push(A);
  w.HEX = w.NUM.concat([
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
  ]);
  w.STRICT_TOKEN = [
    '!',
    '#',
    '$',
    '%',
    '&',
    "'",
    '*',
    '+',
    '-',
    '.',
    '^',
    '_',
    '`',
    '|',
    '~',
  ].concat(w.ALPHANUM);
  w.TOKEN = w.STRICT_TOKEN.concat([' ']);
  w.HEADER_CHARS = ['	'];
  for (let A = 32; A <= 255; A++) A !== 127 && w.HEADER_CHARS.push(A);
  w.CONNECTION_TOKEN_CHARS = w.HEADER_CHARS.filter((A) => A !== 44);
  w.MAJOR = w.NUM_MAP;
  w.MINOR = w.MAJOR;
  var Us;
  (function (A) {
    (A[(A.GENERAL = 0)] = 'GENERAL'),
      (A[(A.CONNECTION = 1)] = 'CONNECTION'),
      (A[(A.CONTENT_LENGTH = 2)] = 'CONTENT_LENGTH'),
      (A[(A.TRANSFER_ENCODING = 3)] = 'TRANSFER_ENCODING'),
      (A[(A.UPGRADE = 4)] = 'UPGRADE'),
      (A[(A.CONNECTION_KEEP_ALIVE = 5)] = 'CONNECTION_KEEP_ALIVE'),
      (A[(A.CONNECTION_CLOSE = 6)] = 'CONNECTION_CLOSE'),
      (A[(A.CONNECTION_UPGRADE = 7)] = 'CONNECTION_UPGRADE'),
      (A[(A.TRANSFER_ENCODING_CHUNKED = 8)] = 'TRANSFER_ENCODING_CHUNKED');
  })((Us = w.HEADER_STATE || (w.HEADER_STATE = {})));
  w.SPECIAL_HEADERS = {
    connection: Us.CONNECTION,
    'content-length': Us.CONTENT_LENGTH,
    'proxy-connection': Us.CONNECTION,
    'transfer-encoding': Us.TRANSFER_ENCODING,
    upgrade: Us.UPGRADE,
  };
});
var uC = B((ErA, xw) => {
  'use strict';
  var kr = eA(),
    { kBodyUsed: pi } = dA(),
    BC = require('assert'),
    { InvalidArgumentError: VY } = uA(),
    qY = require('events'),
    PY = [300, 301, 302, 303, 307, 308],
    Lw = Symbol('body'),
    Tc = class {
      constructor(e) {
        (this[Lw] = e), (this[pi] = !1);
      }
      async *[Symbol.asyncIterator]() {
        BC(!this[pi], 'disturbed'), (this[pi] = !0), yield* this[Lw];
      }
    },
    CC = class {
      constructor(e, t, r, o) {
        if (t != null && (!Number.isInteger(t) || t < 0))
          throw new VY('maxRedirections must be a positive number');
        kr.validateHandler(o, r.method, r.upgrade),
          (this.dispatch = e),
          (this.location = null),
          (this.abort = null),
          (this.opts = { ...r, maxRedirections: 0 }),
          (this.maxRedirections = t),
          (this.handler = o),
          (this.history = []),
          kr.isStream(this.opts.body)
            ? (kr.bodyLength(this.opts.body) === 0 &&
                this.opts.body.on('data', function () {
                  BC(!1);
                }),
              typeof this.opts.body.readableDidRead != 'boolean' &&
                ((this.opts.body[pi] = !1),
                qY.prototype.on.call(this.opts.body, 'data', function () {
                  this[pi] = !0;
                })))
            : this.opts.body && typeof this.opts.body.pipeTo == 'function'
              ? (this.opts.body = new Tc(this.opts.body))
              : this.opts.body &&
                typeof this.opts.body != 'string' &&
                !ArrayBuffer.isView(this.opts.body) &&
                kr.isIterable(this.opts.body) &&
                (this.opts.body = new Tc(this.opts.body));
      }
      onConnect(e) {
        (this.abort = e), this.handler.onConnect(e, { history: this.history });
      }
      onUpgrade(e, t, r) {
        this.handler.onUpgrade(e, t, r);
      }
      onError(e) {
        this.handler.onError(e);
      }
      onHeaders(e, t, r, o) {
        if (
          ((this.location =
            this.history.length >= this.maxRedirections ||
            kr.isDisturbed(this.opts.body)
              ? null
              : WY(e, t)),
          this.opts.origin &&
            this.history.push(new URL(this.opts.path, this.opts.origin)),
          !this.location)
        )
          return this.handler.onHeaders(e, t, r, o);
        let {
            origin: s,
            pathname: n,
            search: i,
          } = kr.parseURL(
            new URL(
              this.location,
              this.opts.origin && new URL(this.opts.path, this.opts.origin),
            ),
          ),
          a = i ? `${n}${i}` : n;
        (this.opts.headers = _Y(
          this.opts.headers,
          e === 303,
          this.opts.origin !== s,
        )),
          (this.opts.path = a),
          (this.opts.origin = s),
          (this.opts.maxRedirections = 0),
          (this.opts.query = null),
          e === 303 &&
            this.opts.method !== 'HEAD' &&
            ((this.opts.method = 'GET'), (this.opts.body = null));
      }
      onData(e) {
        if (!this.location) return this.handler.onData(e);
      }
      onComplete(e) {
        this.location
          ? ((this.location = null),
            (this.abort = null),
            this.dispatch(this.opts, this))
          : this.handler.onComplete(e);
      }
      onBodySent(e) {
        this.handler.onBodySent && this.handler.onBodySent(e);
      }
    };
  function WY(A, e) {
    if (PY.indexOf(A) === -1) return null;
    for (let t = 0; t < e.length; t += 2)
      if (e[t].toString().toLowerCase() === 'location') return e[t + 1];
  }
  function Gw(A, e, t) {
    if (A.length === 4) return kr.headerNameToString(A) === 'host';
    if (e && kr.headerNameToString(A).startsWith('content-')) return !0;
    if (t && (A.length === 13 || A.length === 6 || A.length === 19)) {
      let r = kr.headerNameToString(A);
      return (
        r === 'authorization' || r === 'cookie' || r === 'proxy-authorization'
      );
    }
    return !1;
  }
  function _Y(A, e, t) {
    let r = [];
    if (Array.isArray(A))
      for (let o = 0; o < A.length; o += 2)
        Gw(A[o], e, t) || r.push(A[o], A[o + 1]);
    else if (A && typeof A == 'object')
      for (let o of Object.keys(A)) Gw(o, e, t) || r.push(o, A[o]);
    else BC(A == null, 'headers must be an object or an array');
    return r;
  }
  xw.exports = CC;
});
var Nc = B((lrA, vw) => {
  'use strict';
  var jY = uC();
  function ZY({ maxRedirections: A }) {
    return (e) =>
      function (r, o) {
        let { maxRedirections: s = A } = r;
        if (!s) return e(r, o);
        let n = new jY(e, s, r, o);
        return (r = { ...r, maxRedirections: 0 }), e(r, n);
      };
  }
  vw.exports = ZY;
});
var hC = B((QrA, Ow) => {
  Ow.exports =
    '';
});
var Jw = B((CrA, Yw) => {
  Yw.exports =
    '';
});
var bi = B((BrA, ny) => {
  'use strict';
  var k = require('assert'),
    qw = require('net'),
    KY = require('http'),
    { pipeline: XY } = require('stream'),
    T = eA(),
    IC = Ap(),
    fC = Rw(),
    zY = di(),
    {
      RequestContentLengthMismatchError: Rr,
      ResponseContentLengthMismatchError: $Y,
      InvalidArgumentError: YA,
      RequestAbortedError: bC,
      HeadersTimeoutError: AJ,
      HeadersOverflowError: eJ,
      SocketError: Ls,
      InformationalError: Kt,
      BodyTimeoutError: tJ,
      HTTPParserError: rJ,
      ResponseExceededMaxSizeError: oJ,
      ClientDestroyedError: sJ,
    } = uA(),
    nJ = fi(),
    {
      kUrl: oe,
      kReset: de,
      kServerName: Xr,
      kClient: Xt,
      kBusy: pC,
      kParser: UA,
      kConnect: iJ,
      kBlocking: Gs,
      kResuming: Fo,
      kRunning: SA,
      kPending: To,
      kSize: So,
      kWriting: br,
      kQueue: DA,
      kConnected: aJ,
      kConnecting: Ms,
      kNeedDrain: $r,
      kNoRef: wi,
      kKeepAliveDefaultTimeout: wC,
      kHostHeader: Pw,
      kPendingIdx: _e,
      kRunningIdx: mA,
      kError: se,
      kPipelining: Ao,
      kSocket: MA,
      kKeepAliveTimeoutValue: mi,
      kMaxHeadersSize: Lc,
      kKeepAliveMaxTimeout: Ww,
      kKeepAliveTimeoutThreshold: _w,
      kHeadersTimeout: jw,
      kBodyTimeout: Zw,
      kStrictContentLength: ki,
      kConnector: yi,
      kMaxRedirections: cJ,
      kMaxRequests: Ri,
      kCounter: Kw,
      kClose: gJ,
      kDestroy: EJ,
      kDispatch: lJ,
      kInterceptors: QJ,
      kLocalAddress: Di,
      kMaxResponseSize: Xw,
      kHTTPConnVersion: zt,
      kHost: zw,
      kHTTP2Session: je,
      kHTTP2SessionState: xc,
      kHTTP2BuildRequest: CJ,
      kHTTP2CopyHeaders: BJ,
      kHTTP1BuildRequest: uJ,
    } = dA(),
    vc;
  try {
    vc = require('http2');
  } catch {
    vc = { constants: {} };
  }
  var {
      constants: {
        HTTP2_HEADER_AUTHORITY: hJ,
        HTTP2_HEADER_METHOD: IJ,
        HTTP2_HEADER_PATH: dJ,
        HTTP2_HEADER_SCHEME: fJ,
        HTTP2_HEADER_CONTENT_LENGTH: pJ,
        HTTP2_HEADER_EXPECT: wJ,
        HTTP2_HEADER_STATUS: yJ,
      },
    } = vc,
    Hw = !1,
    Uc = Buffer[Symbol.species],
    zr = Symbol('kClosedResolve'),
    ge = {};
  try {
    let A = require('diagnostics_channel');
    (ge.sendHeaders = A.channel('undici:client:sendHeaders')),
      (ge.beforeConnect = A.channel('undici:client:beforeConnect')),
      (ge.connectError = A.channel('undici:client:connectError')),
      (ge.connected = A.channel('undici:client:connected'));
  } catch {
    (ge.sendHeaders = { hasSubscribers: !1 }),
      (ge.beforeConnect = { hasSubscribers: !1 }),
      (ge.connectError = { hasSubscribers: !1 }),
      (ge.connected = { hasSubscribers: !1 });
  }
  var yC = class extends zY {
    constructor(
      e,
      {
        interceptors: t,
        maxHeaderSize: r,
        headersTimeout: o,
        socketTimeout: s,
        requestTimeout: n,
        connectTimeout: i,
        bodyTimeout: a,
        idleTimeout: c,
        keepAlive: g,
        keepAliveTimeout: E,
        maxKeepAliveTimeout: l,
        keepAliveMaxTimeout: C,
        keepAliveTimeoutThreshold: Q,
        socketPath: h,
        pipelining: I,
        tls: u,
        strictContentLength: d,
        maxCachedSessions: f,
        maxRedirections: D,
        connect: q,
        maxRequestsPerClient: j,
        localAddress: J,
        maxResponseSize: yA,
        autoSelectFamily: qA,
        autoSelectFamilyAttemptTimeout: vA,
        allowH2: IA,
        maxConcurrentStreams: K,
      } = {},
    ) {
      if ((super(), g !== void 0))
        throw new YA('unsupported keepAlive, use pipelining=0 instead');
      if (s !== void 0)
        throw new YA(
          'unsupported socketTimeout, use headersTimeout & bodyTimeout instead',
        );
      if (n !== void 0)
        throw new YA(
          'unsupported requestTimeout, use headersTimeout & bodyTimeout instead',
        );
      if (c !== void 0)
        throw new YA('unsupported idleTimeout, use keepAliveTimeout instead');
      if (l !== void 0)
        throw new YA(
          'unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead',
        );
      if (r != null && !Number.isFinite(r))
        throw new YA('invalid maxHeaderSize');
      if (h != null && typeof h != 'string') throw new YA('invalid socketPath');
      if (i != null && (!Number.isFinite(i) || i < 0))
        throw new YA('invalid connectTimeout');
      if (E != null && (!Number.isFinite(E) || E <= 0))
        throw new YA('invalid keepAliveTimeout');
      if (C != null && (!Number.isFinite(C) || C <= 0))
        throw new YA('invalid keepAliveMaxTimeout');
      if (Q != null && !Number.isFinite(Q))
        throw new YA('invalid keepAliveTimeoutThreshold');
      if (o != null && (!Number.isInteger(o) || o < 0))
        throw new YA('headersTimeout must be a positive integer or zero');
      if (a != null && (!Number.isInteger(a) || a < 0))
        throw new YA('bodyTimeout must be a positive integer or zero');
      if (q != null && typeof q != 'function' && typeof q != 'object')
        throw new YA('connect must be a function or an object');
      if (D != null && (!Number.isInteger(D) || D < 0))
        throw new YA('maxRedirections must be a positive number');
      if (j != null && (!Number.isInteger(j) || j < 0))
        throw new YA('maxRequestsPerClient must be a positive number');
      if (J != null && (typeof J != 'string' || qw.isIP(J) === 0))
        throw new YA('localAddress must be valid string IP address');
      if (yA != null && (!Number.isInteger(yA) || yA < -1))
        throw new YA('maxResponseSize must be a positive number');
      if (vA != null && (!Number.isInteger(vA) || vA < -1))
        throw new YA(
          'autoSelectFamilyAttemptTimeout must be a positive number',
        );
      if (IA != null && typeof IA != 'boolean')
        throw new YA('allowH2 must be a valid boolean value');
      if (K != null && (typeof K != 'number' || K < 1))
        throw new YA(
          'maxConcurrentStreams must be a possitive integer, greater than 0',
        );
      typeof q != 'function' &&
        (q = nJ({
          ...u,
          maxCachedSessions: f,
          allowH2: IA,
          socketPath: h,
          timeout: i,
          ...(T.nodeHasAutoSelectFamily && qA
            ? { autoSelectFamily: qA, autoSelectFamilyAttemptTimeout: vA }
            : void 0),
          ...q,
        })),
        (this[QJ] =
          t && t.Client && Array.isArray(t.Client)
            ? t.Client
            : [bJ({ maxRedirections: D })]),
        (this[oe] = T.parseOrigin(e)),
        (this[yi] = q),
        (this[MA] = null),
        (this[Ao] = I ?? 1),
        (this[Lc] = r || KY.maxHeaderSize),
        (this[wC] = E ?? 4e3),
        (this[Ww] = C ?? 6e5),
        (this[_w] = Q ?? 1e3),
        (this[mi] = this[wC]),
        (this[Xr] = null),
        (this[Di] = J ?? null),
        (this[Fo] = 0),
        (this[$r] = 0),
        (this[Pw] =
          `host: ${this[oe].hostname}${this[oe].port ? `:${this[oe].port}` : ''}\r
`),
        (this[Zw] = a ?? 3e5),
        (this[jw] = o ?? 3e5),
        (this[ki] = d ?? !0),
        (this[cJ] = D),
        (this[Ri] = j),
        (this[zr] = null),
        (this[Xw] = yA > -1 ? yA : -1),
        (this[zt] = 'h1'),
        (this[je] = null),
        (this[xc] = IA
          ? { openStreams: 0, maxConcurrentStreams: K ?? 100 }
          : null),
        (this[zw] =
          `${this[oe].hostname}${this[oe].port ? `:${this[oe].port}` : ''}`),
        (this[DA] = []),
        (this[mA] = 0),
        (this[_e] = 0);
    }
    get pipelining() {
      return this[Ao];
    }
    set pipelining(e) {
      (this[Ao] = e), Ze(this, !0);
    }
    get [To]() {
      return this[DA].length - this[_e];
    }
    get [SA]() {
      return this[_e] - this[mA];
    }
    get [So]() {
      return this[DA].length - this[mA];
    }
    get [aJ]() {
      return !!this[MA] && !this[Ms] && !this[MA].destroyed;
    }
    get [pC]() {
      let e = this[MA];
      return (
        (e && (e[de] || e[br] || e[Gs])) ||
        this[So] >= (this[Ao] || 1) ||
        this[To] > 0
      );
    }
    [iJ](e) {
      ty(this), this.once('connect', e);
    }
    [lJ](e, t) {
      let r = e.origin || this[oe].origin,
        o = this[zt] === 'h2' ? fC[CJ](r, e, t) : fC[uJ](r, e, t);
      return (
        this[DA].push(o),
        this[Fo] ||
          (T.bodyLength(o.body) == null && T.isIterable(o.body)
            ? ((this[Fo] = 1), process.nextTick(Ze, this))
            : Ze(this, !0)),
        this[Fo] && this[$r] !== 2 && this[pC] && (this[$r] = 2),
        this[$r] < 2
      );
    }
    async [gJ]() {
      return new Promise((e) => {
        this[So] ? (this[zr] = e) : e(null);
      });
    }
    async [EJ](e) {
      return new Promise((t) => {
        let r = this[DA].splice(this[_e]);
        for (let s = 0; s < r.length; s++) {
          let n = r[s];
          fe(this, n, e);
        }
        let o = () => {
          this[zr] && (this[zr](), (this[zr] = null)), t();
        };
        this[je] != null &&
          (T.destroy(this[je], e), (this[je] = null), (this[xc] = null)),
          this[MA] ? T.destroy(this[MA].on('close', o), e) : queueMicrotask(o),
          Ze(this);
      });
    }
  };
  function DJ(A) {
    k(A.code !== 'ERR_TLS_CERT_ALTNAME_INVALID'),
      (this[MA][se] = A),
      Jc(this[Xt], A);
  }
  function mJ(A, e, t) {
    let r = new Kt(`HTTP/2: "frameError" received - type ${A}, code ${e}`);
    t === 0 && ((this[MA][se] = r), Jc(this[Xt], r));
  }
  function kJ() {
    T.destroy(this, new Ls('other side closed')),
      T.destroy(this[MA], new Ls('other side closed'));
  }
  function RJ(A) {
    let e = this[Xt],
      t = new Kt(`HTTP/2: "GOAWAY" frame received with code ${A}`);
    if (((e[MA] = null), (e[je] = null), e.destroyed)) {
      k(this[To] === 0);
      let r = e[DA].splice(e[mA]);
      for (let o = 0; o < r.length; o++) {
        let s = r[o];
        fe(this, s, t);
      }
    } else if (e[SA] > 0) {
      let r = e[DA][e[mA]];
      (e[DA][e[mA]++] = null), fe(e, r, t);
    }
    (e[_e] = e[mA]), k(e[SA] === 0), e.emit('disconnect', e[oe], [e], t), Ze(e);
  }
  var _t = Mw(),
    bJ = Nc(),
    FJ = Buffer.alloc(0);
  async function SJ() {
    let A = process.env.JEST_WORKER_ID ? hC() : void 0,
      e;
    try {
      e = await WebAssembly.compile(Buffer.from(Jw(), 'base64'));
    } catch {
      e = await WebAssembly.compile(Buffer.from(A || hC(), 'base64'));
    }
    return await WebAssembly.instantiate(e, {
      env: {
        wasm_on_url: (t, r, o) => 0,
        wasm_on_status: (t, r, o) => {
          k.strictEqual(KA.ptr, t);
          let s = r - Zt + jt.byteOffset;
          return KA.onStatus(new Uc(jt.buffer, s, o)) || 0;
        },
        wasm_on_message_begin: (t) => (
          k.strictEqual(KA.ptr, t), KA.onMessageBegin() || 0
        ),
        wasm_on_header_field: (t, r, o) => {
          k.strictEqual(KA.ptr, t);
          let s = r - Zt + jt.byteOffset;
          return KA.onHeaderField(new Uc(jt.buffer, s, o)) || 0;
        },
        wasm_on_header_value: (t, r, o) => {
          k.strictEqual(KA.ptr, t);
          let s = r - Zt + jt.byteOffset;
          return KA.onHeaderValue(new Uc(jt.buffer, s, o)) || 0;
        },
        wasm_on_headers_complete: (t, r, o, s) => (
          k.strictEqual(KA.ptr, t), KA.onHeadersComplete(r, !!o, !!s) || 0
        ),
        wasm_on_body: (t, r, o) => {
          k.strictEqual(KA.ptr, t);
          let s = r - Zt + jt.byteOffset;
          return KA.onBody(new Uc(jt.buffer, s, o)) || 0;
        },
        wasm_on_message_complete: (t) => (
          k.strictEqual(KA.ptr, t), KA.onMessageComplete() || 0
        ),
      },
    });
  }
  var dC = null,
    DC = SJ();
  DC.catch();
  var KA = null,
    jt = null,
    Mc = 0,
    Zt = null,
    xs = 1,
    Gc = 2,
    mC = 3,
    kC = class {
      constructor(e, t, { exports: r }) {
        k(Number.isFinite(e[Lc]) && e[Lc] > 0),
          (this.llhttp = r),
          (this.ptr = this.llhttp.llhttp_alloc(_t.TYPE.RESPONSE)),
          (this.client = e),
          (this.socket = t),
          (this.timeout = null),
          (this.timeoutValue = null),
          (this.timeoutType = null),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.upgrade = !1),
          (this.headers = []),
          (this.headersSize = 0),
          (this.headersMaxSize = e[Lc]),
          (this.shouldKeepAlive = !1),
          (this.paused = !1),
          (this.resume = this.resume.bind(this)),
          (this.bytesRead = 0),
          (this.keepAlive = ''),
          (this.contentLength = ''),
          (this.connection = ''),
          (this.maxResponseSize = e[Xw]);
      }
      setTimeout(e, t) {
        (this.timeoutType = t),
          e !== this.timeoutValue
            ? (IC.clearTimeout(this.timeout),
              e
                ? ((this.timeout = IC.setTimeout(TJ, e, this)),
                  this.timeout.unref && this.timeout.unref())
                : (this.timeout = null),
              (this.timeoutValue = e))
            : this.timeout && this.timeout.refresh && this.timeout.refresh();
      }
      resume() {
        this.socket.destroyed ||
          !this.paused ||
          (k(this.ptr != null),
          k(KA == null),
          this.llhttp.llhttp_resume(this.ptr),
          k(this.timeoutType === Gc),
          this.timeout && this.timeout.refresh && this.timeout.refresh(),
          (this.paused = !1),
          this.execute(this.socket.read() || FJ),
          this.readMore());
      }
      readMore() {
        for (; !this.paused && this.ptr; ) {
          let e = this.socket.read();
          if (e === null) break;
          this.execute(e);
        }
      }
      execute(e) {
        k(this.ptr != null), k(KA == null), k(!this.paused);
        let { socket: t, llhttp: r } = this;
        e.length > Mc &&
          (Zt && r.free(Zt),
          (Mc = Math.ceil(e.length / 4096) * 4096),
          (Zt = r.malloc(Mc))),
          new Uint8Array(r.memory.buffer, Zt, Mc).set(e);
        try {
          let o;
          try {
            (jt = e),
              (KA = this),
              (o = r.llhttp_execute(this.ptr, Zt, e.length));
          } catch (n) {
            throw n;
          } finally {
            (KA = null), (jt = null);
          }
          let s = r.llhttp_get_error_pos(this.ptr) - Zt;
          if (o === _t.ERROR.PAUSED_UPGRADE) this.onUpgrade(e.slice(s));
          else if (o === _t.ERROR.PAUSED)
            (this.paused = !0), t.unshift(e.slice(s));
          else if (o !== _t.ERROR.OK) {
            let n = r.llhttp_get_error_reason(this.ptr),
              i = '';
            if (n) {
              let a = new Uint8Array(r.memory.buffer, n).indexOf(0);
              i =
                'Response does not match the HTTP/1.1 protocol (' +
                Buffer.from(r.memory.buffer, n, a).toString() +
                ')';
            }
            throw new rJ(i, _t.ERROR[o], e.slice(s));
          }
        } catch (o) {
          T.destroy(t, o);
        }
      }
      destroy() {
        k(this.ptr != null),
          k(KA == null),
          this.llhttp.llhttp_free(this.ptr),
          (this.ptr = null),
          IC.clearTimeout(this.timeout),
          (this.timeout = null),
          (this.timeoutValue = null),
          (this.timeoutType = null),
          (this.paused = !1);
      }
      onStatus(e) {
        this.statusText = e.toString();
      }
      onMessageBegin() {
        let { socket: e, client: t } = this;
        if (e.destroyed || !t[DA][t[mA]]) return -1;
      }
      onHeaderField(e) {
        let t = this.headers.length;
        t & 1
          ? (this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]))
          : this.headers.push(e),
          this.trackHeader(e.length);
      }
      onHeaderValue(e) {
        let t = this.headers.length;
        (t & 1) === 1
          ? (this.headers.push(e), (t += 1))
          : (this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]));
        let r = this.headers[t - 2];
        r.length === 10 && r.toString().toLowerCase() === 'keep-alive'
          ? (this.keepAlive += e.toString())
          : r.length === 10 && r.toString().toLowerCase() === 'connection'
            ? (this.connection += e.toString())
            : r.length === 14 &&
              r.toString().toLowerCase() === 'content-length' &&
              (this.contentLength += e.toString()),
          this.trackHeader(e.length);
      }
      trackHeader(e) {
        (this.headersSize += e),
          this.headersSize >= this.headersMaxSize &&
            T.destroy(this.socket, new eJ());
      }
      onUpgrade(e) {
        let {
          upgrade: t,
          client: r,
          socket: o,
          headers: s,
          statusCode: n,
        } = this;
        k(t);
        let i = r[DA][r[mA]];
        k(i),
          k(!o.destroyed),
          k(o === r[MA]),
          k(!this.paused),
          k(i.upgrade || i.method === 'CONNECT'),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.shouldKeepAlive = null),
          k(this.headers.length % 2 === 0),
          (this.headers = []),
          (this.headersSize = 0),
          o.unshift(e),
          o[UA].destroy(),
          (o[UA] = null),
          (o[Xt] = null),
          (o[se] = null),
          o
            .removeListener('error', Ay)
            .removeListener('readable', $w)
            .removeListener('end', ey)
            .removeListener('close', RC),
          (r[MA] = null),
          (r[DA][r[mA]++] = null),
          r.emit('disconnect', r[oe], [r], new Kt('upgrade'));
        try {
          i.onUpgrade(n, s, o);
        } catch (a) {
          T.destroy(o, a);
        }
        Ze(r);
      }
      onHeadersComplete(e, t, r) {
        let { client: o, socket: s, headers: n, statusText: i } = this;
        if (s.destroyed) return -1;
        let a = o[DA][o[mA]];
        if (!a) return -1;
        if ((k(!this.upgrade), k(this.statusCode < 200), e === 100))
          return T.destroy(s, new Ls('bad response', T.getSocketInfo(s))), -1;
        if (t && !a.upgrade)
          return T.destroy(s, new Ls('bad upgrade', T.getSocketInfo(s))), -1;
        if (
          (k.strictEqual(this.timeoutType, xs),
          (this.statusCode = e),
          (this.shouldKeepAlive =
            r ||
            (a.method === 'HEAD' &&
              !s[de] &&
              this.connection.toLowerCase() === 'keep-alive')),
          this.statusCode >= 200)
        ) {
          let g = a.bodyTimeout != null ? a.bodyTimeout : o[Zw];
          this.setTimeout(g, Gc);
        } else this.timeout && this.timeout.refresh && this.timeout.refresh();
        if (a.method === 'CONNECT')
          return k(o[SA] === 1), (this.upgrade = !0), 2;
        if (t) return k(o[SA] === 1), (this.upgrade = !0), 2;
        if (
          (k(this.headers.length % 2 === 0),
          (this.headers = []),
          (this.headersSize = 0),
          this.shouldKeepAlive && o[Ao])
        ) {
          let g = this.keepAlive
            ? T.parseKeepAliveTimeout(this.keepAlive)
            : null;
          if (g != null) {
            let E = Math.min(g - o[_w], o[Ww]);
            E <= 0 ? (s[de] = !0) : (o[mi] = E);
          } else o[mi] = o[wC];
        } else s[de] = !0;
        let c = a.onHeaders(e, n, this.resume, i) === !1;
        return a.aborted
          ? -1
          : a.method === 'HEAD' || e < 200
            ? 1
            : (s[Gs] && ((s[Gs] = !1), Ze(o)), c ? _t.ERROR.PAUSED : 0);
      }
      onBody(e) {
        let { client: t, socket: r, statusCode: o, maxResponseSize: s } = this;
        if (r.destroyed) return -1;
        let n = t[DA][t[mA]];
        if (
          (k(n),
          k.strictEqual(this.timeoutType, Gc),
          this.timeout && this.timeout.refresh && this.timeout.refresh(),
          k(o >= 200),
          s > -1 && this.bytesRead + e.length > s)
        )
          return T.destroy(r, new oJ()), -1;
        if (((this.bytesRead += e.length), n.onData(e) === !1))
          return _t.ERROR.PAUSED;
      }
      onMessageComplete() {
        let {
          client: e,
          socket: t,
          statusCode: r,
          upgrade: o,
          headers: s,
          contentLength: n,
          bytesRead: i,
          shouldKeepAlive: a,
        } = this;
        if (t.destroyed && (!r || a)) return -1;
        if (o) return;
        let c = e[DA][e[mA]];
        if (
          (k(c),
          k(r >= 100),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.bytesRead = 0),
          (this.contentLength = ''),
          (this.keepAlive = ''),
          (this.connection = ''),
          k(this.headers.length % 2 === 0),
          (this.headers = []),
          (this.headersSize = 0),
          !(r < 200))
        ) {
          if (c.method !== 'HEAD' && n && i !== parseInt(n, 10))
            return T.destroy(t, new $Y()), -1;
          if ((c.onComplete(s), (e[DA][e[mA]++] = null), t[br]))
            return (
              k.strictEqual(e[SA], 0),
              T.destroy(t, new Kt('reset')),
              _t.ERROR.PAUSED
            );
          if (a) {
            if (t[de] && e[SA] === 0)
              return T.destroy(t, new Kt('reset')), _t.ERROR.PAUSED;
            e[Ao] === 1 ? setImmediate(Ze, e) : Ze(e);
          } else return T.destroy(t, new Kt('reset')), _t.ERROR.PAUSED;
        }
      }
    };
  function TJ(A) {
    let { socket: e, timeoutType: t, client: r } = A;
    t === xs
      ? (!e[br] || e.writableNeedDrain || r[SA] > 1) &&
        (k(!A.paused, 'cannot be paused while waiting for headers'),
        T.destroy(e, new AJ()))
      : t === Gc
        ? A.paused || T.destroy(e, new tJ())
        : t === mC &&
          (k(r[SA] === 0 && r[mi]),
          T.destroy(e, new Kt('socket idle timeout')));
  }
  function $w() {
    let { [UA]: A } = this;
    A && A.readMore();
  }
  function Ay(A) {
    let { [Xt]: e, [UA]: t } = this;
    if (
      (k(A.code !== 'ERR_TLS_CERT_ALTNAME_INVALID'),
      e[zt] !== 'h2' &&
        A.code === 'ECONNRESET' &&
        t.statusCode &&
        !t.shouldKeepAlive)
    ) {
      t.onMessageComplete();
      return;
    }
    (this[se] = A), Jc(this[Xt], A);
  }
  function Jc(A, e) {
    if (
      A[SA] === 0 &&
      e.code !== 'UND_ERR_INFO' &&
      e.code !== 'UND_ERR_SOCKET'
    ) {
      k(A[_e] === A[mA]);
      let t = A[DA].splice(A[mA]);
      for (let r = 0; r < t.length; r++) {
        let o = t[r];
        fe(A, o, e);
      }
      k(A[So] === 0);
    }
  }
  function ey() {
    let { [UA]: A, [Xt]: e } = this;
    if (e[zt] !== 'h2' && A.statusCode && !A.shouldKeepAlive) {
      A.onMessageComplete();
      return;
    }
    T.destroy(this, new Ls('other side closed', T.getSocketInfo(this)));
  }
  function RC() {
    let { [Xt]: A, [UA]: e } = this;
    A[zt] === 'h1' &&
      e &&
      (!this[se] && e.statusCode && !e.shouldKeepAlive && e.onMessageComplete(),
      this[UA].destroy(),
      (this[UA] = null));
    let t = this[se] || new Ls('closed', T.getSocketInfo(this));
    if (((A[MA] = null), A.destroyed)) {
      k(A[To] === 0);
      let r = A[DA].splice(A[mA]);
      for (let o = 0; o < r.length; o++) {
        let s = r[o];
        fe(A, s, t);
      }
    } else if (A[SA] > 0 && t.code !== 'UND_ERR_INFO') {
      let r = A[DA][A[mA]];
      (A[DA][A[mA]++] = null), fe(A, r, t);
    }
    (A[_e] = A[mA]), k(A[SA] === 0), A.emit('disconnect', A[oe], [A], t), Ze(A);
  }
  async function ty(A) {
    k(!A[Ms]), k(!A[MA]);
    let { host: e, hostname: t, protocol: r, port: o } = A[oe];
    if (t[0] === '[') {
      let s = t.indexOf(']');
      k(s !== -1);
      let n = t.substring(1, s);
      k(qw.isIP(n)), (t = n);
    }
    (A[Ms] = !0),
      ge.beforeConnect.hasSubscribers &&
        ge.beforeConnect.publish({
          connectParams: {
            host: e,
            hostname: t,
            protocol: r,
            port: o,
            servername: A[Xr],
            localAddress: A[Di],
          },
          connector: A[yi],
        });
    try {
      let s = await new Promise((i, a) => {
        A[yi](
          {
            host: e,
            hostname: t,
            protocol: r,
            port: o,
            servername: A[Xr],
            localAddress: A[Di],
          },
          (c, g) => {
            c ? a(c) : i(g);
          },
        );
      });
      if (A.destroyed) {
        T.destroy(
          s.on('error', () => {}),
          new sJ(),
        );
        return;
      }
      if (((A[Ms] = !1), k(s), s.alpnProtocol === 'h2')) {
        Hw ||
          ((Hw = !0),
          process.emitWarning(
            'H2 support is experimental, expect them to change at any time.',
            { code: 'UNDICI-H2' },
          ));
        let i = vc.connect(A[oe], {
          createConnection: () => s,
          peerMaxConcurrentStreams: A[xc].maxConcurrentStreams,
        });
        (A[zt] = 'h2'),
          (i[Xt] = A),
          (i[MA] = s),
          i.on('error', DJ),
          i.on('frameError', mJ),
          i.on('end', kJ),
          i.on('goaway', RJ),
          i.on('close', RC),
          i.unref(),
          (A[je] = i),
          (s[je] = i);
      } else
        dC || ((dC = await DC), (DC = null)),
          (s[wi] = !1),
          (s[br] = !1),
          (s[de] = !1),
          (s[Gs] = !1),
          (s[UA] = new kC(A, s, dC));
      (s[Kw] = 0),
        (s[Ri] = A[Ri]),
        (s[Xt] = A),
        (s[se] = null),
        s.on('error', Ay).on('readable', $w).on('end', ey).on('close', RC),
        (A[MA] = s),
        ge.connected.hasSubscribers &&
          ge.connected.publish({
            connectParams: {
              host: e,
              hostname: t,
              protocol: r,
              port: o,
              servername: A[Xr],
              localAddress: A[Di],
            },
            connector: A[yi],
            socket: s,
          }),
        A.emit('connect', A[oe], [A]);
    } catch (s) {
      if (A.destroyed) return;
      if (
        ((A[Ms] = !1),
        ge.connectError.hasSubscribers &&
          ge.connectError.publish({
            connectParams: {
              host: e,
              hostname: t,
              protocol: r,
              port: o,
              servername: A[Xr],
              localAddress: A[Di],
            },
            connector: A[yi],
            error: s,
          }),
        s.code === 'ERR_TLS_CERT_ALTNAME_INVALID')
      )
        for (k(A[SA] === 0); A[To] > 0 && A[DA][A[_e]].servername === A[Xr]; ) {
          let n = A[DA][A[_e]++];
          fe(A, n, s);
        }
      else Jc(A, s);
      A.emit('connectionError', A[oe], [A], s);
    }
    Ze(A);
  }
  function Vw(A) {
    (A[$r] = 0), A.emit('drain', A[oe], [A]);
  }
  function Ze(A, e) {
    A[Fo] !== 2 &&
      ((A[Fo] = 2),
      NJ(A, e),
      (A[Fo] = 0),
      A[mA] > 256 && (A[DA].splice(0, A[mA]), (A[_e] -= A[mA]), (A[mA] = 0)));
  }
  function NJ(A, e) {
    for (;;) {
      if (A.destroyed) {
        k(A[To] === 0);
        return;
      }
      if (A[zr] && !A[So]) {
        A[zr](), (A[zr] = null);
        return;
      }
      let t = A[MA];
      if (t && !t.destroyed && t.alpnProtocol !== 'h2') {
        if (
          (A[So] === 0
            ? !t[wi] && t.unref && (t.unref(), (t[wi] = !0))
            : t[wi] && t.ref && (t.ref(), (t[wi] = !1)),
          A[So] === 0)
        )
          t[UA].timeoutType !== mC && t[UA].setTimeout(A[mi], mC);
        else if (
          A[SA] > 0 &&
          t[UA].statusCode < 200 &&
          t[UA].timeoutType !== xs
        ) {
          let o = A[DA][A[mA]],
            s = o.headersTimeout != null ? o.headersTimeout : A[jw];
          t[UA].setTimeout(s, xs);
        }
      }
      if (A[pC]) A[$r] = 2;
      else if (A[$r] === 2) {
        e ? ((A[$r] = 1), process.nextTick(Vw, A)) : Vw(A);
        continue;
      }
      if (A[To] === 0 || A[SA] >= (A[Ao] || 1)) return;
      let r = A[DA][A[_e]];
      if (A[oe].protocol === 'https:' && A[Xr] !== r.servername) {
        if (A[SA] > 0) return;
        if (((A[Xr] = r.servername), t && t.servername !== r.servername)) {
          T.destroy(t, new Kt('servername changed'));
          return;
        }
      }
      if (A[Ms]) return;
      if (!t && !A[je]) {
        ty(A);
        return;
      }
      if (
        t.destroyed ||
        t[br] ||
        t[de] ||
        t[Gs] ||
        (A[SA] > 0 && !r.idempotent) ||
        (A[SA] > 0 && (r.upgrade || r.method === 'CONNECT')) ||
        (A[SA] > 0 &&
          T.bodyLength(r.body) !== 0 &&
          (T.isStream(r.body) || T.isAsyncIterable(r.body)))
      )
        return;
      !r.aborted && UJ(A, r) ? A[_e]++ : A[DA].splice(A[_e], 1);
    }
  }
  function ry(A) {
    return (
      A !== 'GET' &&
      A !== 'HEAD' &&
      A !== 'OPTIONS' &&
      A !== 'TRACE' &&
      A !== 'CONNECT'
    );
  }
  function UJ(A, e) {
    if (A[zt] === 'h2') {
      MJ(A, A[je], e);
      return;
    }
    let {
        body: t,
        method: r,
        path: o,
        host: s,
        upgrade: n,
        headers: i,
        blocking: a,
        reset: c,
      } = e,
      g = r === 'PUT' || r === 'POST' || r === 'PATCH';
    t && typeof t.read == 'function' && t.read(0);
    let E = T.bodyLength(t),
      l = E;
    if (
      (l === null && (l = e.contentLength),
      l === 0 && !g && (l = null),
      ry(r) && l > 0 && e.contentLength !== null && e.contentLength !== l)
    ) {
      if (A[ki]) return fe(A, e, new Rr()), !1;
      process.emitWarning(new Rr());
    }
    let C = A[MA];
    try {
      e.onConnect((h) => {
        e.aborted ||
          e.completed ||
          (fe(A, e, h || new bC()), T.destroy(C, new Kt('aborted')));
      });
    } catch (h) {
      fe(A, e, h);
    }
    if (e.aborted) return !1;
    r === 'HEAD' && (C[de] = !0),
      (n || r === 'CONNECT') && (C[de] = !0),
      c != null && (C[de] = c),
      A[Ri] && C[Kw]++ >= A[Ri] && (C[de] = !0),
      a && (C[Gs] = !0);
    let Q = `${r} ${o} HTTP/1.1\r
`;
    return (
      typeof s == 'string'
        ? (Q += `host: ${s}\r
`)
        : (Q += A[Pw]),
      n
        ? (Q += `connection: upgrade\r
upgrade: ${n}\r
`)
        : A[Ao] && !C[de]
          ? (Q += `connection: keep-alive\r
`)
          : (Q += `connection: close\r
`),
      i && (Q += i),
      ge.sendHeaders.hasSubscribers &&
        ge.sendHeaders.publish({ request: e, headers: Q, socket: C }),
      !t || E === 0
        ? (l === 0
            ? C.write(
                `${Q}content-length: 0\r
\r
`,
                'latin1',
              )
            : (k(l === null, 'no body must not have content length'),
              C.write(
                `${Q}\r
`,
                'latin1',
              )),
          e.onRequestSent())
        : T.isBuffer(t)
          ? (k(l === t.byteLength, 'buffer body must have content length'),
            C.cork(),
            C.write(
              `${Q}content-length: ${l}\r
\r
`,
              'latin1',
            ),
            C.write(t),
            C.uncork(),
            e.onBodySent(t),
            e.onRequestSent(),
            g || (C[de] = !0))
          : T.isBlobLike(t)
            ? typeof t.stream == 'function'
              ? Oc({
                  body: t.stream(),
                  client: A,
                  request: e,
                  socket: C,
                  contentLength: l,
                  header: Q,
                  expectsPayload: g,
                })
              : sy({
                  body: t,
                  client: A,
                  request: e,
                  socket: C,
                  contentLength: l,
                  header: Q,
                  expectsPayload: g,
                })
            : T.isStream(t)
              ? oy({
                  body: t,
                  client: A,
                  request: e,
                  socket: C,
                  contentLength: l,
                  header: Q,
                  expectsPayload: g,
                })
              : T.isIterable(t)
                ? Oc({
                    body: t,
                    client: A,
                    request: e,
                    socket: C,
                    contentLength: l,
                    header: Q,
                    expectsPayload: g,
                  })
                : k(!1),
      !0
    );
  }
  function MJ(A, e, t) {
    let {
        body: r,
        method: o,
        path: s,
        host: n,
        upgrade: i,
        expectContinue: a,
        signal: c,
        headers: g,
      } = t,
      E;
    if ((typeof g == 'string' ? (E = fC[BJ](g.trim())) : (E = g), i))
      return fe(A, t, new Error('Upgrade not supported for H2')), !1;
    try {
      t.onConnect((d) => {
        t.aborted || t.completed || fe(A, t, d || new bC());
      });
    } catch (d) {
      fe(A, t, d);
    }
    if (t.aborted) return !1;
    let l,
      C = A[xc];
    if (((E[hJ] = n || A[zw]), (E[IJ] = o), o === 'CONNECT'))
      return (
        e.ref(),
        (l = e.request(E, { endStream: !1, signal: c })),
        l.id && !l.pending
          ? (t.onUpgrade(null, null, l), ++C.openStreams)
          : l.once('ready', () => {
              t.onUpgrade(null, null, l), ++C.openStreams;
            }),
        l.once('close', () => {
          (C.openStreams -= 1), C.openStreams === 0 && e.unref();
        }),
        !0
      );
    (E[dJ] = s), (E[fJ] = 'https');
    let Q = o === 'PUT' || o === 'POST' || o === 'PATCH';
    r && typeof r.read == 'function' && r.read(0);
    let h = T.bodyLength(r);
    if (
      (h == null && (h = t.contentLength),
      (h === 0 || !Q) && (h = null),
      ry(o) && h > 0 && t.contentLength != null && t.contentLength !== h)
    ) {
      if (A[ki]) return fe(A, t, new Rr()), !1;
      process.emitWarning(new Rr());
    }
    h != null &&
      (k(r, 'no body must not have content length'), (E[pJ] = `${h}`)),
      e.ref();
    let I = o === 'GET' || o === 'HEAD';
    return (
      a
        ? ((E[wJ] = '100-continue'),
          (l = e.request(E, { endStream: I, signal: c })),
          l.once('continue', u))
        : ((l = e.request(E, { endStream: I, signal: c })), u()),
      ++C.openStreams,
      l.once('response', (d) => {
        let { [yJ]: f, ...D } = d;
        t.onHeaders(Number(f), D, l.resume.bind(l), '') === !1 && l.pause();
      }),
      l.once('end', () => {
        t.onComplete([]);
      }),
      l.on('data', (d) => {
        t.onData(d) === !1 && l.pause();
      }),
      l.once('close', () => {
        (C.openStreams -= 1), C.openStreams === 0 && e.unref();
      }),
      l.once('error', function (d) {
        A[je] &&
          !A[je].destroyed &&
          !this.closed &&
          !this.destroyed &&
          ((C.streams -= 1), T.destroy(l, d));
      }),
      l.once('frameError', (d, f) => {
        let D = new Kt(`HTTP/2: "frameError" received - type ${d}, code ${f}`);
        fe(A, t, D),
          A[je] &&
            !A[je].destroyed &&
            !this.closed &&
            !this.destroyed &&
            ((C.streams -= 1), T.destroy(l, D));
      }),
      !0
    );
    function u() {
      r
        ? T.isBuffer(r)
          ? (k(h === r.byteLength, 'buffer body must have content length'),
            l.cork(),
            l.write(r),
            l.uncork(),
            l.end(),
            t.onBodySent(r),
            t.onRequestSent())
          : T.isBlobLike(r)
            ? typeof r.stream == 'function'
              ? Oc({
                  client: A,
                  request: t,
                  contentLength: h,
                  h2stream: l,
                  expectsPayload: Q,
                  body: r.stream(),
                  socket: A[MA],
                  header: '',
                })
              : sy({
                  body: r,
                  client: A,
                  request: t,
                  contentLength: h,
                  expectsPayload: Q,
                  h2stream: l,
                  header: '',
                  socket: A[MA],
                })
            : T.isStream(r)
              ? oy({
                  body: r,
                  client: A,
                  request: t,
                  contentLength: h,
                  expectsPayload: Q,
                  socket: A[MA],
                  h2stream: l,
                  header: '',
                })
              : T.isIterable(r)
                ? Oc({
                    body: r,
                    client: A,
                    request: t,
                    contentLength: h,
                    expectsPayload: Q,
                    header: '',
                    h2stream: l,
                    socket: A[MA],
                  })
                : k(!1)
        : t.onRequestSent();
    }
  }
  function oy({
    h2stream: A,
    body: e,
    client: t,
    request: r,
    socket: o,
    contentLength: s,
    header: n,
    expectsPayload: i,
  }) {
    if (
      (k(s !== 0 || t[SA] === 0, 'stream body cannot be pipelined'),
      t[zt] === 'h2')
    ) {
      let h = function (I) {
          r.onBodySent(I);
        },
        Q = XY(e, A, (I) => {
          I ? (T.destroy(e, I), T.destroy(A, I)) : r.onRequestSent();
        });
      Q.on('data', h),
        Q.once('end', () => {
          Q.removeListener('data', h), T.destroy(Q);
        });
      return;
    }
    let a = !1,
      c = new Yc({
        socket: o,
        request: r,
        contentLength: s,
        client: t,
        expectsPayload: i,
        header: n,
      }),
      g = function (Q) {
        if (!a)
          try {
            !c.write(Q) && this.pause && this.pause();
          } catch (h) {
            T.destroy(this, h);
          }
      },
      E = function () {
        a || (e.resume && e.resume());
      },
      l = function () {
        if (a) return;
        let Q = new bC();
        queueMicrotask(() => C(Q));
      },
      C = function (Q) {
        if (!a) {
          if (
            ((a = !0),
            k(o.destroyed || (o[br] && t[SA] <= 1)),
            o.off('drain', E).off('error', C),
            e
              .removeListener('data', g)
              .removeListener('end', C)
              .removeListener('error', C)
              .removeListener('close', l),
            !Q)
          )
            try {
              c.end();
            } catch (h) {
              Q = h;
            }
          c.destroy(Q),
            Q && (Q.code !== 'UND_ERR_INFO' || Q.message !== 'reset')
              ? T.destroy(e, Q)
              : T.destroy(e);
        }
      };
    e.on('data', g).on('end', C).on('error', C).on('close', l),
      e.resume && e.resume(),
      o.on('drain', E).on('error', C);
  }
  async function sy({
    h2stream: A,
    body: e,
    client: t,
    request: r,
    socket: o,
    contentLength: s,
    header: n,
    expectsPayload: i,
  }) {
    k(s === e.size, 'blob body must have content length');
    let a = t[zt] === 'h2';
    try {
      if (s != null && s !== e.size) throw new Rr();
      let c = Buffer.from(await e.arrayBuffer());
      a
        ? (A.cork(), A.write(c), A.uncork())
        : (o.cork(),
          o.write(
            `${n}content-length: ${s}\r
\r
`,
            'latin1',
          ),
          o.write(c),
          o.uncork()),
        r.onBodySent(c),
        r.onRequestSent(),
        i || (o[de] = !0),
        Ze(t);
    } catch (c) {
      T.destroy(a ? A : o, c);
    }
  }
  async function Oc({
    h2stream: A,
    body: e,
    client: t,
    request: r,
    socket: o,
    contentLength: s,
    header: n,
    expectsPayload: i,
  }) {
    k(s !== 0 || t[SA] === 0, 'iterator body cannot be pipelined');
    let a = null;
    function c() {
      if (a) {
        let l = a;
        (a = null), l();
      }
    }
    let g = () =>
      new Promise((l, C) => {
        k(a === null), o[se] ? C(o[se]) : (a = l);
      });
    if (t[zt] === 'h2') {
      A.on('close', c).on('drain', c);
      try {
        for await (let l of e) {
          if (o[se]) throw o[se];
          let C = A.write(l);
          r.onBodySent(l), C || (await g());
        }
      } catch (l) {
        A.destroy(l);
      } finally {
        r.onRequestSent(), A.end(), A.off('close', c).off('drain', c);
      }
      return;
    }
    o.on('close', c).on('drain', c);
    let E = new Yc({
      socket: o,
      request: r,
      contentLength: s,
      client: t,
      expectsPayload: i,
      header: n,
    });
    try {
      for await (let l of e) {
        if (o[se]) throw o[se];
        E.write(l) || (await g());
      }
      E.end();
    } catch (l) {
      E.destroy(l);
    } finally {
      o.off('close', c).off('drain', c);
    }
  }
  var Yc = class {
    constructor({
      socket: e,
      request: t,
      contentLength: r,
      client: o,
      expectsPayload: s,
      header: n,
    }) {
      (this.socket = e),
        (this.request = t),
        (this.contentLength = r),
        (this.client = o),
        (this.bytesWritten = 0),
        (this.expectsPayload = s),
        (this.header = n),
        (e[br] = !0);
    }
    write(e) {
      let {
        socket: t,
        request: r,
        contentLength: o,
        client: s,
        bytesWritten: n,
        expectsPayload: i,
        header: a,
      } = this;
      if (t[se]) throw t[se];
      if (t.destroyed) return !1;
      let c = Buffer.byteLength(e);
      if (!c) return !0;
      if (o !== null && n + c > o) {
        if (s[ki]) throw new Rr();
        process.emitWarning(new Rr());
      }
      t.cork(),
        n === 0 &&
          (i || (t[de] = !0),
          o === null
            ? t.write(
                `${a}transfer-encoding: chunked\r
`,
                'latin1',
              )
            : t.write(
                `${a}content-length: ${o}\r
\r
`,
                'latin1',
              )),
        o === null &&
          t.write(
            `\r
${c.toString(16)}\r
`,
            'latin1',
          ),
        (this.bytesWritten += c);
      let g = t.write(e);
      return (
        t.uncork(),
        r.onBodySent(e),
        g ||
          (t[UA].timeout &&
            t[UA].timeoutType === xs &&
            t[UA].timeout.refresh &&
            t[UA].timeout.refresh()),
        g
      );
    }
    end() {
      let {
        socket: e,
        contentLength: t,
        client: r,
        bytesWritten: o,
        expectsPayload: s,
        header: n,
        request: i,
      } = this;
      if ((i.onRequestSent(), (e[br] = !1), e[se])) throw e[se];
      if (!e.destroyed) {
        if (
          (o === 0
            ? s
              ? e.write(
                  `${n}content-length: 0\r
\r
`,
                  'latin1',
                )
              : e.write(
                  `${n}\r
`,
                  'latin1',
                )
            : t === null &&
              e.write(
                `\r
0\r
\r
`,
                'latin1',
              ),
          t !== null && o !== t)
        ) {
          if (r[ki]) throw new Rr();
          process.emitWarning(new Rr());
        }
        e[UA].timeout &&
          e[UA].timeoutType === xs &&
          e[UA].timeout.refresh &&
          e[UA].timeout.refresh(),
          Ze(r);
      }
    }
    destroy(e) {
      let { socket: t, client: r } = this;
      (t[br] = !1),
        e &&
          (k(r[SA] <= 1, 'pipeline should only contain this request'),
          T.destroy(t, e));
    }
  };
  function fe(A, e, t) {
    try {
      e.onError(t), k(e.aborted);
    } catch (r) {
      A.emit('error', r);
    }
  }
  ny.exports = yC;
});
var ay = B((hrA, iy) => {
  'use strict';
  var Hc = class {
    constructor() {
      (this.bottom = 0),
        (this.top = 0),
        (this.list = new Array(2048)),
        (this.next = null);
    }
    isEmpty() {
      return this.top === this.bottom;
    }
    isFull() {
      return ((this.top + 1) & 2047) === this.bottom;
    }
    push(e) {
      (this.list[this.top] = e), (this.top = (this.top + 1) & 2047);
    }
    shift() {
      let e = this.list[this.bottom];
      return e === void 0
        ? null
        : ((this.list[this.bottom] = void 0),
          (this.bottom = (this.bottom + 1) & 2047),
          e);
    }
  };
  iy.exports = class {
    constructor() {
      this.head = this.tail = new Hc();
    }
    isEmpty() {
      return this.head.isEmpty();
    }
    push(e) {
      this.head.isFull() && (this.head = this.head.next = new Hc()),
        this.head.push(e);
    }
    shift() {
      let e = this.tail,
        t = e.shift();
      return e.isEmpty() && e.next !== null && (this.tail = e.next), t;
    }
  };
});
var gy = B((IrA, cy) => {
  var {
      kFree: LJ,
      kConnected: GJ,
      kPending: xJ,
      kQueued: vJ,
      kRunning: OJ,
      kSize: YJ,
    } = dA(),
    No = Symbol('pool'),
    FC = class {
      constructor(e) {
        this[No] = e;
      }
      get connected() {
        return this[No][GJ];
      }
      get free() {
        return this[No][LJ];
      }
      get pending() {
        return this[No][xJ];
      }
      get queued() {
        return this[No][vJ];
      }
      get running() {
        return this[No][OJ];
      }
      get size() {
        return this[No][YJ];
      }
    };
  cy.exports = FC;
});
var LC = B((drA, fy) => {
  'use strict';
  var JJ = di(),
    HJ = ay(),
    {
      kConnected: SC,
      kSize: Ey,
      kRunning: ly,
      kPending: Qy,
      kQueued: Fi,
      kBusy: VJ,
      kFree: qJ,
      kUrl: PJ,
      kClose: WJ,
      kDestroy: _J,
      kDispatch: jJ,
    } = dA(),
    ZJ = gy(),
    be = Symbol('clients'),
    pe = Symbol('needDrain'),
    Si = Symbol('queue'),
    TC = Symbol('closed resolve'),
    NC = Symbol('onDrain'),
    Cy = Symbol('onConnect'),
    By = Symbol('onDisconnect'),
    uy = Symbol('onConnectionError'),
    UC = Symbol('get dispatcher'),
    Iy = Symbol('add client'),
    dy = Symbol('remove client'),
    hy = Symbol('stats'),
    MC = class extends JJ {
      constructor() {
        super(), (this[Si] = new HJ()), (this[be] = []), (this[Fi] = 0);
        let e = this;
        (this[NC] = function (r, o) {
          let s = e[Si],
            n = !1;
          for (; !n; ) {
            let i = s.shift();
            if (!i) break;
            e[Fi]--, (n = !this.dispatch(i.opts, i.handler));
          }
          (this[pe] = n),
            !this[pe] && e[pe] && ((e[pe] = !1), e.emit('drain', r, [e, ...o])),
            e[TC] &&
              s.isEmpty() &&
              Promise.all(e[be].map((i) => i.close())).then(e[TC]);
        }),
          (this[Cy] = (t, r) => {
            e.emit('connect', t, [e, ...r]);
          }),
          (this[By] = (t, r, o) => {
            e.emit('disconnect', t, [e, ...r], o);
          }),
          (this[uy] = (t, r, o) => {
            e.emit('connectionError', t, [e, ...r], o);
          }),
          (this[hy] = new ZJ(this));
      }
      get [VJ]() {
        return this[pe];
      }
      get [SC]() {
        return this[be].filter((e) => e[SC]).length;
      }
      get [qJ]() {
        return this[be].filter((e) => e[SC] && !e[pe]).length;
      }
      get [Qy]() {
        let e = this[Fi];
        for (let { [Qy]: t } of this[be]) e += t;
        return e;
      }
      get [ly]() {
        let e = 0;
        for (let { [ly]: t } of this[be]) e += t;
        return e;
      }
      get [Ey]() {
        let e = this[Fi];
        for (let { [Ey]: t } of this[be]) e += t;
        return e;
      }
      get stats() {
        return this[hy];
      }
      async [WJ]() {
        return this[Si].isEmpty()
          ? Promise.all(this[be].map((e) => e.close()))
          : new Promise((e) => {
              this[TC] = e;
            });
      }
      async [_J](e) {
        for (;;) {
          let t = this[Si].shift();
          if (!t) break;
          t.handler.onError(e);
        }
        return Promise.all(this[be].map((t) => t.destroy(e)));
      }
      [jJ](e, t) {
        let r = this[UC]();
        return (
          r
            ? r.dispatch(e, t) || ((r[pe] = !0), (this[pe] = !this[UC]()))
            : ((this[pe] = !0),
              this[Si].push({ opts: e, handler: t }),
              this[Fi]++),
          !this[pe]
        );
      }
      [Iy](e) {
        return (
          e
            .on('drain', this[NC])
            .on('connect', this[Cy])
            .on('disconnect', this[By])
            .on('connectionError', this[uy]),
          this[be].push(e),
          this[pe] &&
            process.nextTick(() => {
              this[pe] && this[NC](e[PJ], [this, e]);
            }),
          this
        );
      }
      [dy](e) {
        e.close(() => {
          let t = this[be].indexOf(e);
          t !== -1 && this[be].splice(t, 1);
        }),
          (this[pe] = this[be].some(
            (t) => !t[pe] && t.closed !== !0 && t.destroyed !== !0,
          ));
      }
    };
  fy.exports = {
    PoolBase: MC,
    kClients: be,
    kNeedDrain: pe,
    kAddClient: Iy,
    kRemoveClient: dy,
    kGetDispatcher: UC,
  };
});
var vs = B((frA, Dy) => {
  'use strict';
  var {
      PoolBase: KJ,
      kClients: py,
      kNeedDrain: XJ,
      kAddClient: zJ,
      kGetDispatcher: $J,
    } = LC(),
    A2 = bi(),
    { InvalidArgumentError: GC } = uA(),
    xC = eA(),
    { kUrl: wy, kInterceptors: e2 } = dA(),
    t2 = fi(),
    vC = Symbol('options'),
    OC = Symbol('connections'),
    yy = Symbol('factory');
  function r2(A, e) {
    return new A2(A, e);
  }
  var YC = class extends KJ {
    constructor(
      e,
      {
        connections: t,
        factory: r = r2,
        connect: o,
        connectTimeout: s,
        tls: n,
        maxCachedSessions: i,
        socketPath: a,
        autoSelectFamily: c,
        autoSelectFamilyAttemptTimeout: g,
        allowH2: E,
        ...l
      } = {},
    ) {
      if ((super(), t != null && (!Number.isFinite(t) || t < 0)))
        throw new GC('invalid connections');
      if (typeof r != 'function') throw new GC('factory must be a function.');
      if (o != null && typeof o != 'function' && typeof o != 'object')
        throw new GC('connect must be a function or an object');
      typeof o != 'function' &&
        (o = t2({
          ...n,
          maxCachedSessions: i,
          allowH2: E,
          socketPath: a,
          timeout: s,
          ...(xC.nodeHasAutoSelectFamily && c
            ? { autoSelectFamily: c, autoSelectFamilyAttemptTimeout: g }
            : void 0),
          ...o,
        })),
        (this[e2] =
          l.interceptors &&
          l.interceptors.Pool &&
          Array.isArray(l.interceptors.Pool)
            ? l.interceptors.Pool
            : []),
        (this[OC] = t || null),
        (this[wy] = xC.parseOrigin(e)),
        (this[vC] = { ...xC.deepClone(l), connect: o, allowH2: E }),
        (this[vC].interceptors = l.interceptors
          ? { ...l.interceptors }
          : void 0),
        (this[yy] = r);
    }
    [$J]() {
      let e = this[py].find((t) => !t[XJ]);
      return (
        e ||
        ((!this[OC] || this[py].length < this[OC]) &&
          ((e = this[yy](this[wy], this[vC])), this[zJ](e)),
        e)
      );
    }
  };
  Dy.exports = YC;
});
var Sy = B((prA, Fy) => {
  'use strict';
  var { BalancedPoolMissingUpstreamError: o2, InvalidArgumentError: s2 } = uA(),
    {
      PoolBase: n2,
      kClients: we,
      kNeedDrain: Ti,
      kAddClient: i2,
      kRemoveClient: a2,
      kGetDispatcher: c2,
    } = LC(),
    g2 = vs(),
    { kUrl: JC, kInterceptors: E2 } = dA(),
    { parseOrigin: my } = eA(),
    ky = Symbol('factory'),
    Vc = Symbol('options'),
    Ry = Symbol('kGreatestCommonDivisor'),
    Uo = Symbol('kCurrentWeight'),
    Mo = Symbol('kIndex'),
    lt = Symbol('kWeight'),
    qc = Symbol('kMaxWeightPerServer'),
    Pc = Symbol('kErrorPenalty');
  function by(A, e) {
    return e === 0 ? A : by(e, A % e);
  }
  function l2(A, e) {
    return new g2(A, e);
  }
  var HC = class extends n2 {
    constructor(e = [], { factory: t = l2, ...r } = {}) {
      if (
        (super(),
        (this[Vc] = r),
        (this[Mo] = -1),
        (this[Uo] = 0),
        (this[qc] = this[Vc].maxWeightPerServer || 100),
        (this[Pc] = this[Vc].errorPenalty || 15),
        Array.isArray(e) || (e = [e]),
        typeof t != 'function')
      )
        throw new s2('factory must be a function.');
      (this[E2] =
        r.interceptors &&
        r.interceptors.BalancedPool &&
        Array.isArray(r.interceptors.BalancedPool)
          ? r.interceptors.BalancedPool
          : []),
        (this[ky] = t);
      for (let o of e) this.addUpstream(o);
      this._updateBalancedPoolStats();
    }
    addUpstream(e) {
      let t = my(e).origin;
      if (
        this[we].find(
          (o) => o[JC].origin === t && o.closed !== !0 && o.destroyed !== !0,
        )
      )
        return this;
      let r = this[ky](t, Object.assign({}, this[Vc]));
      this[i2](r),
        r.on('connect', () => {
          r[lt] = Math.min(this[qc], r[lt] + this[Pc]);
        }),
        r.on('connectionError', () => {
          (r[lt] = Math.max(1, r[lt] - this[Pc])),
            this._updateBalancedPoolStats();
        }),
        r.on('disconnect', (...o) => {
          let s = o[2];
          s &&
            s.code === 'UND_ERR_SOCKET' &&
            ((r[lt] = Math.max(1, r[lt] - this[Pc])),
            this._updateBalancedPoolStats());
        });
      for (let o of this[we]) o[lt] = this[qc];
      return this._updateBalancedPoolStats(), this;
    }
    _updateBalancedPoolStats() {
      this[Ry] = this[we].map((e) => e[lt]).reduce(by, 0);
    }
    removeUpstream(e) {
      let t = my(e).origin,
        r = this[we].find(
          (o) => o[JC].origin === t && o.closed !== !0 && o.destroyed !== !0,
        );
      return r && this[a2](r), this;
    }
    get upstreams() {
      return this[we]
        .filter((e) => e.closed !== !0 && e.destroyed !== !0)
        .map((e) => e[JC].origin);
    }
    [c2]() {
      if (this[we].length === 0) throw new o2();
      if (
        !this[we].find(
          (s) => !s[Ti] && s.closed !== !0 && s.destroyed !== !0,
        ) ||
        this[we].map((s) => s[Ti]).reduce((s, n) => s && n, !0)
      )
        return;
      let r = 0,
        o = this[we].findIndex((s) => !s[Ti]);
      for (; r++ < this[we].length; ) {
        this[Mo] = (this[Mo] + 1) % this[we].length;
        let s = this[we][this[Mo]];
        if (
          (s[lt] > this[we][o][lt] && !s[Ti] && (o = this[Mo]),
          this[Mo] === 0 &&
            ((this[Uo] = this[Uo] - this[Ry]),
            this[Uo] <= 0 && (this[Uo] = this[qc])),
          s[lt] >= this[Uo] && !s[Ti])
        )
          return s;
      }
      return (this[Uo] = this[we][o][lt]), (this[Mo] = o), this[we][o];
    }
  };
  Fy.exports = HC;
});
var VC = B((wrA, Uy) => {
  'use strict';
  var { kConnected: Ty, kSize: Ny } = dA(),
    Wc = class {
      constructor(e) {
        this.value = e;
      }
      deref() {
        return this.value[Ty] === 0 && this.value[Ny] === 0
          ? void 0
          : this.value;
      }
    },
    _c = class {
      constructor(e) {
        this.finalizer = e;
      }
      register(e, t) {
        e.on &&
          e.on('disconnect', () => {
            e[Ty] === 0 && e[Ny] === 0 && this.finalizer(t);
          });
      }
    };
  Uy.exports = function () {
    return process.env.NODE_V8_COVERAGE
      ? { WeakRef: Wc, FinalizationRegistry: _c }
      : {
          WeakRef: global.WeakRef || Wc,
          FinalizationRegistry: global.FinalizationRegistry || _c,
        };
  };
});
var Ni = B((yrA, Jy) => {
  'use strict';
  var { InvalidArgumentError: jc } = uA(),
    {
      kClients: eo,
      kRunning: My,
      kClose: Q2,
      kDestroy: C2,
      kDispatch: B2,
      kInterceptors: u2,
    } = dA(),
    h2 = di(),
    I2 = vs(),
    d2 = bi(),
    f2 = eA(),
    p2 = Nc(),
    { WeakRef: w2, FinalizationRegistry: y2 } = VC()(),
    Ly = Symbol('onConnect'),
    Gy = Symbol('onDisconnect'),
    xy = Symbol('onConnectionError'),
    D2 = Symbol('maxRedirections'),
    vy = Symbol('onDrain'),
    Oy = Symbol('factory'),
    Yy = Symbol('finalizer'),
    qC = Symbol('options');
  function m2(A, e) {
    return e && e.connections === 1 ? new d2(A, e) : new I2(A, e);
  }
  var PC = class extends h2 {
    constructor({
      factory: e = m2,
      maxRedirections: t = 0,
      connect: r,
      ...o
    } = {}) {
      if ((super(), typeof e != 'function'))
        throw new jc('factory must be a function.');
      if (r != null && typeof r != 'function' && typeof r != 'object')
        throw new jc('connect must be a function or an object');
      if (!Number.isInteger(t) || t < 0)
        throw new jc('maxRedirections must be a positive number');
      r && typeof r != 'function' && (r = { ...r }),
        (this[u2] =
          o.interceptors &&
          o.interceptors.Agent &&
          Array.isArray(o.interceptors.Agent)
            ? o.interceptors.Agent
            : [p2({ maxRedirections: t })]),
        (this[qC] = { ...f2.deepClone(o), connect: r }),
        (this[qC].interceptors = o.interceptors
          ? { ...o.interceptors }
          : void 0),
        (this[D2] = t),
        (this[Oy] = e),
        (this[eo] = new Map()),
        (this[Yy] = new y2((n) => {
          let i = this[eo].get(n);
          i !== void 0 && i.deref() === void 0 && this[eo].delete(n);
        }));
      let s = this;
      (this[vy] = (n, i) => {
        s.emit('drain', n, [s, ...i]);
      }),
        (this[Ly] = (n, i) => {
          s.emit('connect', n, [s, ...i]);
        }),
        (this[Gy] = (n, i, a) => {
          s.emit('disconnect', n, [s, ...i], a);
        }),
        (this[xy] = (n, i, a) => {
          s.emit('connectionError', n, [s, ...i], a);
        });
    }
    get [My]() {
      let e = 0;
      for (let t of this[eo].values()) {
        let r = t.deref();
        r && (e += r[My]);
      }
      return e;
    }
    [B2](e, t) {
      let r;
      if (e.origin && (typeof e.origin == 'string' || e.origin instanceof URL))
        r = String(e.origin);
      else throw new jc('opts.origin must be a non-empty string or URL.');
      let o = this[eo].get(r),
        s = o ? o.deref() : null;
      return (
        s ||
          ((s = this[Oy](e.origin, this[qC])
            .on('drain', this[vy])
            .on('connect', this[Ly])
            .on('disconnect', this[Gy])
            .on('connectionError', this[xy])),
          this[eo].set(r, new w2(s)),
          this[Yy].register(s, r)),
        s.dispatch(e, t)
      );
    }
    async [Q2]() {
      let e = [];
      for (let t of this[eo].values()) {
        let r = t.deref();
        r && e.push(r.close());
      }
      await Promise.all(e);
    }
    async [C2](e) {
      let t = [];
      for (let r of this[eo].values()) {
        let o = r.deref();
        o && t.push(o.destroy(e));
      }
      await Promise.all(t);
    }
  };
  Jy.exports = PC;
});
var Ky = B((mrA, Zy) => {
  'use strict';
  var Py = require('assert'),
    { Readable: k2 } = require('stream'),
    {
      RequestAbortedError: Wy,
      NotSupportedError: R2,
      InvalidArgumentError: b2,
    } = uA(),
    Xc = eA(),
    { ReadableStreamFrom: F2, toUSVString: S2 } = eA(),
    WC,
    Ke = Symbol('kConsume'),
    Zc = Symbol('kReading'),
    to = Symbol('kBody'),
    Hy = Symbol('abort'),
    _y = Symbol('kContentType'),
    Vy = () => {};
  Zy.exports = class extends k2 {
    constructor({
      resume: e,
      abort: t,
      contentType: r = '',
      highWaterMark: o = 64 * 1024,
    }) {
      super({ autoDestroy: !0, read: e, highWaterMark: o }),
        (this._readableState.dataEmitted = !1),
        (this[Hy] = t),
        (this[Ke] = null),
        (this[to] = null),
        (this[_y] = r),
        (this[Zc] = !1);
    }
    destroy(e) {
      return this.destroyed
        ? this
        : (!e && !this._readableState.endEmitted && (e = new Wy()),
          e && this[Hy](),
          super.destroy(e));
    }
    emit(e, ...t) {
      return (
        e === 'data'
          ? (this._readableState.dataEmitted = !0)
          : e === 'error' && (this._readableState.errorEmitted = !0),
        super.emit(e, ...t)
      );
    }
    on(e, ...t) {
      return (
        (e === 'data' || e === 'readable') && (this[Zc] = !0), super.on(e, ...t)
      );
    }
    addListener(e, ...t) {
      return this.on(e, ...t);
    }
    off(e, ...t) {
      let r = super.off(e, ...t);
      return (
        (e === 'data' || e === 'readable') &&
          (this[Zc] =
            this.listenerCount('data') > 0 ||
            this.listenerCount('readable') > 0),
        r
      );
    }
    removeListener(e, ...t) {
      return this.off(e, ...t);
    }
    push(e) {
      return this[Ke] && e !== null && this.readableLength === 0
        ? (jy(this[Ke], e), this[Zc] ? super.push(e) : !0)
        : super.push(e);
    }
    async text() {
      return Kc(this, 'text');
    }
    async json() {
      return Kc(this, 'json');
    }
    async blob() {
      return Kc(this, 'blob');
    }
    async arrayBuffer() {
      return Kc(this, 'arrayBuffer');
    }
    async formData() {
      throw new R2();
    }
    get bodyUsed() {
      return Xc.isDisturbed(this);
    }
    get body() {
      return (
        this[to] ||
          ((this[to] = F2(this)),
          this[Ke] && (this[to].getReader(), Py(this[to].locked))),
        this[to]
      );
    }
    dump(e) {
      let t = e && Number.isFinite(e.limit) ? e.limit : 262144,
        r = e && e.signal;
      if (r)
        try {
          if (typeof r != 'object' || !('aborted' in r))
            throw new b2('signal must be an AbortSignal');
          Xc.throwIfAborted(r);
        } catch (o) {
          return Promise.reject(o);
        }
      return this.closed
        ? Promise.resolve(null)
        : new Promise((o, s) => {
            let n = r
              ? Xc.addAbortListener(r, () => {
                  this.destroy();
                })
              : Vy;
            this.on('close', function () {
              n(),
                r && r.aborted
                  ? s(
                      r.reason ||
                        Object.assign(new Error('The operation was aborted'), {
                          name: 'AbortError',
                        }),
                    )
                  : o(null);
            })
              .on('error', Vy)
              .on('data', function (i) {
                (t -= i.length), t <= 0 && this.destroy();
              })
              .resume();
          });
    }
  };
  function T2(A) {
    return (A[to] && A[to].locked === !0) || A[Ke];
  }
  function N2(A) {
    return Xc.isDisturbed(A) || T2(A);
  }
  async function Kc(A, e) {
    if (N2(A)) throw new TypeError('unusable');
    return (
      Py(!A[Ke]),
      new Promise((t, r) => {
        (A[Ke] = {
          type: e,
          stream: A,
          resolve: t,
          reject: r,
          length: 0,
          body: [],
        }),
          A.on('error', function (o) {
            _C(this[Ke], o);
          }).on('close', function () {
            this[Ke].body !== null && _C(this[Ke], new Wy());
          }),
          process.nextTick(U2, A[Ke]);
      })
    );
  }
  function U2(A) {
    if (A.body === null) return;
    let { _readableState: e } = A.stream;
    for (let t of e.buffer) jy(A, t);
    for (
      e.endEmitted
        ? qy(this[Ke])
        : A.stream.on('end', function () {
            qy(this[Ke]);
          }),
        A.stream.resume();
      A.stream.read() != null;
    );
  }
  function qy(A) {
    let { type: e, body: t, resolve: r, stream: o, length: s } = A;
    try {
      if (e === 'text') r(S2(Buffer.concat(t)));
      else if (e === 'json') r(JSON.parse(Buffer.concat(t)));
      else if (e === 'arrayBuffer') {
        let n = new Uint8Array(s),
          i = 0;
        for (let a of t) n.set(a, i), (i += a.byteLength);
        r(n.buffer);
      } else
        e === 'blob' &&
          (WC || (WC = require('buffer').Blob), r(new WC(t, { type: o[_y] })));
      _C(A);
    } catch (n) {
      o.destroy(n);
    }
  }
  function jy(A, e) {
    (A.length += e.length), A.body.push(e);
  }
  function _C(A, e) {
    A.body !== null &&
      (e ? A.reject(e) : A.resolve(),
      (A.type = null),
      (A.stream = null),
      (A.resolve = null),
      (A.reject = null),
      (A.length = 0),
      (A.body = null));
  }
});
var jC = B((krA, zy) => {
  var M2 = require('assert'),
    { ResponseStatusCodeError: zc } = uA(),
    { toUSVString: Xy } = eA();
  async function L2({
    callback: A,
    body: e,
    contentType: t,
    statusCode: r,
    statusMessage: o,
    headers: s,
  }) {
    M2(e);
    let n = [],
      i = 0;
    for await (let a of e)
      if ((n.push(a), (i += a.length), i > 128 * 1024)) {
        n = null;
        break;
      }
    if (r === 204 || !t || !n) {
      process.nextTick(
        A,
        new zc(`Response status code ${r}${o ? `: ${o}` : ''}`, r, s),
      );
      return;
    }
    try {
      if (t.startsWith('application/json')) {
        let a = JSON.parse(Xy(Buffer.concat(n)));
        process.nextTick(
          A,
          new zc(`Response status code ${r}${o ? `: ${o}` : ''}`, r, s, a),
        );
        return;
      }
      if (t.startsWith('text/')) {
        let a = Xy(Buffer.concat(n));
        process.nextTick(
          A,
          new zc(`Response status code ${r}${o ? `: ${o}` : ''}`, r, s, a),
        );
        return;
      }
    } catch {}
    process.nextTick(
      A,
      new zc(`Response status code ${r}${o ? `: ${o}` : ''}`, r, s),
    );
  }
  zy.exports = { getResolveErrorBodyCallback: L2 };
});
var Ys = B((RrA, AD) => {
  var { addAbortListener: G2 } = eA(),
    { RequestAbortedError: x2 } = uA(),
    Os = Symbol('kListener'),
    ro = Symbol('kSignal');
  function $y(A) {
    A.abort ? A.abort() : A.onError(new x2());
  }
  function v2(A, e) {
    if (((A[ro] = null), (A[Os] = null), !!e)) {
      if (e.aborted) {
        $y(A);
        return;
      }
      (A[ro] = e),
        (A[Os] = () => {
          $y(A);
        }),
        G2(A[ro], A[Os]);
    }
  }
  function O2(A) {
    A[ro] &&
      ('removeEventListener' in A[ro]
        ? A[ro].removeEventListener('abort', A[Os])
        : A[ro].removeListener('abort', A[Os]),
      (A[ro] = null),
      (A[Os] = null));
  }
  AD.exports = { addSignal: v2, removeSignal: O2 };
});
var rD = B((brA, ZC) => {
  'use strict';
  var Y2 = Ky(),
    { InvalidArgumentError: Js, RequestAbortedError: J2 } = uA(),
    $t = eA(),
    { getResolveErrorBodyCallback: H2 } = jC(),
    { AsyncResource: V2 } = require('async_hooks'),
    { addSignal: q2, removeSignal: eD } = Ys(),
    $c = class extends V2 {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new Js('invalid opts');
        let {
          signal: r,
          method: o,
          opaque: s,
          body: n,
          onInfo: i,
          responseHeaders: a,
          throwOnError: c,
          highWaterMark: g,
        } = e;
        try {
          if (typeof t != 'function') throw new Js('invalid callback');
          if (g && (typeof g != 'number' || g < 0))
            throw new Js('invalid highWaterMark');
          if (
            r &&
            typeof r.on != 'function' &&
            typeof r.addEventListener != 'function'
          )
            throw new Js('signal must be an EventEmitter or EventTarget');
          if (o === 'CONNECT') throw new Js('invalid method');
          if (i && typeof i != 'function')
            throw new Js('invalid onInfo callback');
          super('UNDICI_REQUEST');
        } catch (E) {
          throw ($t.isStream(n) && $t.destroy(n.on('error', $t.nop), E), E);
        }
        (this.responseHeaders = a || null),
          (this.opaque = s || null),
          (this.callback = t),
          (this.res = null),
          (this.abort = null),
          (this.body = n),
          (this.trailers = {}),
          (this.context = null),
          (this.onInfo = i || null),
          (this.throwOnError = c),
          (this.highWaterMark = g),
          $t.isStream(n) &&
            n.on('error', (E) => {
              this.onError(E);
            }),
          q2(this, r);
      }
      onConnect(e, t) {
        if (!this.callback) throw new J2();
        (this.abort = e), (this.context = t);
      }
      onHeaders(e, t, r, o) {
        let {
            callback: s,
            opaque: n,
            abort: i,
            context: a,
            responseHeaders: c,
            highWaterMark: g,
          } = this,
          E = c === 'raw' ? $t.parseRawHeaders(t) : $t.parseHeaders(t);
        if (e < 200) {
          this.onInfo && this.onInfo({ statusCode: e, headers: E });
          return;
        }
        let C = (c === 'raw' ? $t.parseHeaders(t) : E)['content-type'],
          Q = new Y2({ resume: r, abort: i, contentType: C, highWaterMark: g });
        (this.callback = null),
          (this.res = Q),
          s !== null &&
            (this.throwOnError && e >= 400
              ? this.runInAsyncScope(H2, null, {
                  callback: s,
                  body: Q,
                  contentType: C,
                  statusCode: e,
                  statusMessage: o,
                  headers: E,
                })
              : this.runInAsyncScope(s, null, null, {
                  statusCode: e,
                  headers: E,
                  trailers: this.trailers,
                  opaque: n,
                  body: Q,
                  context: a,
                }));
      }
      onData(e) {
        let { res: t } = this;
        return t.push(e);
      }
      onComplete(e) {
        let { res: t } = this;
        eD(this), $t.parseHeaders(e, this.trailers), t.push(null);
      }
      onError(e) {
        let { res: t, callback: r, body: o, opaque: s } = this;
        eD(this),
          r &&
            ((this.callback = null),
            queueMicrotask(() => {
              this.runInAsyncScope(r, null, e, { opaque: s });
            })),
          t &&
            ((this.res = null),
            queueMicrotask(() => {
              $t.destroy(t, e);
            })),
          o && ((this.body = null), $t.destroy(o, e));
      }
    };
  function tD(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        tD.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      this.dispatch(A, new $c(A, e));
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A && A.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  ZC.exports = tD;
  ZC.exports.RequestHandler = $c;
});
var iD = B((FrA, nD) => {
  'use strict';
  var { finished: P2, PassThrough: W2 } = require('stream'),
    {
      InvalidArgumentError: Hs,
      InvalidReturnValueError: _2,
      RequestAbortedError: j2,
    } = uA(),
    Ut = eA(),
    { getResolveErrorBodyCallback: Z2 } = jC(),
    { AsyncResource: K2 } = require('async_hooks'),
    { addSignal: X2, removeSignal: oD } = Ys(),
    KC = class extends K2 {
      constructor(e, t, r) {
        if (!e || typeof e != 'object') throw new Hs('invalid opts');
        let {
          signal: o,
          method: s,
          opaque: n,
          body: i,
          onInfo: a,
          responseHeaders: c,
          throwOnError: g,
        } = e;
        try {
          if (typeof r != 'function') throw new Hs('invalid callback');
          if (typeof t != 'function') throw new Hs('invalid factory');
          if (
            o &&
            typeof o.on != 'function' &&
            typeof o.addEventListener != 'function'
          )
            throw new Hs('signal must be an EventEmitter or EventTarget');
          if (s === 'CONNECT') throw new Hs('invalid method');
          if (a && typeof a != 'function')
            throw new Hs('invalid onInfo callback');
          super('UNDICI_STREAM');
        } catch (E) {
          throw (Ut.isStream(i) && Ut.destroy(i.on('error', Ut.nop), E), E);
        }
        (this.responseHeaders = c || null),
          (this.opaque = n || null),
          (this.factory = t),
          (this.callback = r),
          (this.res = null),
          (this.abort = null),
          (this.context = null),
          (this.trailers = null),
          (this.body = i),
          (this.onInfo = a || null),
          (this.throwOnError = g || !1),
          Ut.isStream(i) &&
            i.on('error', (E) => {
              this.onError(E);
            }),
          X2(this, o);
      }
      onConnect(e, t) {
        if (!this.callback) throw new j2();
        (this.abort = e), (this.context = t);
      }
      onHeaders(e, t, r, o) {
        let {
            factory: s,
            opaque: n,
            context: i,
            callback: a,
            responseHeaders: c,
          } = this,
          g = c === 'raw' ? Ut.parseRawHeaders(t) : Ut.parseHeaders(t);
        if (e < 200) {
          this.onInfo && this.onInfo({ statusCode: e, headers: g });
          return;
        }
        this.factory = null;
        let E;
        if (this.throwOnError && e >= 400) {
          let Q = (c === 'raw' ? Ut.parseHeaders(t) : g)['content-type'];
          (E = new W2()),
            (this.callback = null),
            this.runInAsyncScope(Z2, null, {
              callback: a,
              body: E,
              contentType: Q,
              statusCode: e,
              statusMessage: o,
              headers: g,
            });
        } else {
          if (s === null) return;
          if (
            ((E = this.runInAsyncScope(s, null, {
              statusCode: e,
              headers: g,
              opaque: n,
              context: i,
            })),
            !E ||
              typeof E.write != 'function' ||
              typeof E.end != 'function' ||
              typeof E.on != 'function')
          )
            throw new _2('expected Writable');
          P2(E, { readable: !1 }, (C) => {
            let {
              callback: Q,
              res: h,
              opaque: I,
              trailers: u,
              abort: d,
            } = this;
            (this.res = null),
              (C || !h.readable) && Ut.destroy(h, C),
              (this.callback = null),
              this.runInAsyncScope(Q, null, C || null, {
                opaque: I,
                trailers: u,
              }),
              C && d();
          });
        }
        return (
          E.on('drain', r),
          (this.res = E),
          (E.writableNeedDrain !== void 0
            ? E.writableNeedDrain
            : E._writableState && E._writableState.needDrain) !== !0
        );
      }
      onData(e) {
        let { res: t } = this;
        return t ? t.write(e) : !0;
      }
      onComplete(e) {
        let { res: t } = this;
        oD(this), t && ((this.trailers = Ut.parseHeaders(e)), t.end());
      }
      onError(e) {
        let { res: t, callback: r, opaque: o, body: s } = this;
        oD(this),
          (this.factory = null),
          t
            ? ((this.res = null), Ut.destroy(t, e))
            : r &&
              ((this.callback = null),
              queueMicrotask(() => {
                this.runInAsyncScope(r, null, e, { opaque: o });
              })),
          s && ((this.body = null), Ut.destroy(s, e));
      }
    };
  function sD(A, e, t) {
    if (t === void 0)
      return new Promise((r, o) => {
        sD.call(this, A, e, (s, n) => (s ? o(s) : r(n)));
      });
    try {
      this.dispatch(A, new KC(A, e, t));
    } catch (r) {
      if (typeof t != 'function') throw r;
      let o = A && A.opaque;
      queueMicrotask(() => t(r, { opaque: o }));
    }
  }
  nD.exports = sD;
});
var gD = B((SrA, cD) => {
  'use strict';
  var { Readable: aD, Duplex: z2, PassThrough: $2 } = require('stream'),
    {
      InvalidArgumentError: Ui,
      InvalidReturnValueError: AH,
      RequestAbortedError: Ag,
    } = uA(),
    Qt = eA(),
    { AsyncResource: eH } = require('async_hooks'),
    { addSignal: tH, removeSignal: rH } = Ys(),
    oH = require('assert'),
    Vs = Symbol('resume'),
    XC = class extends aD {
      constructor() {
        super({ autoDestroy: !0 }), (this[Vs] = null);
      }
      _read() {
        let { [Vs]: e } = this;
        e && ((this[Vs] = null), e());
      }
      _destroy(e, t) {
        this._read(), t(e);
      }
    },
    zC = class extends aD {
      constructor(e) {
        super({ autoDestroy: !0 }), (this[Vs] = e);
      }
      _read() {
        this[Vs]();
      }
      _destroy(e, t) {
        !e && !this._readableState.endEmitted && (e = new Ag()), t(e);
      }
    },
    $C = class extends eH {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new Ui('invalid opts');
        if (typeof t != 'function') throw new Ui('invalid handler');
        let {
          signal: r,
          method: o,
          opaque: s,
          onInfo: n,
          responseHeaders: i,
        } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new Ui('signal must be an EventEmitter or EventTarget');
        if (o === 'CONNECT') throw new Ui('invalid method');
        if (n && typeof n != 'function')
          throw new Ui('invalid onInfo callback');
        super('UNDICI_PIPELINE'),
          (this.opaque = s || null),
          (this.responseHeaders = i || null),
          (this.handler = t),
          (this.abort = null),
          (this.context = null),
          (this.onInfo = n || null),
          (this.req = new XC().on('error', Qt.nop)),
          (this.ret = new z2({
            readableObjectMode: e.objectMode,
            autoDestroy: !0,
            read: () => {
              let { body: a } = this;
              a && a.resume && a.resume();
            },
            write: (a, c, g) => {
              let { req: E } = this;
              E.push(a, c) || E._readableState.destroyed ? g() : (E[Vs] = g);
            },
            destroy: (a, c) => {
              let { body: g, req: E, res: l, ret: C, abort: Q } = this;
              !a && !C._readableState.endEmitted && (a = new Ag()),
                Q && a && Q(),
                Qt.destroy(g, a),
                Qt.destroy(E, a),
                Qt.destroy(l, a),
                rH(this),
                c(a);
            },
          }).on('prefinish', () => {
            let { req: a } = this;
            a.push(null);
          })),
          (this.res = null),
          tH(this, r);
      }
      onConnect(e, t) {
        let { ret: r, res: o } = this;
        if ((oH(!o, 'pipeline cannot be retried'), r.destroyed)) throw new Ag();
        (this.abort = e), (this.context = t);
      }
      onHeaders(e, t, r) {
        let { opaque: o, handler: s, context: n } = this;
        if (e < 200) {
          if (this.onInfo) {
            let a =
              this.responseHeaders === 'raw'
                ? Qt.parseRawHeaders(t)
                : Qt.parseHeaders(t);
            this.onInfo({ statusCode: e, headers: a });
          }
          return;
        }
        this.res = new zC(r);
        let i;
        try {
          this.handler = null;
          let a =
            this.responseHeaders === 'raw'
              ? Qt.parseRawHeaders(t)
              : Qt.parseHeaders(t);
          i = this.runInAsyncScope(s, null, {
            statusCode: e,
            headers: a,
            opaque: o,
            body: this.res,
            context: n,
          });
        } catch (a) {
          throw (this.res.on('error', Qt.nop), a);
        }
        if (!i || typeof i.on != 'function') throw new AH('expected Readable');
        i
          .on('data', (a) => {
            let { ret: c, body: g } = this;
            !c.push(a) && g.pause && g.pause();
          })
          .on('error', (a) => {
            let { ret: c } = this;
            Qt.destroy(c, a);
          })
          .on('end', () => {
            let { ret: a } = this;
            a.push(null);
          })
          .on('close', () => {
            let { ret: a } = this;
            a._readableState.ended || Qt.destroy(a, new Ag());
          }),
          (this.body = i);
      }
      onData(e) {
        let { res: t } = this;
        return t.push(e);
      }
      onComplete(e) {
        let { res: t } = this;
        t.push(null);
      }
      onError(e) {
        let { ret: t } = this;
        (this.handler = null), Qt.destroy(t, e);
      }
    };
  function sH(A, e) {
    try {
      let t = new $C(A, e);
      return this.dispatch({ ...A, body: t.req }, t), t.ret;
    } catch (t) {
      return new $2().destroy(t);
    }
  }
  cD.exports = sH;
});
var BD = B((TrA, CD) => {
  'use strict';
  var {
      InvalidArgumentError: AB,
      RequestAbortedError: nH,
      SocketError: iH,
    } = uA(),
    { AsyncResource: aH } = require('async_hooks'),
    ED = eA(),
    { addSignal: cH, removeSignal: lD } = Ys(),
    gH = require('assert'),
    eB = class extends aH {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new AB('invalid opts');
        if (typeof t != 'function') throw new AB('invalid callback');
        let { signal: r, opaque: o, responseHeaders: s } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new AB('signal must be an EventEmitter or EventTarget');
        super('UNDICI_UPGRADE'),
          (this.responseHeaders = s || null),
          (this.opaque = o || null),
          (this.callback = t),
          (this.abort = null),
          (this.context = null),
          cH(this, r);
      }
      onConnect(e, t) {
        if (!this.callback) throw new nH();
        (this.abort = e), (this.context = null);
      }
      onHeaders() {
        throw new iH('bad upgrade', null);
      }
      onUpgrade(e, t, r) {
        let { callback: o, opaque: s, context: n } = this;
        gH.strictEqual(e, 101), lD(this), (this.callback = null);
        let i =
          this.responseHeaders === 'raw'
            ? ED.parseRawHeaders(t)
            : ED.parseHeaders(t);
        this.runInAsyncScope(o, null, null, {
          headers: i,
          socket: r,
          opaque: s,
          context: n,
        });
      }
      onError(e) {
        let { callback: t, opaque: r } = this;
        lD(this),
          t &&
            ((this.callback = null),
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            }));
      }
    };
  function QD(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        QD.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      let t = new eB(A, e);
      this.dispatch(
        { ...A, method: A.method || 'GET', upgrade: A.protocol || 'Websocket' },
        t,
      );
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A && A.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  CD.exports = QD;
});
var fD = B((NrA, dD) => {
  'use strict';
  var { AsyncResource: EH } = require('async_hooks'),
    {
      InvalidArgumentError: tB,
      RequestAbortedError: lH,
      SocketError: QH,
    } = uA(),
    uD = eA(),
    { addSignal: CH, removeSignal: hD } = Ys(),
    rB = class extends EH {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new tB('invalid opts');
        if (typeof t != 'function') throw new tB('invalid callback');
        let { signal: r, opaque: o, responseHeaders: s } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new tB('signal must be an EventEmitter or EventTarget');
        super('UNDICI_CONNECT'),
          (this.opaque = o || null),
          (this.responseHeaders = s || null),
          (this.callback = t),
          (this.abort = null),
          CH(this, r);
      }
      onConnect(e, t) {
        if (!this.callback) throw new lH();
        (this.abort = e), (this.context = t);
      }
      onHeaders() {
        throw new QH('bad connect', null);
      }
      onUpgrade(e, t, r) {
        let { callback: o, opaque: s, context: n } = this;
        hD(this), (this.callback = null);
        let i = t;
        i != null &&
          (i =
            this.responseHeaders === 'raw'
              ? uD.parseRawHeaders(t)
              : uD.parseHeaders(t)),
          this.runInAsyncScope(o, null, null, {
            statusCode: e,
            headers: i,
            socket: r,
            opaque: s,
            context: n,
          });
      }
      onError(e) {
        let { callback: t, opaque: r } = this;
        hD(this),
          t &&
            ((this.callback = null),
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            }));
      }
    };
  function ID(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        ID.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      let t = new rB(A, e);
      this.dispatch({ ...A, method: 'CONNECT' }, t);
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A && A.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  dD.exports = ID;
});
var pD = B((UrA, qs) => {
  'use strict';
  qs.exports.request = rD();
  qs.exports.stream = iD();
  qs.exports.pipeline = gD();
  qs.exports.upgrade = BD();
  qs.exports.connect = fD();
});
var sB = B((MrA, wD) => {
  'use strict';
  var { UndiciError: BH } = uA(),
    oB = class A extends BH {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'MockNotMatchedError'),
          (this.message =
            e || 'The request does not match any registered mock dispatches'),
          (this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED');
      }
    };
  wD.exports = { MockNotMatchedError: oB };
});
var Ps = B((LrA, yD) => {
  'use strict';
  yD.exports = {
    kAgent: Symbol('agent'),
    kOptions: Symbol('options'),
    kFactory: Symbol('factory'),
    kDispatches: Symbol('dispatches'),
    kDispatchKey: Symbol('dispatch key'),
    kDefaultHeaders: Symbol('default headers'),
    kDefaultTrailers: Symbol('default trailers'),
    kContentLength: Symbol('content length'),
    kMockAgent: Symbol('mock agent'),
    kMockAgentSet: Symbol('mock agent set'),
    kMockAgentGet: Symbol('mock agent get'),
    kMockDispatch: Symbol('mock dispatch'),
    kClose: Symbol('close'),
    kOriginalClose: Symbol('original agent close'),
    kOrigin: Symbol('origin'),
    kIsMockActive: Symbol('is mock active'),
    kNetConnect: Symbol('net connect'),
    kGetNetConnect: Symbol('get net connect'),
    kConnected: Symbol('connected'),
  };
});
var Mi = B((GrA, LD) => {
  'use strict';
  var { MockNotMatchedError: Lo } = sB(),
    {
      kDispatches: eg,
      kMockAgent: uH,
      kOriginalDispatch: hH,
      kOrigin: IH,
      kGetNetConnect: dH,
    } = Ps(),
    { buildURL: fH, nop: pH } = eA(),
    { STATUS_CODES: wH } = require('http'),
    {
      types: { isPromise: yH },
    } = require('util');
  function Fr(A, e) {
    return typeof A == 'string'
      ? A === e
      : A instanceof RegExp
        ? A.test(e)
        : typeof A == 'function'
          ? A(e) === !0
          : !1;
  }
  function mD(A) {
    return Object.fromEntries(
      Object.entries(A).map(([e, t]) => [e.toLocaleLowerCase(), t]),
    );
  }
  function kD(A, e) {
    if (Array.isArray(A)) {
      for (let t = 0; t < A.length; t += 2)
        if (A[t].toLocaleLowerCase() === e.toLocaleLowerCase()) return A[t + 1];
      return;
    } else
      return typeof A.get == 'function'
        ? A.get(e)
        : mD(A)[e.toLocaleLowerCase()];
  }
  function RD(A) {
    let e = A.slice(),
      t = [];
    for (let r = 0; r < e.length; r += 2) t.push([e[r], e[r + 1]]);
    return Object.fromEntries(t);
  }
  function bD(A, e) {
    if (typeof A.headers == 'function')
      return Array.isArray(e) && (e = RD(e)), A.headers(e ? mD(e) : {});
    if (typeof A.headers > 'u') return !0;
    if (typeof e != 'object' || typeof A.headers != 'object') return !1;
    for (let [t, r] of Object.entries(A.headers)) {
      let o = kD(e, t);
      if (!Fr(r, o)) return !1;
    }
    return !0;
  }
  function DD(A) {
    if (typeof A != 'string') return A;
    let e = A.split('?');
    if (e.length !== 2) return A;
    let t = new URLSearchParams(e.pop());
    return t.sort(), [...e, t.toString()].join('?');
  }
  function DH(A, { path: e, method: t, body: r, headers: o }) {
    let s = Fr(A.path, e),
      n = Fr(A.method, t),
      i = typeof A.body < 'u' ? Fr(A.body, r) : !0,
      a = bD(A, o);
    return s && n && i && a;
  }
  function FD(A) {
    return Buffer.isBuffer(A)
      ? A
      : typeof A == 'object'
        ? JSON.stringify(A)
        : A.toString();
  }
  function SD(A, e) {
    let t = e.query ? fH(e.path, e.query) : e.path,
      r = typeof t == 'string' ? DD(t) : t,
      o = A.filter(({ consumed: s }) => !s).filter(({ path: s }) =>
        Fr(DD(s), r),
      );
    if (o.length === 0)
      throw new Lo(`Mock dispatch not matched for path '${r}'`);
    if (((o = o.filter(({ method: s }) => Fr(s, e.method))), o.length === 0))
      throw new Lo(`Mock dispatch not matched for method '${e.method}'`);
    if (
      ((o = o.filter(({ body: s }) => (typeof s < 'u' ? Fr(s, e.body) : !0))),
      o.length === 0)
    )
      throw new Lo(`Mock dispatch not matched for body '${e.body}'`);
    if (((o = o.filter((s) => bD(s, e.headers))), o.length === 0))
      throw new Lo(
        `Mock dispatch not matched for headers '${typeof e.headers == 'object' ? JSON.stringify(e.headers) : e.headers}'`,
      );
    return o[0];
  }
  function mH(A, e, t) {
    let r = { timesInvoked: 0, times: 1, persist: !1, consumed: !1 },
      o = typeof t == 'function' ? { callback: t } : { ...t },
      s = { ...r, ...e, pending: !0, data: { error: null, ...o } };
    return A.push(s), s;
  }
  function nB(A, e) {
    let t = A.findIndex((r) => (r.consumed ? DH(r, e) : !1));
    t !== -1 && A.splice(t, 1);
  }
  function TD(A) {
    let { path: e, method: t, body: r, headers: o, query: s } = A;
    return { path: e, method: t, body: r, headers: o, query: s };
  }
  function iB(A) {
    return Object.entries(A).reduce(
      (e, [t, r]) => [
        ...e,
        Buffer.from(`${t}`),
        Array.isArray(r)
          ? r.map((o) => Buffer.from(`${o}`))
          : Buffer.from(`${r}`),
      ],
      [],
    );
  }
  function ND(A) {
    return wH[A] || 'unknown';
  }
  async function kH(A) {
    let e = [];
    for await (let t of A) e.push(t);
    return Buffer.concat(e).toString('utf8');
  }
  function UD(A, e) {
    let t = TD(A),
      r = SD(this[eg], t);
    r.timesInvoked++,
      r.data.callback && (r.data = { ...r.data, ...r.data.callback(A) });
    let {
        data: { statusCode: o, data: s, headers: n, trailers: i, error: a },
        delay: c,
        persist: g,
      } = r,
      { timesInvoked: E, times: l } = r;
    if (((r.consumed = !g && E >= l), (r.pending = E < l), a !== null))
      return nB(this[eg], t), e.onError(a), !0;
    typeof c == 'number' && c > 0
      ? setTimeout(() => {
          C(this[eg]);
        }, c)
      : C(this[eg]);
    function C(h, I = s) {
      let u = Array.isArray(A.headers) ? RD(A.headers) : A.headers,
        d = typeof I == 'function' ? I({ ...A, headers: u }) : I;
      if (yH(d)) {
        d.then((j) => C(h, j));
        return;
      }
      let f = FD(d),
        D = iB(n),
        q = iB(i);
      (e.abort = pH),
        e.onHeaders(o, D, Q, ND(o)),
        e.onData(Buffer.from(f)),
        e.onComplete(q),
        nB(h, t);
    }
    function Q() {}
    return !0;
  }
  function RH() {
    let A = this[uH],
      e = this[IH],
      t = this[hH];
    return function (o, s) {
      if (A.isMockActive)
        try {
          UD.call(this, o, s);
        } catch (n) {
          if (n instanceof Lo) {
            let i = A[dH]();
            if (i === !1)
              throw new Lo(
                `${n.message}: subsequent request to origin ${e} was not allowed (net.connect disabled)`,
              );
            if (MD(i, e)) t.call(this, o, s);
            else
              throw new Lo(
                `${n.message}: subsequent request to origin ${e} was not allowed (net.connect is not enabled for this origin)`,
              );
          } else throw n;
        }
      else t.call(this, o, s);
    };
  }
  function MD(A, e) {
    let t = new URL(e);
    return A === !0 ? !0 : !!(Array.isArray(A) && A.some((r) => Fr(r, t.host)));
  }
  function bH(A) {
    if (A) {
      let { agent: e, ...t } = A;
      return t;
    }
  }
  LD.exports = {
    getResponseData: FD,
    getMockDispatch: SD,
    addMockDispatch: mH,
    deleteMockDispatch: nB,
    buildKey: TD,
    generateKeyValues: iB,
    matchValue: Fr,
    getResponse: kH,
    getStatusText: ND,
    mockDispatch: UD,
    buildMockDispatch: RH,
    checkNetConnect: MD,
    buildMockOptions: bH,
    getHeaderByName: kD,
  };
});
var CB = B((xrA, QB) => {
  'use strict';
  var { getResponseData: FH, buildKey: SH, addMockDispatch: aB } = Mi(),
    {
      kDispatches: tg,
      kDispatchKey: rg,
      kDefaultHeaders: cB,
      kDefaultTrailers: gB,
      kContentLength: EB,
      kMockDispatch: og,
    } = Ps(),
    { InvalidArgumentError: Mt } = uA(),
    { buildURL: TH } = eA(),
    Ws = class {
      constructor(e) {
        this[og] = e;
      }
      delay(e) {
        if (typeof e != 'number' || !Number.isInteger(e) || e <= 0)
          throw new Mt('waitInMs must be a valid integer > 0');
        return (this[og].delay = e), this;
      }
      persist() {
        return (this[og].persist = !0), this;
      }
      times(e) {
        if (typeof e != 'number' || !Number.isInteger(e) || e <= 0)
          throw new Mt('repeatTimes must be a valid integer > 0');
        return (this[og].times = e), this;
      }
    },
    lB = class {
      constructor(e, t) {
        if (typeof e != 'object') throw new Mt('opts must be an object');
        if (typeof e.path > 'u') throw new Mt('opts.path must be defined');
        if (
          (typeof e.method > 'u' && (e.method = 'GET'),
          typeof e.path == 'string')
        )
          if (e.query) e.path = TH(e.path, e.query);
          else {
            let r = new URL(e.path, 'data://');
            e.path = r.pathname + r.search;
          }
        typeof e.method == 'string' && (e.method = e.method.toUpperCase()),
          (this[rg] = SH(e)),
          (this[tg] = t),
          (this[cB] = {}),
          (this[gB] = {}),
          (this[EB] = !1);
      }
      createMockScopeDispatchData(e, t, r = {}) {
        let o = FH(t),
          s = this[EB] ? { 'content-length': o.length } : {},
          n = { ...this[cB], ...s, ...r.headers },
          i = { ...this[gB], ...r.trailers };
        return { statusCode: e, data: t, headers: n, trailers: i };
      }
      validateReplyParameters(e, t, r) {
        if (typeof e > 'u') throw new Mt('statusCode must be defined');
        if (typeof t > 'u') throw new Mt('data must be defined');
        if (typeof r != 'object')
          throw new Mt('responseOptions must be an object');
      }
      reply(e) {
        if (typeof e == 'function') {
          let i = (c) => {
              let g = e(c);
              if (typeof g != 'object')
                throw new Mt('reply options callback must return an object');
              let { statusCode: E, data: l = '', responseOptions: C = {} } = g;
              return (
                this.validateReplyParameters(E, l, C),
                { ...this.createMockScopeDispatchData(E, l, C) }
              );
            },
            a = aB(this[tg], this[rg], i);
          return new Ws(a);
        }
        let [t, r = '', o = {}] = [...arguments];
        this.validateReplyParameters(t, r, o);
        let s = this.createMockScopeDispatchData(t, r, o),
          n = aB(this[tg], this[rg], s);
        return new Ws(n);
      }
      replyWithError(e) {
        if (typeof e > 'u') throw new Mt('error must be defined');
        let t = aB(this[tg], this[rg], { error: e });
        return new Ws(t);
      }
      defaultReplyHeaders(e) {
        if (typeof e > 'u') throw new Mt('headers must be defined');
        return (this[cB] = e), this;
      }
      defaultReplyTrailers(e) {
        if (typeof e > 'u') throw new Mt('trailers must be defined');
        return (this[gB] = e), this;
      }
      replyContentLength() {
        return (this[EB] = !0), this;
      }
    };
  QB.exports.MockInterceptor = lB;
  QB.exports.MockScope = Ws;
});
var hB = B((vrA, HD) => {
  'use strict';
  var { promisify: NH } = require('util'),
    UH = bi(),
    { buildMockDispatch: MH } = Mi(),
    {
      kDispatches: GD,
      kMockAgent: xD,
      kClose: vD,
      kOriginalClose: OD,
      kOrigin: YD,
      kOriginalDispatch: LH,
      kConnected: BB,
    } = Ps(),
    { MockInterceptor: GH } = CB(),
    JD = dA(),
    { InvalidArgumentError: xH } = uA(),
    uB = class extends UH {
      constructor(e, t) {
        if (
          (super(e, t), !t || !t.agent || typeof t.agent.dispatch != 'function')
        )
          throw new xH('Argument opts.agent must implement Agent');
        (this[xD] = t.agent),
          (this[YD] = e),
          (this[GD] = []),
          (this[BB] = 1),
          (this[LH] = this.dispatch),
          (this[OD] = this.close.bind(this)),
          (this.dispatch = MH.call(this)),
          (this.close = this[vD]);
      }
      get [JD.kConnected]() {
        return this[BB];
      }
      intercept(e) {
        return new GH(e, this[GD]);
      }
      async [vD]() {
        await NH(this[OD])(),
          (this[BB] = 0),
          this[xD][JD.kClients].delete(this[YD]);
      }
    };
  HD.exports = uB;
});
var fB = B((OrA, ZD) => {
  'use strict';
  var { promisify: vH } = require('util'),
    OH = vs(),
    { buildMockDispatch: YH } = Mi(),
    {
      kDispatches: VD,
      kMockAgent: qD,
      kClose: PD,
      kOriginalClose: WD,
      kOrigin: _D,
      kOriginalDispatch: JH,
      kConnected: IB,
    } = Ps(),
    { MockInterceptor: HH } = CB(),
    jD = dA(),
    { InvalidArgumentError: VH } = uA(),
    dB = class extends OH {
      constructor(e, t) {
        if (
          (super(e, t), !t || !t.agent || typeof t.agent.dispatch != 'function')
        )
          throw new VH('Argument opts.agent must implement Agent');
        (this[qD] = t.agent),
          (this[_D] = e),
          (this[VD] = []),
          (this[IB] = 1),
          (this[JH] = this.dispatch),
          (this[WD] = this.close.bind(this)),
          (this.dispatch = YH.call(this)),
          (this.close = this[PD]);
      }
      get [jD.kConnected]() {
        return this[IB];
      }
      intercept(e) {
        return new HH(e, this[VD]);
      }
      async [PD]() {
        await vH(this[WD])(),
          (this[IB] = 0),
          this[qD][jD.kClients].delete(this[_D]);
      }
    };
  ZD.exports = dB;
});
var XD = B((JrA, KD) => {
  'use strict';
  var qH = { pronoun: 'it', is: 'is', was: 'was', this: 'this' },
    PH = { pronoun: 'they', is: 'are', was: 'were', this: 'these' };
  KD.exports = class {
    constructor(e, t) {
      (this.singular = e), (this.plural = t);
    }
    pluralize(e) {
      let t = e === 1,
        r = t ? qH : PH,
        o = t ? this.singular : this.plural;
      return { ...r, count: e, noun: o };
    }
  };
});
var $D = B((VrA, zD) => {
  'use strict';
  var { Transform: WH } = require('stream'),
    { Console: _H } = require('console');
  zD.exports = class {
    constructor({ disableColors: e } = {}) {
      (this.transform = new WH({
        transform(t, r, o) {
          o(null, t);
        },
      })),
        (this.logger = new _H({
          stdout: this.transform,
          inspectOptions: { colors: !e && !process.env.CI },
        }));
    }
    format(e) {
      let t = e.map(
        ({
          method: r,
          path: o,
          data: { statusCode: s },
          persist: n,
          times: i,
          timesInvoked: a,
          origin: c,
        }) => ({
          Method: r,
          Origin: c,
          Path: o,
          'Status code': s,
          Persistent: n ? '\u2705' : '\u274C',
          Invocations: a,
          Remaining: n ? 1 / 0 : i - a,
        }),
      );
      return this.logger.table(t), this.transform.read().toString();
    }
  };
});
var rm = B((qrA, tm) => {
  'use strict';
  var { kClients: Go } = dA(),
    jH = Ni(),
    {
      kAgent: pB,
      kMockAgentSet: sg,
      kMockAgentGet: Am,
      kDispatches: wB,
      kIsMockActive: ng,
      kNetConnect: xo,
      kGetNetConnect: ZH,
      kOptions: ig,
      kFactory: ag,
    } = Ps(),
    KH = hB(),
    XH = fB(),
    { matchValue: zH, buildMockOptions: $H } = Mi(),
    { InvalidArgumentError: em, UndiciError: AV } = uA(),
    eV = bc(),
    tV = XD(),
    rV = $D(),
    yB = class {
      constructor(e) {
        this.value = e;
      }
      deref() {
        return this.value;
      }
    },
    DB = class extends eV {
      constructor(e) {
        if (
          (super(e),
          (this[xo] = !0),
          (this[ng] = !0),
          e && e.agent && typeof e.agent.dispatch != 'function')
        )
          throw new em('Argument opts.agent must implement Agent');
        let t = e && e.agent ? e.agent : new jH(e);
        (this[pB] = t), (this[Go] = t[Go]), (this[ig] = $H(e));
      }
      get(e) {
        let t = this[Am](e);
        return t || ((t = this[ag](e)), this[sg](e, t)), t;
      }
      dispatch(e, t) {
        return this.get(e.origin), this[pB].dispatch(e, t);
      }
      async close() {
        await this[pB].close(), this[Go].clear();
      }
      deactivate() {
        this[ng] = !1;
      }
      activate() {
        this[ng] = !0;
      }
      enableNetConnect(e) {
        if (
          typeof e == 'string' ||
          typeof e == 'function' ||
          e instanceof RegExp
        )
          Array.isArray(this[xo]) ? this[xo].push(e) : (this[xo] = [e]);
        else if (typeof e > 'u') this[xo] = !0;
        else
          throw new em(
            'Unsupported matcher. Must be one of String|Function|RegExp.',
          );
      }
      disableNetConnect() {
        this[xo] = !1;
      }
      get isMockActive() {
        return this[ng];
      }
      [sg](e, t) {
        this[Go].set(e, new yB(t));
      }
      [ag](e) {
        let t = Object.assign({ agent: this }, this[ig]);
        return this[ig] && this[ig].connections === 1
          ? new KH(e, t)
          : new XH(e, t);
      }
      [Am](e) {
        let t = this[Go].get(e);
        if (t) return t.deref();
        if (typeof e != 'string') {
          let r = this[ag]('http://localhost:9999');
          return this[sg](e, r), r;
        }
        for (let [r, o] of Array.from(this[Go])) {
          let s = o.deref();
          if (s && typeof r != 'string' && zH(r, e)) {
            let n = this[ag](e);
            return this[sg](e, n), (n[wB] = s[wB]), n;
          }
        }
      }
      [ZH]() {
        return this[xo];
      }
      pendingInterceptors() {
        let e = this[Go];
        return Array.from(e.entries())
          .flatMap(([t, r]) => r.deref()[wB].map((o) => ({ ...o, origin: t })))
          .filter(({ pending: t }) => t);
      }
      assertNoPendingInterceptors({
        pendingInterceptorsFormatter: e = new rV(),
      } = {}) {
        let t = this.pendingInterceptors();
        if (t.length === 0) return;
        let r = new tV('interceptor', 'interceptors').pluralize(t.length);
        throw new AV(
          `
${r.count} ${r.noun} ${r.is} pending:

${e.format(t)}
`.trim(),
        );
      }
    };
  tm.exports = DB;
});
var cm = B((PrA, am) => {
  'use strict';
  var { kProxy: oV, kClose: sV, kDestroy: nV, kInterceptors: iV } = dA(),
    { URL: om } = require('url'),
    sm = Ni(),
    aV = vs(),
    cV = di(),
    { InvalidArgumentError: xi, RequestAbortedError: gV } = uA(),
    nm = fi(),
    Li = Symbol('proxy agent'),
    cg = Symbol('proxy client'),
    Gi = Symbol('proxy headers'),
    mB = Symbol('request tls settings'),
    EV = Symbol('proxy tls settings'),
    im = Symbol('connect endpoint function');
  function lV(A) {
    return A === 'https:' ? 443 : 80;
  }
  function QV(A) {
    if ((typeof A == 'string' && (A = { uri: A }), !A || !A.uri))
      throw new xi('Proxy opts.uri is mandatory');
    return { uri: A.uri, protocol: A.protocol || 'https' };
  }
  function CV(A, e) {
    return new aV(A, e);
  }
  var kB = class extends cV {
    constructor(e) {
      if (
        (super(e),
        (this[oV] = QV(e)),
        (this[Li] = new sm(e)),
        (this[iV] =
          e.interceptors &&
          e.interceptors.ProxyAgent &&
          Array.isArray(e.interceptors.ProxyAgent)
            ? e.interceptors.ProxyAgent
            : []),
        typeof e == 'string' && (e = { uri: e }),
        !e || !e.uri)
      )
        throw new xi('Proxy opts.uri is mandatory');
      let { clientFactory: t = CV } = e;
      if (typeof t != 'function')
        throw new xi('Proxy opts.clientFactory must be a function.');
      (this[mB] = e.requestTls),
        (this[EV] = e.proxyTls),
        (this[Gi] = e.headers || {});
      let r = new om(e.uri),
        { origin: o, port: s, host: n, username: i, password: a } = r;
      if (e.auth && e.token)
        throw new xi('opts.auth cannot be used in combination with opts.token');
      e.auth
        ? (this[Gi]['proxy-authorization'] = `Basic ${e.auth}`)
        : e.token
          ? (this[Gi]['proxy-authorization'] = e.token)
          : i &&
            a &&
            (this[Gi]['proxy-authorization'] =
              `Basic ${Buffer.from(`${decodeURIComponent(i)}:${decodeURIComponent(a)}`).toString('base64')}`);
      let c = nm({ ...e.proxyTls });
      (this[im] = nm({ ...e.requestTls })),
        (this[cg] = t(r, { connect: c })),
        (this[Li] = new sm({
          ...e,
          connect: async (g, E) => {
            let l = g.host;
            g.port || (l += `:${lV(g.protocol)}`);
            try {
              let { socket: C, statusCode: Q } = await this[cg].connect({
                origin: o,
                port: s,
                path: l,
                signal: g.signal,
                headers: { ...this[Gi], host: n },
              });
              if (
                (Q !== 200 &&
                  (C.on('error', () => {}).destroy(),
                  E(
                    new gV(`Proxy response (${Q}) !== 200 when HTTP Tunneling`),
                  )),
                g.protocol !== 'https:')
              ) {
                E(null, C);
                return;
              }
              let h;
              this[mB] ? (h = this[mB].servername) : (h = g.servername),
                this[im]({ ...g, servername: h, httpSocket: C }, E);
            } catch (C) {
              E(C);
            }
          },
        }));
    }
    dispatch(e, t) {
      let { host: r } = new om(e.origin),
        o = BV(e.headers);
      return uV(o), this[Li].dispatch({ ...e, headers: { ...o, host: r } }, t);
    }
    async [sV]() {
      await this[Li].close(), await this[cg].close();
    }
    async [nV]() {
      await this[Li].destroy(), await this[cg].destroy();
    }
  };
  function BV(A) {
    if (Array.isArray(A)) {
      let e = {};
      for (let t = 0; t < A.length; t += 2) e[A[t]] = A[t + 1];
      return e;
    }
    return A;
  }
  function uV(A) {
    if (
      A &&
      Object.keys(A).find((t) => t.toLowerCase() === 'proxy-authorization')
    )
      throw new xi(
        'Proxy-Authorization should be sent in ProxyAgent constructor',
      );
  }
  am.exports = kB;
});
var Cm = B((WrA, Qm) => {
  var vo = require('assert'),
    { kRetryHandlerDefaultRetry: gm } = dA(),
    { RequestRetryError: gg } = uA(),
    { isDisturbed: Em, parseHeaders: hV, parseRangeHeader: lm } = eA();
  function IV(A) {
    let e = Date.now();
    return new Date(A).getTime() - e;
  }
  var RB = class A {
    constructor(e, t) {
      let { retryOptions: r, ...o } = e,
        {
          retry: s,
          maxRetries: n,
          maxTimeout: i,
          minTimeout: a,
          timeoutFactor: c,
          methods: g,
          errorCodes: E,
          retryAfter: l,
          statusCodes: C,
        } = r ?? {};
      (this.dispatch = t.dispatch),
        (this.handler = t.handler),
        (this.opts = o),
        (this.abort = null),
        (this.aborted = !1),
        (this.retryOpts = {
          retry: s ?? A[gm],
          retryAfter: l ?? !0,
          maxTimeout: i ?? 30 * 1e3,
          timeout: a ?? 500,
          timeoutFactor: c ?? 2,
          maxRetries: n ?? 5,
          methods: g ?? ['GET', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE'],
          statusCodes: C ?? [500, 502, 503, 504, 429],
          errorCodes: E ?? [
            'ECONNRESET',
            'ECONNREFUSED',
            'ENOTFOUND',
            'ENETDOWN',
            'ENETUNREACH',
            'EHOSTDOWN',
            'EHOSTUNREACH',
            'EPIPE',
          ],
        }),
        (this.retryCount = 0),
        (this.start = 0),
        (this.end = null),
        (this.etag = null),
        (this.resume = null),
        this.handler.onConnect((Q) => {
          (this.aborted = !0), this.abort ? this.abort(Q) : (this.reason = Q);
        });
    }
    onRequestSent() {
      this.handler.onRequestSent && this.handler.onRequestSent();
    }
    onUpgrade(e, t, r) {
      this.handler.onUpgrade && this.handler.onUpgrade(e, t, r);
    }
    onConnect(e) {
      this.aborted ? e(this.reason) : (this.abort = e);
    }
    onBodySent(e) {
      if (this.handler.onBodySent) return this.handler.onBodySent(e);
    }
    static [gm](e, { state: t, opts: r }, o) {
      let { statusCode: s, code: n, headers: i } = e,
        { method: a, retryOptions: c } = r,
        {
          maxRetries: g,
          timeout: E,
          maxTimeout: l,
          timeoutFactor: C,
          statusCodes: Q,
          errorCodes: h,
          methods: I,
        } = c,
        { counter: u, currentTimeout: d } = t;
      if (
        ((d = d != null && d > 0 ? d : E),
        n &&
          n !== 'UND_ERR_REQ_RETRY' &&
          n !== 'UND_ERR_SOCKET' &&
          !h.includes(n))
      ) {
        o(e);
        return;
      }
      if (Array.isArray(I) && !I.includes(a)) {
        o(e);
        return;
      }
      if (s != null && Array.isArray(Q) && !Q.includes(s)) {
        o(e);
        return;
      }
      if (u > g) {
        o(e);
        return;
      }
      let f = i != null && i['retry-after'];
      f && ((f = Number(f)), (f = isNaN(f) ? IV(f) : f * 1e3));
      let D = f > 0 ? Math.min(f, l) : Math.min(d * C ** u, l);
      (t.currentTimeout = D), setTimeout(() => o(null), D);
    }
    onHeaders(e, t, r, o) {
      let s = hV(t);
      if (((this.retryCount += 1), e >= 300))
        return (
          this.abort(
            new gg('Request failed', e, { headers: s, count: this.retryCount }),
          ),
          !1
        );
      if (this.resume != null) {
        if (((this.resume = null), e !== 206)) return !0;
        let i = lm(s['content-range']);
        if (!i)
          return (
            this.abort(
              new gg('Content-Range mismatch', e, {
                headers: s,
                count: this.retryCount,
              }),
            ),
            !1
          );
        if (this.etag != null && this.etag !== s.etag)
          return (
            this.abort(
              new gg('ETag mismatch', e, {
                headers: s,
                count: this.retryCount,
              }),
            ),
            !1
          );
        let { start: a, size: c, end: g = c } = i;
        return (
          vo(this.start === a, 'content-range mismatch'),
          vo(this.end == null || this.end === g, 'content-range mismatch'),
          (this.resume = r),
          !0
        );
      }
      if (this.end == null) {
        if (e === 206) {
          let i = lm(s['content-range']);
          if (i == null) return this.handler.onHeaders(e, t, r, o);
          let { start: a, size: c, end: g = c } = i;
          vo(
            a != null && Number.isFinite(a) && this.start !== a,
            'content-range mismatch',
          ),
            vo(Number.isFinite(a)),
            vo(
              g != null && Number.isFinite(g) && this.end !== g,
              'invalid content-length',
            ),
            (this.start = a),
            (this.end = g);
        }
        if (this.end == null) {
          let i = s['content-length'];
          this.end = i != null ? Number(i) : null;
        }
        return (
          vo(Number.isFinite(this.start)),
          vo(
            this.end == null || Number.isFinite(this.end),
            'invalid content-length',
          ),
          (this.resume = r),
          (this.etag = s.etag != null ? s.etag : null),
          this.handler.onHeaders(e, t, r, o)
        );
      }
      let n = new gg('Request failed', e, {
        headers: s,
        count: this.retryCount,
      });
      return this.abort(n), !1;
    }
    onData(e) {
      return (this.start += e.length), this.handler.onData(e);
    }
    onComplete(e) {
      return (this.retryCount = 0), this.handler.onComplete(e);
    }
    onError(e) {
      if (this.aborted || Em(this.opts.body)) return this.handler.onError(e);
      this.retryOpts.retry(
        e,
        {
          state: {
            counter: this.retryCount++,
            currentTimeout: this.retryAfter,
          },
          opts: { retryOptions: this.retryOpts, ...this.opts },
        },
        t.bind(this),
      );
      function t(r) {
        if (r != null || this.aborted || Em(this.opts.body))
          return this.handler.onError(r);
        this.start !== 0 &&
          (this.opts = {
            ...this.opts,
            headers: {
              ...this.opts.headers,
              range: `bytes=${this.start}-${this.end ?? ''}`,
            },
          });
        try {
          this.dispatch(this.opts, this);
        } catch (o) {
          this.handler.onError(o);
        }
      }
    }
  };
  Qm.exports = RB;
});
var _s = B((_rA, Im) => {
  'use strict';
  var Bm = Symbol.for('undici.globalDispatcher.1'),
    { InvalidArgumentError: dV } = uA(),
    fV = Ni();
  hm() === void 0 && um(new fV());
  function um(A) {
    if (!A || typeof A.dispatch != 'function')
      throw new dV('Argument agent must implement Agent');
    Object.defineProperty(globalThis, Bm, {
      value: A,
      writable: !0,
      enumerable: !1,
      configurable: !1,
    });
  }
  function hm() {
    return globalThis[Bm];
  }
  Im.exports = { setGlobalDispatcher: um, getGlobalDispatcher: hm };
});
var fm = B((ZrA, dm) => {
  'use strict';
  dm.exports = class {
    constructor(e) {
      this.handler = e;
    }
    onConnect(...e) {
      return this.handler.onConnect(...e);
    }
    onError(...e) {
      return this.handler.onError(...e);
    }
    onUpgrade(...e) {
      return this.handler.onUpgrade(...e);
    }
    onHeaders(...e) {
      return this.handler.onHeaders(...e);
    }
    onData(...e) {
      return this.handler.onData(...e);
    }
    onComplete(...e) {
      return this.handler.onComplete(...e);
    }
    onBodySent(...e) {
      return this.handler.onBodySent(...e);
    }
  };
});
var Oo = B((KrA, mm) => {
  'use strict';
  var { kHeadersList: Se, kConstruct: pV } = dA(),
    { kGuard: er } = pr(),
    { kEnumerableProperty: Ar } = eA(),
    { makeIterator: js, isValidHeaderName: vi, isValidHeaderValue: wm } = Et(),
    { webidl: Z } = Ie(),
    wV = require('assert'),
    Fe = Symbol('headers map'),
    ne = Symbol('headers map sorted');
  function pm(A) {
    return A === 10 || A === 13 || A === 9 || A === 32;
  }
  function ym(A) {
    let e = 0,
      t = A.length;
    for (; t > e && pm(A.charCodeAt(t - 1)); ) --t;
    for (; t > e && pm(A.charCodeAt(e)); ) ++e;
    return e === 0 && t === A.length ? A : A.substring(e, t);
  }
  function Dm(A, e) {
    if (Array.isArray(e))
      for (let t = 0; t < e.length; ++t) {
        let r = e[t];
        if (r.length !== 2)
          throw Z.errors.exception({
            header: 'Headers constructor',
            message: `expected name/value pair to be length 2, found ${r.length}.`,
          });
        bB(A, r[0], r[1]);
      }
    else if (typeof e == 'object' && e !== null) {
      let t = Object.keys(e);
      for (let r = 0; r < t.length; ++r) bB(A, t[r], e[t[r]]);
    } else
      throw Z.errors.conversionFailed({
        prefix: 'Headers constructor',
        argument: 'Argument 1',
        types: [
          'sequence<sequence<ByteString>>',
          'record<ByteString, ByteString>',
        ],
      });
  }
  function bB(A, e, t) {
    if (((t = ym(t)), vi(e))) {
      if (!wm(t))
        throw Z.errors.invalidArgument({
          prefix: 'Headers.append',
          value: t,
          type: 'header value',
        });
    } else
      throw Z.errors.invalidArgument({
        prefix: 'Headers.append',
        value: e,
        type: 'header name',
      });
    if (A[er] === 'immutable') throw new TypeError('immutable');
    return A[er], A[Se].append(e, t);
  }
  var Eg = class A {
      cookies = null;
      constructor(e) {
        e instanceof A
          ? ((this[Fe] = new Map(e[Fe])),
            (this[ne] = e[ne]),
            (this.cookies = e.cookies === null ? null : [...e.cookies]))
          : ((this[Fe] = new Map(e)), (this[ne] = null));
      }
      contains(e) {
        return (e = e.toLowerCase()), this[Fe].has(e);
      }
      clear() {
        this[Fe].clear(), (this[ne] = null), (this.cookies = null);
      }
      append(e, t) {
        this[ne] = null;
        let r = e.toLowerCase(),
          o = this[Fe].get(r);
        if (o) {
          let s = r === 'cookie' ? '; ' : ', ';
          this[Fe].set(r, { name: o.name, value: `${o.value}${s}${t}` });
        } else this[Fe].set(r, { name: e, value: t });
        r === 'set-cookie' && ((this.cookies ??= []), this.cookies.push(t));
      }
      set(e, t) {
        this[ne] = null;
        let r = e.toLowerCase();
        r === 'set-cookie' && (this.cookies = [t]),
          this[Fe].set(r, { name: e, value: t });
      }
      delete(e) {
        (this[ne] = null),
          (e = e.toLowerCase()),
          e === 'set-cookie' && (this.cookies = null),
          this[Fe].delete(e);
      }
      get(e) {
        let t = this[Fe].get(e.toLowerCase());
        return t === void 0 ? null : t.value;
      }
      *[Symbol.iterator]() {
        for (let [e, { value: t }] of this[Fe]) yield [e, t];
      }
      get entries() {
        let e = {};
        if (this[Fe].size)
          for (let { name: t, value: r } of this[Fe].values()) e[t] = r;
        return e;
      }
    },
    Zs = class A {
      constructor(e = void 0) {
        e !== pV &&
          ((this[Se] = new Eg()),
          (this[er] = 'none'),
          e !== void 0 && ((e = Z.converters.HeadersInit(e)), Dm(this, e)));
      }
      append(e, t) {
        return (
          Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 2, { header: 'Headers.append' }),
          (e = Z.converters.ByteString(e)),
          (t = Z.converters.ByteString(t)),
          bB(this, e, t)
        );
      }
      delete(e) {
        if (
          (Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 1, { header: 'Headers.delete' }),
          (e = Z.converters.ByteString(e)),
          !vi(e))
        )
          throw Z.errors.invalidArgument({
            prefix: 'Headers.delete',
            value: e,
            type: 'header name',
          });
        if (this[er] === 'immutable') throw new TypeError('immutable');
        this[er], this[Se].contains(e) && this[Se].delete(e);
      }
      get(e) {
        if (
          (Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 1, { header: 'Headers.get' }),
          (e = Z.converters.ByteString(e)),
          !vi(e))
        )
          throw Z.errors.invalidArgument({
            prefix: 'Headers.get',
            value: e,
            type: 'header name',
          });
        return this[Se].get(e);
      }
      has(e) {
        if (
          (Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 1, { header: 'Headers.has' }),
          (e = Z.converters.ByteString(e)),
          !vi(e))
        )
          throw Z.errors.invalidArgument({
            prefix: 'Headers.has',
            value: e,
            type: 'header name',
          });
        return this[Se].contains(e);
      }
      set(e, t) {
        if (
          (Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 2, { header: 'Headers.set' }),
          (e = Z.converters.ByteString(e)),
          (t = Z.converters.ByteString(t)),
          (t = ym(t)),
          vi(e))
        ) {
          if (!wm(t))
            throw Z.errors.invalidArgument({
              prefix: 'Headers.set',
              value: t,
              type: 'header value',
            });
        } else
          throw Z.errors.invalidArgument({
            prefix: 'Headers.set',
            value: e,
            type: 'header name',
          });
        if (this[er] === 'immutable') throw new TypeError('immutable');
        this[er], this[Se].set(e, t);
      }
      getSetCookie() {
        Z.brandCheck(this, A);
        let e = this[Se].cookies;
        return e ? [...e] : [];
      }
      get [ne]() {
        if (this[Se][ne]) return this[Se][ne];
        let e = [],
          t = [...this[Se]].sort((o, s) => (o[0] < s[0] ? -1 : 1)),
          r = this[Se].cookies;
        for (let o = 0; o < t.length; ++o) {
          let [s, n] = t[o];
          if (s === 'set-cookie')
            for (let i = 0; i < r.length; ++i) e.push([s, r[i]]);
          else wV(n !== null), e.push([s, n]);
        }
        return (this[Se][ne] = e), e;
      }
      keys() {
        if ((Z.brandCheck(this, A), this[er] === 'immutable')) {
          let e = this[ne];
          return js(() => e, 'Headers', 'key');
        }
        return js(() => [...this[ne].values()], 'Headers', 'key');
      }
      values() {
        if ((Z.brandCheck(this, A), this[er] === 'immutable')) {
          let e = this[ne];
          return js(() => e, 'Headers', 'value');
        }
        return js(() => [...this[ne].values()], 'Headers', 'value');
      }
      entries() {
        if ((Z.brandCheck(this, A), this[er] === 'immutable')) {
          let e = this[ne];
          return js(() => e, 'Headers', 'key+value');
        }
        return js(() => [...this[ne].values()], 'Headers', 'key+value');
      }
      forEach(e, t = globalThis) {
        if (
          (Z.brandCheck(this, A),
          Z.argumentLengthCheck(arguments, 1, { header: 'Headers.forEach' }),
          typeof e != 'function')
        )
          throw new TypeError(
            "Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.",
          );
        for (let [r, o] of this) e.apply(t, [o, r, this]);
      }
      [Symbol.for('nodejs.util.inspect.custom')]() {
        return Z.brandCheck(this, A), this[Se];
      }
    };
  Zs.prototype[Symbol.iterator] = Zs.prototype.entries;
  Object.defineProperties(Zs.prototype, {
    append: Ar,
    delete: Ar,
    get: Ar,
    has: Ar,
    set: Ar,
    getSetCookie: Ar,
    keys: Ar,
    values: Ar,
    entries: Ar,
    forEach: Ar,
    [Symbol.iterator]: { enumerable: !1 },
    [Symbol.toStringTag]: { value: 'Headers', configurable: !0 },
  });
  Z.converters.HeadersInit = function (A) {
    if (Z.util.Type(A) === 'Object')
      return A[Symbol.iterator]
        ? Z.converters['sequence<sequence<ByteString>>'](A)
        : Z.converters['record<ByteString, ByteString>'](A);
    throw Z.errors.conversionFailed({
      prefix: 'Headers constructor',
      argument: 'Argument 1',
      types: [
        'sequence<sequence<ByteString>>',
        'record<ByteString, ByteString>',
      ],
    });
  };
  mm.exports = { fill: Dm, Headers: Zs, HeadersList: Eg };
});
var Bg = B((XrA, Um) => {
  'use strict';
  var { Headers: yV, HeadersList: km, fill: DV } = Oo(),
    { extractBody: Rm, cloneBody: mV, mixinBody: kV } = ui(),
    TB = eA(),
    { kEnumerableProperty: ze } = TB,
    {
      isValidReasonPhrase: RV,
      isCancelled: bV,
      isAborted: FV,
      isBlobLike: SV,
      serializeJavascriptValueToJSONString: TV,
      isErrorLike: NV,
      isomorphicEncode: UV,
    } = Et(),
    { redirectStatusSet: MV, nullBodyStatus: LV, DOMException: bm } = Kr(),
    { kState: bA, kHeaders: Ae, kGuard: Ks, kRealm: Xe } = pr(),
    { webidl: _ } = Ie(),
    { FormData: GV } = mc(),
    { getGlobalOrigin: xV } = ms(),
    { URLSerializer: Fm } = Tt(),
    { kHeadersList: FB, kConstruct: vV } = dA(),
    NB = require('assert'),
    { types: SB } = require('util'),
    Tm = globalThis.ReadableStream || require('stream/web').ReadableStream,
    OV = new TextEncoder('utf-8'),
    Xs = class A {
      static error() {
        let e = { settingsObject: {} },
          t = new A();
        return (
          (t[bA] = Qg()),
          (t[Xe] = e),
          (t[Ae][FB] = t[bA].headersList),
          (t[Ae][Ks] = 'immutable'),
          (t[Ae][Xe] = e),
          t
        );
      }
      static json(e, t = {}) {
        _.argumentLengthCheck(arguments, 1, { header: 'Response.json' }),
          t !== null && (t = _.converters.ResponseInit(t));
        let r = OV.encode(TV(e)),
          o = Rm(r),
          s = { settingsObject: {} },
          n = new A();
        return (
          (n[Xe] = s),
          (n[Ae][Ks] = 'response'),
          (n[Ae][Xe] = s),
          Sm(n, t, { body: o[0], type: 'application/json' }),
          n
        );
      }
      static redirect(e, t = 302) {
        let r = { settingsObject: {} };
        _.argumentLengthCheck(arguments, 1, { header: 'Response.redirect' }),
          (e = _.converters.USVString(e)),
          (t = _.converters['unsigned short'](t));
        let o;
        try {
          o = new URL(e, xV());
        } catch (i) {
          throw Object.assign(new TypeError('Failed to parse URL from ' + e), {
            cause: i,
          });
        }
        if (!MV.has(t)) throw new RangeError('Invalid status code ' + t);
        let s = new A();
        (s[Xe] = r),
          (s[Ae][Ks] = 'immutable'),
          (s[Ae][Xe] = r),
          (s[bA].status = t);
        let n = UV(Fm(o));
        return s[bA].headersList.append('location', n), s;
      }
      constructor(e = null, t = {}) {
        e !== null && (e = _.converters.BodyInit(e)),
          (t = _.converters.ResponseInit(t)),
          (this[Xe] = { settingsObject: {} }),
          (this[bA] = Cg({})),
          (this[Ae] = new yV(vV)),
          (this[Ae][Ks] = 'response'),
          (this[Ae][FB] = this[bA].headersList),
          (this[Ae][Xe] = this[Xe]);
        let r = null;
        if (e != null) {
          let [o, s] = Rm(e);
          r = { body: o, type: s };
        }
        Sm(this, t, r);
      }
      get type() {
        return _.brandCheck(this, A), this[bA].type;
      }
      get url() {
        _.brandCheck(this, A);
        let e = this[bA].urlList,
          t = e[e.length - 1] ?? null;
        return t === null ? '' : Fm(t, !0);
      }
      get redirected() {
        return _.brandCheck(this, A), this[bA].urlList.length > 1;
      }
      get status() {
        return _.brandCheck(this, A), this[bA].status;
      }
      get ok() {
        return (
          _.brandCheck(this, A),
          this[bA].status >= 200 && this[bA].status <= 299
        );
      }
      get statusText() {
        return _.brandCheck(this, A), this[bA].statusText;
      }
      get headers() {
        return _.brandCheck(this, A), this[Ae];
      }
      get body() {
        return (
          _.brandCheck(this, A), this[bA].body ? this[bA].body.stream : null
        );
      }
      get bodyUsed() {
        return (
          _.brandCheck(this, A),
          !!this[bA].body && TB.isDisturbed(this[bA].body.stream)
        );
      }
      clone() {
        if (
          (_.brandCheck(this, A),
          this.bodyUsed || (this.body && this.body.locked))
        )
          throw _.errors.exception({
            header: 'Response.clone',
            message: 'Body has already been consumed.',
          });
        let e = UB(this[bA]),
          t = new A();
        return (
          (t[bA] = e),
          (t[Xe] = this[Xe]),
          (t[Ae][FB] = e.headersList),
          (t[Ae][Ks] = this[Ae][Ks]),
          (t[Ae][Xe] = this[Ae][Xe]),
          t
        );
      }
    };
  kV(Xs);
  Object.defineProperties(Xs.prototype, {
    type: ze,
    url: ze,
    status: ze,
    ok: ze,
    redirected: ze,
    statusText: ze,
    headers: ze,
    clone: ze,
    body: ze,
    bodyUsed: ze,
    [Symbol.toStringTag]: { value: 'Response', configurable: !0 },
  });
  Object.defineProperties(Xs, { json: ze, redirect: ze, error: ze });
  function UB(A) {
    if (A.internalResponse) return Nm(UB(A.internalResponse), A.type);
    let e = Cg({ ...A, body: null });
    return A.body != null && (e.body = mV(A.body)), e;
  }
  function Cg(A) {
    return {
      aborted: !1,
      rangeRequested: !1,
      timingAllowPassed: !1,
      requestIncludesCredentials: !1,
      type: 'default',
      status: 200,
      timingInfo: null,
      cacheState: '',
      statusText: '',
      ...A,
      headersList: A.headersList ? new km(A.headersList) : new km(),
      urlList: A.urlList ? [...A.urlList] : [],
    };
  }
  function Qg(A) {
    let e = NV(A);
    return Cg({
      type: 'error',
      status: 0,
      error: e ? A : new Error(A && String(A)),
      aborted: A && A.name === 'AbortError',
    });
  }
  function lg(A, e) {
    return (
      (e = { internalResponse: A, ...e }),
      new Proxy(A, {
        get(t, r) {
          return r in e ? e[r] : t[r];
        },
        set(t, r, o) {
          return NB(!(r in e)), (t[r] = o), !0;
        },
      })
    );
  }
  function Nm(A, e) {
    if (e === 'basic')
      return lg(A, { type: 'basic', headersList: A.headersList });
    if (e === 'cors')
      return lg(A, { type: 'cors', headersList: A.headersList });
    if (e === 'opaque')
      return lg(A, {
        type: 'opaque',
        urlList: Object.freeze([]),
        status: 0,
        statusText: '',
        body: null,
      });
    if (e === 'opaqueredirect')
      return lg(A, {
        type: 'opaqueredirect',
        status: 0,
        statusText: '',
        headersList: [],
        body: null,
      });
    NB(!1);
  }
  function YV(A, e = null) {
    return (
      NB(bV(A)),
      FV(A)
        ? Qg(
            Object.assign(new bm('The operation was aborted.', 'AbortError'), {
              cause: e,
            }),
          )
        : Qg(Object.assign(new bm('Request was cancelled.'), { cause: e }))
    );
  }
  function Sm(A, e, t) {
    if (e.status !== null && (e.status < 200 || e.status > 599))
      throw new RangeError(
        'init["status"] must be in the range of 200 to 599, inclusive.',
      );
    if ('statusText' in e && e.statusText != null && !RV(String(e.statusText)))
      throw new TypeError('Invalid statusText');
    if (
      ('status' in e && e.status != null && (A[bA].status = e.status),
      'statusText' in e &&
        e.statusText != null &&
        (A[bA].statusText = e.statusText),
      'headers' in e && e.headers != null && DV(A[Ae], e.headers),
      t)
    ) {
      if (LV.includes(A.status))
        throw _.errors.exception({
          header: 'Response constructor',
          message: 'Invalid response status code ' + A.status,
        });
      (A[bA].body = t.body),
        t.type != null &&
          !A[bA].headersList.contains('Content-Type') &&
          A[bA].headersList.append('content-type', t.type);
    }
  }
  _.converters.ReadableStream = _.interfaceConverter(Tm);
  _.converters.FormData = _.interfaceConverter(GV);
  _.converters.URLSearchParams = _.interfaceConverter(URLSearchParams);
  _.converters.XMLHttpRequestBodyInit = function (A) {
    return typeof A == 'string'
      ? _.converters.USVString(A)
      : SV(A)
        ? _.converters.Blob(A, { strict: !1 })
        : SB.isArrayBuffer(A) || SB.isTypedArray(A) || SB.isDataView(A)
          ? _.converters.BufferSource(A)
          : TB.isFormDataLike(A)
            ? _.converters.FormData(A, { strict: !1 })
            : A instanceof URLSearchParams
              ? _.converters.URLSearchParams(A)
              : _.converters.DOMString(A);
  };
  _.converters.BodyInit = function (A) {
    return A instanceof Tm
      ? _.converters.ReadableStream(A)
      : A?.[Symbol.asyncIterator]
        ? A
        : _.converters.XMLHttpRequestBodyInit(A);
  };
  _.converters.ResponseInit = _.dictionaryConverter([
    {
      key: 'status',
      converter: _.converters['unsigned short'],
      defaultValue: 200,
    },
    { key: 'statusText', converter: _.converters.ByteString, defaultValue: '' },
    { key: 'headers', converter: _.converters.HeadersInit },
  ]);
  Um.exports = {
    makeNetworkError: Qg,
    makeResponse: Cg,
    makeAppropriateNetworkError: YV,
    filterResponse: Nm,
    Response: Xs,
    cloneResponse: UB,
  };
});
var Ji = B((zrA, Om) => {
  'use strict';
  var { extractBody: JV, mixinBody: HV, cloneBody: VV } = ui(),
    { Headers: Mm, fill: qV, HeadersList: dg } = Oo(),
    { FinalizationRegistry: PV } = VC()(),
    Yi = eA(),
    {
      isValidHTTPToken: WV,
      sameOrigin: Lm,
      normalizeMethod: _V,
      makePolicyContainer: jV,
      normalizeMethodRecord: ZV,
    } = Et(),
    {
      forbiddenMethodsSet: KV,
      corsSafeListedMethodsSet: XV,
      referrerPolicy: zV,
      requestRedirect: $V,
      requestMode: Aq,
      requestCredentials: eq,
      requestCache: tq,
      requestDuplex: rq,
    } = Kr(),
    { kEnumerableProperty: WA } = Yi,
    { kHeaders: Ee, kSignal: Oi, kState: kA, kGuard: ug, kRealm: $e } = pr(),
    { webidl: O } = Ie(),
    { getGlobalOrigin: oq } = ms(),
    { URLSerializer: sq } = Tt(),
    { kHeadersList: hg, kConstruct: Ig } = dA(),
    nq = require('assert'),
    {
      getMaxListeners: Gm,
      setMaxListeners: xm,
      getEventListeners: iq,
      defaultMaxListeners: vm,
    } = require('events'),
    MB = globalThis.TransformStream,
    aq = Symbol('abortController'),
    cq = new PV(({ signal: A, abort: e }) => {
      A.removeEventListener('abort', e);
    }),
    Yo = class A {
      constructor(e, t = {}) {
        if (e === Ig) return;
        O.argumentLengthCheck(arguments, 1, { header: 'Request constructor' }),
          (e = O.converters.RequestInfo(e)),
          (t = O.converters.RequestInit(t)),
          (this[$e] = {
            settingsObject: {
              baseUrl: oq(),
              get origin() {
                return this.baseUrl?.origin;
              },
              policyContainer: jV(),
            },
          });
        let r = null,
          o = null,
          s = this[$e].settingsObject.baseUrl,
          n = null;
        if (typeof e == 'string') {
          let I;
          try {
            I = new URL(e, s);
          } catch (u) {
            throw new TypeError('Failed to parse URL from ' + e, { cause: u });
          }
          if (I.username || I.password)
            throw new TypeError(
              'Request cannot be constructed from a URL that includes credentials: ' +
                e,
            );
          (r = fg({ urlList: [I] })), (o = 'cors');
        } else nq(e instanceof A), (r = e[kA]), (n = e[Oi]);
        let i = this[$e].settingsObject.origin,
          a = 'client';
        if (
          (r.window?.constructor?.name === 'EnvironmentSettingsObject' &&
            Lm(r.window, i) &&
            (a = r.window),
          t.window != null)
        )
          throw new TypeError(`'window' option '${a}' must be null`);
        'window' in t && (a = 'no-window'),
          (r = fg({
            method: r.method,
            headersList: r.headersList,
            unsafeRequest: r.unsafeRequest,
            client: this[$e].settingsObject,
            window: a,
            priority: r.priority,
            origin: r.origin,
            referrer: r.referrer,
            referrerPolicy: r.referrerPolicy,
            mode: r.mode,
            credentials: r.credentials,
            cache: r.cache,
            redirect: r.redirect,
            integrity: r.integrity,
            keepalive: r.keepalive,
            reloadNavigation: r.reloadNavigation,
            historyNavigation: r.historyNavigation,
            urlList: [...r.urlList],
          }));
        let c = Object.keys(t).length !== 0;
        if (
          (c &&
            (r.mode === 'navigate' && (r.mode = 'same-origin'),
            (r.reloadNavigation = !1),
            (r.historyNavigation = !1),
            (r.origin = 'client'),
            (r.referrer = 'client'),
            (r.referrerPolicy = ''),
            (r.url = r.urlList[r.urlList.length - 1]),
            (r.urlList = [r.url])),
          t.referrer !== void 0)
        ) {
          let I = t.referrer;
          if (I === '') r.referrer = 'no-referrer';
          else {
            let u;
            try {
              u = new URL(I, s);
            } catch (d) {
              throw new TypeError(`Referrer "${I}" is not a valid URL.`, {
                cause: d,
              });
            }
            (u.protocol === 'about:' && u.hostname === 'client') ||
            (i && !Lm(u, this[$e].settingsObject.baseUrl))
              ? (r.referrer = 'client')
              : (r.referrer = u);
          }
        }
        t.referrerPolicy !== void 0 && (r.referrerPolicy = t.referrerPolicy);
        let g;
        if ((t.mode !== void 0 ? (g = t.mode) : (g = o), g === 'navigate'))
          throw O.errors.exception({
            header: 'Request constructor',
            message: 'invalid request mode navigate.',
          });
        if (
          (g != null && (r.mode = g),
          t.credentials !== void 0 && (r.credentials = t.credentials),
          t.cache !== void 0 && (r.cache = t.cache),
          r.cache === 'only-if-cached' && r.mode !== 'same-origin')
        )
          throw new TypeError(
            "'only-if-cached' can be set only with 'same-origin' mode",
          );
        if (
          (t.redirect !== void 0 && (r.redirect = t.redirect),
          t.integrity != null && (r.integrity = String(t.integrity)),
          t.keepalive !== void 0 && (r.keepalive = !!t.keepalive),
          t.method !== void 0)
        ) {
          let I = t.method;
          if (!WV(I)) throw new TypeError(`'${I}' is not a valid HTTP method.`);
          if (KV.has(I.toUpperCase()))
            throw new TypeError(`'${I}' HTTP method is unsupported.`);
          (I = ZV[I] ?? _V(I)), (r.method = I);
        }
        t.signal !== void 0 && (n = t.signal), (this[kA] = r);
        let E = new AbortController();
        if (((this[Oi] = E.signal), (this[Oi][$e] = this[$e]), n != null)) {
          if (
            !n ||
            typeof n.aborted != 'boolean' ||
            typeof n.addEventListener != 'function'
          )
            throw new TypeError(
              "Failed to construct 'Request': member signal is not of type AbortSignal.",
            );
          if (n.aborted) E.abort(n.reason);
          else {
            this[aq] = E;
            let I = new WeakRef(E),
              u = function () {
                let d = I.deref();
                d !== void 0 && d.abort(this.reason);
              };
            try {
              ((typeof Gm == 'function' && Gm(n) === vm) ||
                iq(n, 'abort').length >= vm) &&
                xm(100, n);
            } catch {}
            Yi.addAbortListener(n, u), cq.register(E, { signal: n, abort: u });
          }
        }
        if (
          ((this[Ee] = new Mm(Ig)),
          (this[Ee][hg] = r.headersList),
          (this[Ee][ug] = 'request'),
          (this[Ee][$e] = this[$e]),
          g === 'no-cors')
        ) {
          if (!XV.has(r.method))
            throw new TypeError(`'${r.method} is unsupported in no-cors mode.`);
          this[Ee][ug] = 'request-no-cors';
        }
        if (c) {
          let I = this[Ee][hg],
            u = t.headers !== void 0 ? t.headers : new dg(I);
          if ((I.clear(), u instanceof dg)) {
            for (let [d, f] of u) I.append(d, f);
            I.cookies = u.cookies;
          } else qV(this[Ee], u);
        }
        let l = e instanceof A ? e[kA].body : null;
        if (
          (t.body != null || l != null) &&
          (r.method === 'GET' || r.method === 'HEAD')
        )
          throw new TypeError('Request with GET/HEAD method cannot have body.');
        let C = null;
        if (t.body != null) {
          let [I, u] = JV(t.body, r.keepalive);
          (C = I),
            u &&
              !this[Ee][hg].contains('content-type') &&
              this[Ee].append('content-type', u);
        }
        let Q = C ?? l;
        if (Q != null && Q.source == null) {
          if (C != null && t.duplex == null)
            throw new TypeError(
              'RequestInit: duplex option is required when sending a body.',
            );
          if (r.mode !== 'same-origin' && r.mode !== 'cors')
            throw new TypeError(
              'If request is made from ReadableStream, mode should be "same-origin" or "cors"',
            );
          r.useCORSPreflightFlag = !0;
        }
        let h = Q;
        if (C == null && l != null) {
          if (Yi.isDisturbed(l.stream) || l.stream.locked)
            throw new TypeError(
              'Cannot construct a Request with a Request object that has already been used.',
            );
          MB || (MB = require('stream/web').TransformStream);
          let I = new MB();
          l.stream.pipeThrough(I),
            (h = { source: l.source, length: l.length, stream: I.readable });
        }
        this[kA].body = h;
      }
      get method() {
        return O.brandCheck(this, A), this[kA].method;
      }
      get url() {
        return O.brandCheck(this, A), sq(this[kA].url);
      }
      get headers() {
        return O.brandCheck(this, A), this[Ee];
      }
      get destination() {
        return O.brandCheck(this, A), this[kA].destination;
      }
      get referrer() {
        return (
          O.brandCheck(this, A),
          this[kA].referrer === 'no-referrer'
            ? ''
            : this[kA].referrer === 'client'
              ? 'about:client'
              : this[kA].referrer.toString()
        );
      }
      get referrerPolicy() {
        return O.brandCheck(this, A), this[kA].referrerPolicy;
      }
      get mode() {
        return O.brandCheck(this, A), this[kA].mode;
      }
      get credentials() {
        return this[kA].credentials;
      }
      get cache() {
        return O.brandCheck(this, A), this[kA].cache;
      }
      get redirect() {
        return O.brandCheck(this, A), this[kA].redirect;
      }
      get integrity() {
        return O.brandCheck(this, A), this[kA].integrity;
      }
      get keepalive() {
        return O.brandCheck(this, A), this[kA].keepalive;
      }
      get isReloadNavigation() {
        return O.brandCheck(this, A), this[kA].reloadNavigation;
      }
      get isHistoryNavigation() {
        return O.brandCheck(this, A), this[kA].historyNavigation;
      }
      get signal() {
        return O.brandCheck(this, A), this[Oi];
      }
      get body() {
        return (
          O.brandCheck(this, A), this[kA].body ? this[kA].body.stream : null
        );
      }
      get bodyUsed() {
        return (
          O.brandCheck(this, A),
          !!this[kA].body && Yi.isDisturbed(this[kA].body.stream)
        );
      }
      get duplex() {
        return O.brandCheck(this, A), 'half';
      }
      clone() {
        if ((O.brandCheck(this, A), this.bodyUsed || this.body?.locked))
          throw new TypeError('unusable');
        let e = gq(this[kA]),
          t = new A(Ig);
        (t[kA] = e),
          (t[$e] = this[$e]),
          (t[Ee] = new Mm(Ig)),
          (t[Ee][hg] = e.headersList),
          (t[Ee][ug] = this[Ee][ug]),
          (t[Ee][$e] = this[Ee][$e]);
        let r = new AbortController();
        return (
          this.signal.aborted
            ? r.abort(this.signal.reason)
            : Yi.addAbortListener(this.signal, () => {
                r.abort(this.signal.reason);
              }),
          (t[Oi] = r.signal),
          t
        );
      }
    };
  HV(Yo);
  function fg(A) {
    let e = {
      method: 'GET',
      localURLsOnly: !1,
      unsafeRequest: !1,
      body: null,
      client: null,
      reservedClient: null,
      replacesClientId: '',
      window: 'client',
      keepalive: !1,
      serviceWorkers: 'all',
      initiator: '',
      destination: '',
      priority: null,
      origin: 'client',
      policyContainer: 'client',
      referrer: 'client',
      referrerPolicy: '',
      mode: 'no-cors',
      useCORSPreflightFlag: !1,
      credentials: 'same-origin',
      useCredentials: !1,
      cache: 'default',
      redirect: 'follow',
      integrity: '',
      cryptoGraphicsNonceMetadata: '',
      parserMetadata: '',
      reloadNavigation: !1,
      historyNavigation: !1,
      userActivation: !1,
      taintedOrigin: !1,
      redirectCount: 0,
      responseTainting: 'basic',
      preventNoCacheCacheControlHeaderModification: !1,
      done: !1,
      timingAllowFailed: !1,
      ...A,
      headersList: A.headersList ? new dg(A.headersList) : new dg(),
    };
    return (e.url = e.urlList[0]), e;
  }
  function gq(A) {
    let e = fg({ ...A, body: null });
    return A.body != null && (e.body = VV(A.body)), e;
  }
  Object.defineProperties(Yo.prototype, {
    method: WA,
    url: WA,
    headers: WA,
    redirect: WA,
    clone: WA,
    signal: WA,
    duplex: WA,
    destination: WA,
    body: WA,
    bodyUsed: WA,
    isHistoryNavigation: WA,
    isReloadNavigation: WA,
    keepalive: WA,
    integrity: WA,
    cache: WA,
    credentials: WA,
    attribute: WA,
    referrerPolicy: WA,
    referrer: WA,
    mode: WA,
    [Symbol.toStringTag]: { value: 'Request', configurable: !0 },
  });
  O.converters.Request = O.interfaceConverter(Yo);
  O.converters.RequestInfo = function (A) {
    return typeof A == 'string'
      ? O.converters.USVString(A)
      : A instanceof Yo
        ? O.converters.Request(A)
        : O.converters.USVString(A);
  };
  O.converters.AbortSignal = O.interfaceConverter(AbortSignal);
  O.converters.RequestInit = O.dictionaryConverter([
    { key: 'method', converter: O.converters.ByteString },
    { key: 'headers', converter: O.converters.HeadersInit },
    { key: 'body', converter: O.nullableConverter(O.converters.BodyInit) },
    { key: 'referrer', converter: O.converters.USVString },
    {
      key: 'referrerPolicy',
      converter: O.converters.DOMString,
      allowedValues: zV,
    },
    { key: 'mode', converter: O.converters.DOMString, allowedValues: Aq },
    {
      key: 'credentials',
      converter: O.converters.DOMString,
      allowedValues: eq,
    },
    { key: 'cache', converter: O.converters.DOMString, allowedValues: tq },
    { key: 'redirect', converter: O.converters.DOMString, allowedValues: $V },
    { key: 'integrity', converter: O.converters.DOMString },
    { key: 'keepalive', converter: O.converters.boolean },
    {
      key: 'signal',
      converter: O.nullableConverter((A) =>
        O.converters.AbortSignal(A, { strict: !1 }),
      ),
    },
    { key: 'window', converter: O.converters.any },
    { key: 'duplex', converter: O.converters.DOMString, allowedValues: rq },
  ]);
  Om.exports = { Request: Yo, makeRequest: fg };
});
var Rg = B(($rA, $m) => {
  'use strict';
  var {
      Response: Eq,
      makeNetworkError: hA,
      makeAppropriateNetworkError: pg,
      filterResponse: LB,
      makeResponse: wg,
    } = Bg(),
    { Headers: Ym } = Oo(),
    { Request: lq, makeRequest: Qq } = Ji(),
    Hi = require('zlib'),
    {
      bytesMatch: Cq,
      makePolicyContainer: Bq,
      clonePolicyContainer: uq,
      requestBadPort: hq,
      TAOCheck: Iq,
      appendRequestOriginHeader: dq,
      responseLocationURL: fq,
      requestCurrentURL: tr,
      setRequestReferrerPolicyOnRedirect: pq,
      tryUpgradeRequestToAPotentiallyTrustworthyURL: wq,
      createOpaqueTimingInfo: qB,
      appendFetchMetadata: yq,
      corsCheck: Dq,
      crossOriginResourcePolicyCheck: mq,
      determineRequestsReferrer: kq,
      coarsenedSharedCurrentTime: PB,
      createDeferredPromise: Rq,
      isBlobLike: bq,
      sameOrigin: JB,
      isCancelled: $s,
      isAborted: Jm,
      isErrorLike: Fq,
      fullyReadBody: Pm,
      readableStreamClose: Sq,
      isomorphicEncode: HB,
      urlIsLocal: Tq,
      urlIsHttpHttpsScheme: WB,
      urlHasHttpsScheme: Nq,
    } = Et(),
    { kState: VB, kHeaders: GB, kGuard: Uq, kRealm: Hm } = pr(),
    An = require('assert'),
    { safelyExtractBody: yg } = ui(),
    {
      redirectStatusSet: Wm,
      nullBodyStatus: _m,
      safeMethodsSet: Mq,
      requestBodyHeader: Lq,
      subresourceSet: Gq,
      DOMException: Dg,
    } = Kr(),
    { kHeadersList: zs } = dA(),
    xq = require('events'),
    { Readable: vq, pipeline: Oq } = require('stream'),
    {
      addAbortListener: Yq,
      isErrored: Jq,
      isReadable: mg,
      nodeMajor: Vm,
      nodeMinor: Hq,
    } = eA(),
    { dataURLProcessor: Vq, serializeAMimeType: qq } = Tt(),
    { TransformStream: Pq } = require('stream/web'),
    { getGlobalDispatcher: Wq } = _s(),
    { webidl: _q } = Ie(),
    { STATUS_CODES: jq } = require('http'),
    Zq = ['GET', 'HEAD'],
    xB,
    vB = globalThis.ReadableStream,
    kg = class extends xq {
      constructor(e) {
        super(),
          (this.dispatcher = e),
          (this.connection = null),
          (this.dump = !1),
          (this.state = 'ongoing'),
          this.setMaxListeners(21);
      }
      terminate(e) {
        this.state === 'ongoing' &&
          ((this.state = 'terminated'),
          this.connection?.destroy(e),
          this.emit('terminated', e));
      }
      abort(e) {
        this.state === 'ongoing' &&
          ((this.state = 'aborted'),
          e || (e = new Dg('The operation was aborted.', 'AbortError')),
          (this.serializedAbortReason = e),
          this.connection?.destroy(e),
          this.emit('terminated', e));
      }
    };
  function Kq(A, e = {}) {
    _q.argumentLengthCheck(arguments, 1, { header: 'globalThis.fetch' });
    let t = Rq(),
      r;
    try {
      r = new lq(A, e);
    } catch (l) {
      return t.reject(l), t.promise;
    }
    let o = r[VB];
    if (r.signal.aborted) return OB(t, o, null, r.signal.reason), t.promise;
    o.client.globalObject?.constructor?.name === 'ServiceWorkerGlobalScope' &&
      (o.serviceWorkers = 'none');
    let n = null,
      i = null,
      a = !1,
      c = null;
    return (
      Yq(r.signal, () => {
        (a = !0),
          An(c != null),
          c.abort(r.signal.reason),
          OB(t, o, n, r.signal.reason);
      }),
      (c = Zm({
        request: o,
        processResponseEndOfBody: (l) => jm(l, 'fetch'),
        processResponse: (l) => {
          if (a) return Promise.resolve();
          if (l.aborted)
            return OB(t, o, n, c.serializedAbortReason), Promise.resolve();
          if (l.type === 'error')
            return (
              t.reject(
                Object.assign(new TypeError('fetch failed'), {
                  cause: l.error,
                }),
              ),
              Promise.resolve()
            );
          (n = new Eq()),
            (n[VB] = l),
            (n[Hm] = i),
            (n[GB][zs] = l.headersList),
            (n[GB][Uq] = 'immutable'),
            (n[GB][Hm] = i),
            t.resolve(n);
        },
        dispatcher: e.dispatcher ?? Wq(),
      })),
      t.promise
    );
  }
  function jm(A, e = 'other') {
    if ((A.type === 'error' && A.aborted) || !A.urlList?.length) return;
    let t = A.urlList[0],
      r = A.timingInfo,
      o = A.cacheState;
    WB(t) &&
      r !== null &&
      (A.timingAllowPassed || ((r = qB({ startTime: r.startTime })), (o = '')),
      (r.endTime = PB()),
      (A.timingInfo = r),
      Xq(r, t, e, globalThis, o));
  }
  function Xq(A, e, t, r, o) {
    (Vm > 18 || (Vm === 18 && Hq >= 2)) &&
      performance.markResourceTiming(A, e.href, t, r, o);
  }
  function OB(A, e, t, r) {
    if (
      (r || (r = new Dg('The operation was aborted.', 'AbortError')),
      A.reject(r),
      e.body != null &&
        mg(e.body?.stream) &&
        e.body.stream.cancel(r).catch((s) => {
          if (s.code !== 'ERR_INVALID_STATE') throw s;
        }),
      t == null)
    )
      return;
    let o = t[VB];
    o.body != null &&
      mg(o.body?.stream) &&
      o.body.stream.cancel(r).catch((s) => {
        if (s.code !== 'ERR_INVALID_STATE') throw s;
      });
  }
  function Zm({
    request: A,
    processRequestBodyChunkLength: e,
    processRequestEndOfBody: t,
    processResponse: r,
    processResponseEndOfBody: o,
    processResponseConsumeBody: s,
    useParallelQueue: n = !1,
    dispatcher: i,
  }) {
    let a = null,
      c = !1;
    A.client != null &&
      ((a = A.client.globalObject),
      (c = A.client.crossOriginIsolatedCapability));
    let g = PB(c),
      E = qB({ startTime: g }),
      l = {
        controller: new kg(i),
        request: A,
        timingInfo: E,
        processRequestBodyChunkLength: e,
        processRequestEndOfBody: t,
        processResponse: r,
        processResponseConsumeBody: s,
        processResponseEndOfBody: o,
        taskDestination: a,
        crossOriginIsolatedCapability: c,
      };
    return (
      An(!A.body || A.body.stream),
      A.window === 'client' &&
        (A.window =
          A.client?.globalObject?.constructor?.name === 'Window'
            ? A.client
            : 'no-window'),
      A.origin === 'client' && (A.origin = A.client?.origin),
      A.policyContainer === 'client' &&
        (A.client != null
          ? (A.policyContainer = uq(A.client.policyContainer))
          : (A.policyContainer = Bq())),
      A.headersList.contains('accept') || A.headersList.append('accept', '*/*'),
      A.headersList.contains('accept-language') ||
        A.headersList.append('accept-language', '*'),
      A.priority,
      Gq.has(A.destination),
      Km(l).catch((C) => {
        l.controller.terminate(C);
      }),
      l.controller
    );
  }
  async function Km(A, e = !1) {
    let t = A.request,
      r = null;
    if (
      (t.localURLsOnly && !Tq(tr(t)) && (r = hA('local URLs only')),
      wq(t),
      hq(t) === 'blocked' && (r = hA('bad port')),
      t.referrerPolicy === '' &&
        (t.referrerPolicy = t.policyContainer.referrerPolicy),
      t.referrer !== 'no-referrer' && (t.referrer = kq(t)),
      r === null &&
        (r = await (async () => {
          let s = tr(t);
          return (JB(s, t.url) && t.responseTainting === 'basic') ||
            s.protocol === 'data:' ||
            t.mode === 'navigate' ||
            t.mode === 'websocket'
            ? ((t.responseTainting = 'basic'), await qm(A))
            : t.mode === 'same-origin'
              ? hA('request mode cannot be "same-origin"')
              : t.mode === 'no-cors'
                ? t.redirect !== 'follow'
                  ? hA('redirect mode cannot be "follow" for "no-cors" request')
                  : ((t.responseTainting = 'opaque'), await qm(A))
                : WB(tr(t))
                  ? ((t.responseTainting = 'cors'), await Xm(A))
                  : hA('URL scheme must be a HTTP(S) scheme');
        })()),
      e)
    )
      return r;
    r.status !== 0 &&
      !r.internalResponse &&
      (t.responseTainting,
      t.responseTainting === 'basic'
        ? (r = LB(r, 'basic'))
        : t.responseTainting === 'cors'
          ? (r = LB(r, 'cors'))
          : t.responseTainting === 'opaque'
            ? (r = LB(r, 'opaque'))
            : An(!1));
    let o = r.status === 0 ? r : r.internalResponse;
    if (
      (o.urlList.length === 0 && o.urlList.push(...t.urlList),
      t.timingAllowFailed || (r.timingAllowPassed = !0),
      r.type === 'opaque' &&
        o.status === 206 &&
        o.rangeRequested &&
        !t.headers.contains('range') &&
        (r = o = hA()),
      r.status !== 0 &&
        (t.method === 'HEAD' ||
          t.method === 'CONNECT' ||
          _m.includes(o.status)) &&
        ((o.body = null), (A.controller.dump = !0)),
      t.integrity)
    ) {
      let s = (i) => YB(A, hA(i));
      if (t.responseTainting === 'opaque' || r.body == null) {
        s(r.error);
        return;
      }
      let n = (i) => {
        if (!Cq(i, t.integrity)) {
          s('integrity mismatch');
          return;
        }
        (r.body = yg(i)[0]), YB(A, r);
      };
      await Pm(r.body, n, s);
    } else YB(A, r);
  }
  function qm(A) {
    if ($s(A) && A.request.redirectCount === 0) return Promise.resolve(pg(A));
    let { request: e } = A,
      { protocol: t } = tr(e);
    switch (t) {
      case 'about:':
        return Promise.resolve(hA('about scheme is not supported'));
      case 'blob:': {
        xB || (xB = require('buffer').resolveObjectURL);
        let r = tr(e);
        if (r.search.length !== 0)
          return Promise.resolve(
            hA('NetworkError when attempting to fetch resource.'),
          );
        let o = xB(r.toString());
        if (e.method !== 'GET' || !bq(o))
          return Promise.resolve(hA('invalid method'));
        let s = yg(o),
          n = s[0],
          i = HB(`${n.length}`),
          a = s[1] ?? '',
          c = wg({
            statusText: 'OK',
            headersList: [
              ['content-length', { name: 'Content-Length', value: i }],
              ['content-type', { name: 'Content-Type', value: a }],
            ],
          });
        return (c.body = n), Promise.resolve(c);
      }
      case 'data:': {
        let r = tr(e),
          o = Vq(r);
        if (o === 'failure')
          return Promise.resolve(hA('failed to fetch the data URL'));
        let s = qq(o.mimeType);
        return Promise.resolve(
          wg({
            statusText: 'OK',
            headersList: [['content-type', { name: 'Content-Type', value: s }]],
            body: yg(o.body)[0],
          }),
        );
      }
      case 'file:':
        return Promise.resolve(hA('not implemented... yet...'));
      case 'http:':
      case 'https:':
        return Xm(A).catch((r) => hA(r));
      default:
        return Promise.resolve(hA('unknown scheme'));
    }
  }
  function zq(A, e) {
    (A.request.done = !0),
      A.processResponseDone != null &&
        queueMicrotask(() => A.processResponseDone(e));
  }
  function YB(A, e) {
    e.type === 'error' &&
      ((e.urlList = [A.request.urlList[0]]),
      (e.timingInfo = qB({ startTime: A.timingInfo.startTime })));
    let t = () => {
      (A.request.done = !0),
        A.processResponseEndOfBody != null &&
          queueMicrotask(() => A.processResponseEndOfBody(e));
    };
    if (
      (A.processResponse != null && queueMicrotask(() => A.processResponse(e)),
      e.body == null)
    )
      t();
    else {
      let r = (s, n) => {
          n.enqueue(s);
        },
        o = new Pq(
          { start() {}, transform: r, flush: t },
          {
            size() {
              return 1;
            },
          },
          {
            size() {
              return 1;
            },
          },
        );
      e.body = { stream: e.body.stream.pipeThrough(o) };
    }
    if (A.processResponseConsumeBody != null) {
      let r = (s) => A.processResponseConsumeBody(e, s),
        o = (s) => A.processResponseConsumeBody(e, s);
      if (e.body == null) queueMicrotask(() => r(null));
      else return Pm(e.body, r, o);
      return Promise.resolve();
    }
  }
  async function Xm(A) {
    let e = A.request,
      t = null,
      r = null,
      o = A.timingInfo;
    if ((e.serviceWorkers, t === null)) {
      if (
        (e.redirect === 'follow' && (e.serviceWorkers = 'none'),
        (r = t = await zm(A)),
        e.responseTainting === 'cors' && Dq(e, t) === 'failure')
      )
        return hA('cors failure');
      Iq(e, t) === 'failure' && (e.timingAllowFailed = !0);
    }
    return (e.responseTainting === 'opaque' || t.type === 'opaque') &&
      mq(e.origin, e.client, e.destination, r) === 'blocked'
      ? hA('blocked')
      : (Wm.has(r.status) &&
          (e.redirect !== 'manual' && A.controller.connection.destroy(),
          e.redirect === 'error'
            ? (t = hA('unexpected redirect'))
            : e.redirect === 'manual'
              ? (t = r)
              : e.redirect === 'follow'
                ? (t = await $q(A, t))
                : An(!1)),
        (t.timingInfo = o),
        t);
  }
  function $q(A, e) {
    let t = A.request,
      r = e.internalResponse ? e.internalResponse : e,
      o;
    try {
      if (((o = fq(r, tr(t).hash)), o == null)) return e;
    } catch (n) {
      return Promise.resolve(hA(n));
    }
    if (!WB(o))
      return Promise.resolve(hA('URL scheme must be a HTTP(S) scheme'));
    if (t.redirectCount === 20)
      return Promise.resolve(hA('redirect count exceeded'));
    if (
      ((t.redirectCount += 1),
      t.mode === 'cors' && (o.username || o.password) && !JB(t, o))
    )
      return Promise.resolve(
        hA('cross origin not allowed for request mode "cors"'),
      );
    if (t.responseTainting === 'cors' && (o.username || o.password))
      return Promise.resolve(
        hA('URL cannot contain credentials for request mode "cors"'),
      );
    if (r.status !== 303 && t.body != null && t.body.source == null)
      return Promise.resolve(hA());
    if (
      ([301, 302].includes(r.status) && t.method === 'POST') ||
      (r.status === 303 && !Zq.includes(t.method))
    ) {
      (t.method = 'GET'), (t.body = null);
      for (let n of Lq) t.headersList.delete(n);
    }
    JB(tr(t), o) ||
      (t.headersList.delete('authorization'),
      t.headersList.delete('proxy-authorization', !0),
      t.headersList.delete('cookie'),
      t.headersList.delete('host')),
      t.body != null &&
        (An(t.body.source != null), (t.body = yg(t.body.source)[0]));
    let s = A.timingInfo;
    return (
      (s.redirectEndTime = s.postRedirectStartTime =
        PB(A.crossOriginIsolatedCapability)),
      s.redirectStartTime === 0 && (s.redirectStartTime = s.startTime),
      t.urlList.push(o),
      pq(t, r),
      Km(A, !0)
    );
  }
  async function zm(A, e = !1, t = !1) {
    let r = A.request,
      o = null,
      s = null,
      n = null,
      i = null,
      a = !1;
    r.window === 'no-window' && r.redirect === 'error'
      ? ((o = A), (s = r))
      : ((s = Qq(r)), (o = { ...A }), (o.request = s));
    let c =
        r.credentials === 'include' ||
        (r.credentials === 'same-origin' && r.responseTainting === 'basic'),
      g = s.body ? s.body.length : null,
      E = null;
    if (
      (s.body == null && ['POST', 'PUT'].includes(s.method) && (E = '0'),
      g != null && (E = HB(`${g}`)),
      E != null && s.headersList.append('content-length', E),
      g != null && s.keepalive,
      s.referrer instanceof URL &&
        s.headersList.append('referer', HB(s.referrer.href)),
      dq(s),
      yq(s),
      s.headersList.contains('user-agent') ||
        s.headersList.append(
          'user-agent',
          typeof esbuildDetection > 'u' ? 'undici' : 'node',
        ),
      s.cache === 'default' &&
        (s.headersList.contains('if-modified-since') ||
          s.headersList.contains('if-none-match') ||
          s.headersList.contains('if-unmodified-since') ||
          s.headersList.contains('if-match') ||
          s.headersList.contains('if-range')) &&
        (s.cache = 'no-store'),
      s.cache === 'no-cache' &&
        !s.preventNoCacheCacheControlHeaderModification &&
        !s.headersList.contains('cache-control') &&
        s.headersList.append('cache-control', 'max-age=0'),
      (s.cache === 'no-store' || s.cache === 'reload') &&
        (s.headersList.contains('pragma') ||
          s.headersList.append('pragma', 'no-cache'),
        s.headersList.contains('cache-control') ||
          s.headersList.append('cache-control', 'no-cache')),
      s.headersList.contains('range') &&
        s.headersList.append('accept-encoding', 'identity'),
      s.headersList.contains('accept-encoding') ||
        (Nq(tr(s))
          ? s.headersList.append('accept-encoding', 'br, gzip, deflate')
          : s.headersList.append('accept-encoding', 'gzip, deflate')),
      s.headersList.delete('host'),
      i == null && (s.cache = 'no-store'),
      s.mode !== 'no-store' && s.mode,
      n == null)
    ) {
      if (s.mode === 'only-if-cached') return hA('only if cached');
      let l = await AP(o, c, t);
      !Mq.has(s.method) && l.status >= 200 && l.status <= 399,
        a && l.status,
        n == null && (n = l);
    }
    if (
      ((n.urlList = [...s.urlList]),
      s.headersList.contains('range') && (n.rangeRequested = !0),
      (n.requestIncludesCredentials = c),
      n.status === 407)
    )
      return r.window === 'no-window'
        ? hA()
        : $s(A)
          ? pg(A)
          : hA('proxy authentication required');
    if (n.status === 421 && !t && (r.body == null || r.body.source != null)) {
      if ($s(A)) return pg(A);
      A.controller.connection.destroy(), (n = await zm(A, e, !0));
    }
    return n;
  }
  async function AP(A, e = !1, t = !1) {
    An(!A.controller.connection || A.controller.connection.destroyed),
      (A.controller.connection = {
        abort: null,
        destroyed: !1,
        destroy(Q) {
          this.destroyed ||
            ((this.destroyed = !0),
            this.abort?.(
              Q ?? new Dg('The operation was aborted.', 'AbortError'),
            ));
        },
      });
    let r = A.request,
      o = null,
      s = A.timingInfo;
    null == null && (r.cache = 'no-store');
    let i = t ? 'yes' : 'no';
    r.mode;
    let a = null;
    if (r.body == null && A.processRequestEndOfBody)
      queueMicrotask(() => A.processRequestEndOfBody());
    else if (r.body != null) {
      let Q = async function* (u) {
          $s(A) || (yield u, A.processRequestBodyChunkLength?.(u.byteLength));
        },
        h = () => {
          $s(A) || (A.processRequestEndOfBody && A.processRequestEndOfBody());
        },
        I = (u) => {
          $s(A) ||
            (u.name === 'AbortError'
              ? A.controller.abort()
              : A.controller.terminate(u));
        };
      a = (async function* () {
        try {
          for await (let u of r.body.stream) yield* Q(u);
          h();
        } catch (u) {
          I(u);
        }
      })();
    }
    try {
      let {
        body: Q,
        status: h,
        statusText: I,
        headersList: u,
        socket: d,
      } = await C({ body: a });
      if (d) o = wg({ status: h, statusText: I, headersList: u, socket: d });
      else {
        let f = Q[Symbol.asyncIterator]();
        (A.controller.next = () => f.next()),
          (o = wg({ status: h, statusText: I, headersList: u }));
      }
    } catch (Q) {
      return Q.name === 'AbortError'
        ? (A.controller.connection.destroy(), pg(A, Q))
        : hA(Q);
    }
    let c = () => {
        A.controller.resume();
      },
      g = (Q) => {
        A.controller.abort(Q);
      };
    vB || (vB = require('stream/web').ReadableStream);
    let E = new vB(
      {
        async start(Q) {
          A.controller.controller = Q;
        },
        async pull(Q) {
          await c(Q);
        },
        async cancel(Q) {
          await g(Q);
        },
      },
      {
        highWaterMark: 0,
        size() {
          return 1;
        },
      },
    );
    (o.body = { stream: E }),
      A.controller.on('terminated', l),
      (A.controller.resume = async () => {
        for (;;) {
          let Q, h;
          try {
            let { done: I, value: u } = await A.controller.next();
            if (Jm(A)) break;
            Q = I ? void 0 : u;
          } catch (I) {
            A.controller.ended && !s.encodedBodySize
              ? (Q = void 0)
              : ((Q = I), (h = !0));
          }
          if (Q === void 0) {
            Sq(A.controller.controller), zq(A, o);
            return;
          }
          if (((s.decodedBodySize += Q?.byteLength ?? 0), h)) {
            A.controller.terminate(Q);
            return;
          }
          if ((A.controller.controller.enqueue(new Uint8Array(Q)), Jq(E))) {
            A.controller.terminate();
            return;
          }
          if (!A.controller.controller.desiredSize) return;
        }
      });
    function l(Q) {
      Jm(A)
        ? ((o.aborted = !0),
          mg(E) &&
            A.controller.controller.error(A.controller.serializedAbortReason))
        : mg(E) &&
          A.controller.controller.error(
            new TypeError('terminated', { cause: Fq(Q) ? Q : void 0 }),
          ),
        A.controller.connection.destroy();
    }
    return o;
    async function C({ body: Q }) {
      let h = tr(r),
        I = A.controller.dispatcher;
      return new Promise((u, d) =>
        I.dispatch(
          {
            path: h.pathname + h.search,
            origin: h.origin,
            method: r.method,
            body: A.controller.dispatcher.isMockActive
              ? r.body && (r.body.source || r.body.stream)
              : Q,
            headers: r.headersList.entries,
            maxRedirections: 0,
            upgrade: r.mode === 'websocket' ? 'websocket' : void 0,
          },
          {
            body: null,
            abort: null,
            onConnect(f) {
              let { connection: D } = A.controller;
              D.destroyed
                ? f(new Dg('The operation was aborted.', 'AbortError'))
                : (A.controller.on('terminated', f),
                  (this.abort = D.abort = f));
            },
            onHeaders(f, D, q, j) {
              if (f < 200) return;
              let J = [],
                yA = '',
                qA = new Ym();
              if (Array.isArray(D))
                for (let K = 0; K < D.length; K += 2) {
                  let gA = D[K + 0].toString('latin1'),
                    QA = D[K + 1].toString('latin1');
                  gA.toLowerCase() === 'content-encoding'
                    ? (J = QA.toLowerCase()
                        .split(',')
                        .map((qe) => qe.trim()))
                    : gA.toLowerCase() === 'location' && (yA = QA),
                    qA[zs].append(gA, QA);
                }
              else {
                let K = Object.keys(D);
                for (let gA of K) {
                  let QA = D[gA];
                  gA.toLowerCase() === 'content-encoding'
                    ? (J = QA.toLowerCase()
                        .split(',')
                        .map((qe) => qe.trim())
                        .reverse())
                    : gA.toLowerCase() === 'location' && (yA = QA),
                    qA[zs].append(gA, QA);
                }
              }
              this.body = new vq({ read: q });
              let vA = [],
                IA = r.redirect === 'follow' && yA && Wm.has(f);
              if (
                r.method !== 'HEAD' &&
                r.method !== 'CONNECT' &&
                !_m.includes(f) &&
                !IA
              )
                for (let K of J)
                  if (K === 'x-gzip' || K === 'gzip')
                    vA.push(
                      Hi.createGunzip({
                        flush: Hi.constants.Z_SYNC_FLUSH,
                        finishFlush: Hi.constants.Z_SYNC_FLUSH,
                      }),
                    );
                  else if (K === 'deflate') vA.push(Hi.createInflate());
                  else if (K === 'br') vA.push(Hi.createBrotliDecompress());
                  else {
                    vA.length = 0;
                    break;
                  }
              return (
                u({
                  status: f,
                  statusText: j,
                  headersList: qA[zs],
                  body: vA.length
                    ? Oq(this.body, ...vA, () => {})
                    : this.body.on('error', () => {}),
                }),
                !0
              );
            },
            onData(f) {
              if (A.controller.dump) return;
              let D = f;
              return (s.encodedBodySize += D.byteLength), this.body.push(D);
            },
            onComplete() {
              this.abort && A.controller.off('terminated', this.abort),
                (A.controller.ended = !0),
                this.body.push(null);
            },
            onError(f) {
              this.abort && A.controller.off('terminated', this.abort),
                this.body?.destroy(f),
                A.controller.terminate(f),
                d(f);
            },
            onUpgrade(f, D, q) {
              if (f !== 101) return;
              let j = new Ym();
              for (let J = 0; J < D.length; J += 2) {
                let yA = D[J + 0].toString('latin1'),
                  qA = D[J + 1].toString('latin1');
                j[zs].append(yA, qA);
              }
              return (
                u({
                  status: f,
                  statusText: jq[f],
                  headersList: j[zs],
                  socket: q,
                }),
                !0
              );
            },
          },
        ),
      );
    }
  }
  $m.exports = {
    fetch: Kq,
    Fetch: kg,
    fetching: Zm,
    finalizeAndReportTiming: jm,
  };
});
var _B = B((AoA, Ak) => {
  'use strict';
  Ak.exports = {
    kState: Symbol('FileReader state'),
    kResult: Symbol('FileReader result'),
    kError: Symbol('FileReader error'),
    kLastProgressEventFired: Symbol(
      'FileReader last progress event fired timestamp',
    ),
    kEvents: Symbol('FileReader events'),
    kAborted: Symbol('FileReader aborted'),
  };
});
var tk = B((eoA, ek) => {
  'use strict';
  var { webidl: At } = Ie(),
    bg = Symbol('ProgressEvent state'),
    jB = class A extends Event {
      constructor(e, t = {}) {
        (e = At.converters.DOMString(e)),
          (t = At.converters.ProgressEventInit(t ?? {})),
          super(e, t),
          (this[bg] = {
            lengthComputable: t.lengthComputable,
            loaded: t.loaded,
            total: t.total,
          });
      }
      get lengthComputable() {
        return At.brandCheck(this, A), this[bg].lengthComputable;
      }
      get loaded() {
        return At.brandCheck(this, A), this[bg].loaded;
      }
      get total() {
        return At.brandCheck(this, A), this[bg].total;
      }
    };
  At.converters.ProgressEventInit = At.dictionaryConverter([
    {
      key: 'lengthComputable',
      converter: At.converters.boolean,
      defaultValue: !1,
    },
    {
      key: 'loaded',
      converter: At.converters['unsigned long long'],
      defaultValue: 0,
    },
    {
      key: 'total',
      converter: At.converters['unsigned long long'],
      defaultValue: 0,
    },
    { key: 'bubbles', converter: At.converters.boolean, defaultValue: !1 },
    { key: 'cancelable', converter: At.converters.boolean, defaultValue: !1 },
    { key: 'composed', converter: At.converters.boolean, defaultValue: !1 },
  ]);
  ek.exports = { ProgressEvent: jB };
});
var ok = B((toA, rk) => {
  'use strict';
  function eP(A) {
    if (!A) return 'failure';
    switch (A.trim().toLowerCase()) {
      case 'unicode-1-1-utf-8':
      case 'unicode11utf8':
      case 'unicode20utf8':
      case 'utf-8':
      case 'utf8':
      case 'x-unicode20utf8':
        return 'UTF-8';
      case '866':
      case 'cp866':
      case 'csibm866':
      case 'ibm866':
        return 'IBM866';
      case 'csisolatin2':
      case 'iso-8859-2':
      case 'iso-ir-101':
      case 'iso8859-2':
      case 'iso88592':
      case 'iso_8859-2':
      case 'iso_8859-2:1987':
      case 'l2':
      case 'latin2':
        return 'ISO-8859-2';
      case 'csisolatin3':
      case 'iso-8859-3':
      case 'iso-ir-109':
      case 'iso8859-3':
      case 'iso88593':
      case 'iso_8859-3':
      case 'iso_8859-3:1988':
      case 'l3':
      case 'latin3':
        return 'ISO-8859-3';
      case 'csisolatin4':
      case 'iso-8859-4':
      case 'iso-ir-110':
      case 'iso8859-4':
      case 'iso88594':
      case 'iso_8859-4':
      case 'iso_8859-4:1988':
      case 'l4':
      case 'latin4':
        return 'ISO-8859-4';
      case 'csisolatincyrillic':
      case 'cyrillic':
      case 'iso-8859-5':
      case 'iso-ir-144':
      case 'iso8859-5':
      case 'iso88595':
      case 'iso_8859-5':
      case 'iso_8859-5:1988':
        return 'ISO-8859-5';
      case 'arabic':
      case 'asmo-708':
      case 'csiso88596e':
      case 'csiso88596i':
      case 'csisolatinarabic':
      case 'ecma-114':
      case 'iso-8859-6':
      case 'iso-8859-6-e':
      case 'iso-8859-6-i':
      case 'iso-ir-127':
      case 'iso8859-6':
      case 'iso88596':
      case 'iso_8859-6':
      case 'iso_8859-6:1987':
        return 'ISO-8859-6';
      case 'csisolatingreek':
      case 'ecma-118':
      case 'elot_928':
      case 'greek':
      case 'greek8':
      case 'iso-8859-7':
      case 'iso-ir-126':
      case 'iso8859-7':
      case 'iso88597':
      case 'iso_8859-7':
      case 'iso_8859-7:1987':
      case 'sun_eu_greek':
        return 'ISO-8859-7';
      case 'csiso88598e':
      case 'csisolatinhebrew':
      case 'hebrew':
      case 'iso-8859-8':
      case 'iso-8859-8-e':
      case 'iso-ir-138':
      case 'iso8859-8':
      case 'iso88598':
      case 'iso_8859-8':
      case 'iso_8859-8:1988':
      case 'visual':
        return 'ISO-8859-8';
      case 'csiso88598i':
      case 'iso-8859-8-i':
      case 'logical':
        return 'ISO-8859-8-I';
      case 'csisolatin6':
      case 'iso-8859-10':
      case 'iso-ir-157':
      case 'iso8859-10':
      case 'iso885910':
      case 'l6':
      case 'latin6':
        return 'ISO-8859-10';
      case 'iso-8859-13':
      case 'iso8859-13':
      case 'iso885913':
        return 'ISO-8859-13';
      case 'iso-8859-14':
      case 'iso8859-14':
      case 'iso885914':
        return 'ISO-8859-14';
      case 'csisolatin9':
      case 'iso-8859-15':
      case 'iso8859-15':
      case 'iso885915':
      case 'iso_8859-15':
      case 'l9':
        return 'ISO-8859-15';
      case 'iso-8859-16':
        return 'ISO-8859-16';
      case 'cskoi8r':
      case 'koi':
      case 'koi8':
      case 'koi8-r':
      case 'koi8_r':
        return 'KOI8-R';
      case 'koi8-ru':
      case 'koi8-u':
        return 'KOI8-U';
      case 'csmacintosh':
      case 'mac':
      case 'macintosh':
      case 'x-mac-roman':
        return 'macintosh';
      case 'iso-8859-11':
      case 'iso8859-11':
      case 'iso885911':
      case 'tis-620':
      case 'windows-874':
        return 'windows-874';
      case 'cp1250':
      case 'windows-1250':
      case 'x-cp1250':
        return 'windows-1250';
      case 'cp1251':
      case 'windows-1251':
      case 'x-cp1251':
        return 'windows-1251';
      case 'ansi_x3.4-1968':
      case 'ascii':
      case 'cp1252':
      case 'cp819':
      case 'csisolatin1':
      case 'ibm819':
      case 'iso-8859-1':
      case 'iso-ir-100':
      case 'iso8859-1':
      case 'iso88591':
      case 'iso_8859-1':
      case 'iso_8859-1:1987':
      case 'l1':
      case 'latin1':
      case 'us-ascii':
      case 'windows-1252':
      case 'x-cp1252':
        return 'windows-1252';
      case 'cp1253':
      case 'windows-1253':
      case 'x-cp1253':
        return 'windows-1253';
      case 'cp1254':
      case 'csisolatin5':
      case 'iso-8859-9':
      case 'iso-ir-148':
      case 'iso8859-9':
      case 'iso88599':
      case 'iso_8859-9':
      case 'iso_8859-9:1989':
      case 'l5':
      case 'latin5':
      case 'windows-1254':
      case 'x-cp1254':
        return 'windows-1254';
      case 'cp1255':
      case 'windows-1255':
      case 'x-cp1255':
        return 'windows-1255';
      case 'cp1256':
      case 'windows-1256':
      case 'x-cp1256':
        return 'windows-1256';
      case 'cp1257':
      case 'windows-1257':
      case 'x-cp1257':
        return 'windows-1257';
      case 'cp1258':
      case 'windows-1258':
      case 'x-cp1258':
        return 'windows-1258';
      case 'x-mac-cyrillic':
      case 'x-mac-ukrainian':
        return 'x-mac-cyrillic';
      case 'chinese':
      case 'csgb2312':
      case 'csiso58gb231280':
      case 'gb2312':
      case 'gb_2312':
      case 'gb_2312-80':
      case 'gbk':
      case 'iso-ir-58':
      case 'x-gbk':
        return 'GBK';
      case 'gb18030':
        return 'gb18030';
      case 'big5':
      case 'big5-hkscs':
      case 'cn-big5':
      case 'csbig5':
      case 'x-x-big5':
        return 'Big5';
      case 'cseucpkdfmtjapanese':
      case 'euc-jp':
      case 'x-euc-jp':
        return 'EUC-JP';
      case 'csiso2022jp':
      case 'iso-2022-jp':
        return 'ISO-2022-JP';
      case 'csshiftjis':
      case 'ms932':
      case 'ms_kanji':
      case 'shift-jis':
      case 'shift_jis':
      case 'sjis':
      case 'windows-31j':
      case 'x-sjis':
        return 'Shift_JIS';
      case 'cseuckr':
      case 'csksc56011987':
      case 'euc-kr':
      case 'iso-ir-149':
      case 'korean':
      case 'ks_c_5601-1987':
      case 'ks_c_5601-1989':
      case 'ksc5601':
      case 'ksc_5601':
      case 'windows-949':
        return 'EUC-KR';
      case 'csiso2022kr':
      case 'hz-gb-2312':
      case 'iso-2022-cn':
      case 'iso-2022-cn-ext':
      case 'iso-2022-kr':
      case 'replacement':
        return 'replacement';
      case 'unicodefffe':
      case 'utf-16be':
        return 'UTF-16BE';
      case 'csunicode':
      case 'iso-10646-ucs-2':
      case 'ucs-2':
      case 'unicode':
      case 'unicodefeff':
      case 'utf-16':
      case 'utf-16le':
        return 'UTF-16LE';
      case 'x-user-defined':
        return 'x-user-defined';
      default:
        return 'failure';
    }
  }
  rk.exports = { getEncoding: eP };
});
var lk = B((roA, Ek) => {
  'use strict';
  var {
      kState: en,
      kError: ZB,
      kResult: sk,
      kAborted: Vi,
      kLastProgressEventFired: KB,
    } = _B(),
    { ProgressEvent: tP } = tk(),
    { getEncoding: nk } = ok(),
    { DOMException: rP } = Kr(),
    { serializeAMimeType: oP, parseMIMEType: ik } = Tt(),
    { types: sP } = require('util'),
    { StringDecoder: ak } = require('string_decoder'),
    { btoa: ck } = require('buffer'),
    nP = { enumerable: !0, writable: !1, configurable: !1 };
  function iP(A, e, t, r) {
    if (A[en] === 'loading') throw new rP('Invalid state', 'InvalidStateError');
    (A[en] = 'loading'), (A[sk] = null), (A[ZB] = null);
    let s = e.stream().getReader(),
      n = [],
      i = s.read(),
      a = !0;
    (async () => {
      for (; !A[Vi]; )
        try {
          let { done: c, value: g } = await i;
          if (
            (a &&
              !A[Vi] &&
              queueMicrotask(() => {
                oo('loadstart', A);
              }),
            (a = !1),
            !c && sP.isUint8Array(g))
          )
            n.push(g),
              (A[KB] === void 0 || Date.now() - A[KB] >= 50) &&
                !A[Vi] &&
                ((A[KB] = Date.now()),
                queueMicrotask(() => {
                  oo('progress', A);
                })),
              (i = s.read());
          else if (c) {
            queueMicrotask(() => {
              A[en] = 'done';
              try {
                let E = aP(n, t, e.type, r);
                if (A[Vi]) return;
                (A[sk] = E), oo('load', A);
              } catch (E) {
                (A[ZB] = E), oo('error', A);
              }
              A[en] !== 'loading' && oo('loadend', A);
            });
            break;
          }
        } catch (c) {
          if (A[Vi]) return;
          queueMicrotask(() => {
            (A[en] = 'done'),
              (A[ZB] = c),
              oo('error', A),
              A[en] !== 'loading' && oo('loadend', A);
          });
          break;
        }
    })();
  }
  function oo(A, e) {
    let t = new tP(A, { bubbles: !1, cancelable: !1 });
    e.dispatchEvent(t);
  }
  function aP(A, e, t, r) {
    switch (e) {
      case 'DataURL': {
        let o = 'data:',
          s = ik(t || 'application/octet-stream');
        s !== 'failure' && (o += oP(s)), (o += ';base64,');
        let n = new ak('latin1');
        for (let i of A) o += ck(n.write(i));
        return (o += ck(n.end())), o;
      }
      case 'Text': {
        let o = 'failure';
        if ((r && (o = nk(r)), o === 'failure' && t)) {
          let s = ik(t);
          s !== 'failure' && (o = nk(s.parameters.get('charset')));
        }
        return o === 'failure' && (o = 'UTF-8'), cP(A, o);
      }
      case 'ArrayBuffer':
        return gk(A).buffer;
      case 'BinaryString': {
        let o = '',
          s = new ak('latin1');
        for (let n of A) o += s.write(n);
        return (o += s.end()), o;
      }
    }
  }
  function cP(A, e) {
    let t = gk(A),
      r = gP(t),
      o = 0;
    r !== null && ((e = r), (o = r === 'UTF-8' ? 3 : 2));
    let s = t.slice(o);
    return new TextDecoder(e).decode(s);
  }
  function gP(A) {
    let [e, t, r] = A;
    return e === 239 && t === 187 && r === 191
      ? 'UTF-8'
      : e === 254 && t === 255
        ? 'UTF-16BE'
        : e === 255 && t === 254
          ? 'UTF-16LE'
          : null;
  }
  function gk(A) {
    let e = A.reduce((r, o) => r + o.byteLength, 0),
      t = 0;
    return A.reduce(
      (r, o) => (r.set(o, t), (t += o.byteLength), r),
      new Uint8Array(e),
    );
  }
  Ek.exports = {
    staticPropertyDescriptors: nP,
    readOperation: iP,
    fireAProgressEvent: oo,
  };
});
var uk = B((ooA, Bk) => {
  'use strict';
  var {
      staticPropertyDescriptors: tn,
      readOperation: Fg,
      fireAProgressEvent: Qk,
    } = lk(),
    { kState: Jo, kError: Ck, kResult: Sg, kEvents: oA, kAborted: EP } = _B(),
    { webidl: CA } = Ie(),
    { kEnumerableProperty: Te } = eA(),
    Lt = class A extends EventTarget {
      constructor() {
        super(),
          (this[Jo] = 'empty'),
          (this[Sg] = null),
          (this[Ck] = null),
          (this[oA] = {
            loadend: null,
            error: null,
            abort: null,
            load: null,
            progress: null,
            loadstart: null,
          });
      }
      readAsArrayBuffer(e) {
        CA.brandCheck(this, A),
          CA.argumentLengthCheck(arguments, 1, {
            header: 'FileReader.readAsArrayBuffer',
          }),
          (e = CA.converters.Blob(e, { strict: !1 })),
          Fg(this, e, 'ArrayBuffer');
      }
      readAsBinaryString(e) {
        CA.brandCheck(this, A),
          CA.argumentLengthCheck(arguments, 1, {
            header: 'FileReader.readAsBinaryString',
          }),
          (e = CA.converters.Blob(e, { strict: !1 })),
          Fg(this, e, 'BinaryString');
      }
      readAsText(e, t = void 0) {
        CA.brandCheck(this, A),
          CA.argumentLengthCheck(arguments, 1, {
            header: 'FileReader.readAsText',
          }),
          (e = CA.converters.Blob(e, { strict: !1 })),
          t !== void 0 && (t = CA.converters.DOMString(t)),
          Fg(this, e, 'Text', t);
      }
      readAsDataURL(e) {
        CA.brandCheck(this, A),
          CA.argumentLengthCheck(arguments, 1, {
            header: 'FileReader.readAsDataURL',
          }),
          (e = CA.converters.Blob(e, { strict: !1 })),
          Fg(this, e, 'DataURL');
      }
      abort() {
        if (this[Jo] === 'empty' || this[Jo] === 'done') {
          this[Sg] = null;
          return;
        }
        this[Jo] === 'loading' && ((this[Jo] = 'done'), (this[Sg] = null)),
          (this[EP] = !0),
          Qk('abort', this),
          this[Jo] !== 'loading' && Qk('loadend', this);
      }
      get readyState() {
        switch ((CA.brandCheck(this, A), this[Jo])) {
          case 'empty':
            return this.EMPTY;
          case 'loading':
            return this.LOADING;
          case 'done':
            return this.DONE;
        }
      }
      get result() {
        return CA.brandCheck(this, A), this[Sg];
      }
      get error() {
        return CA.brandCheck(this, A), this[Ck];
      }
      get onloadend() {
        return CA.brandCheck(this, A), this[oA].loadend;
      }
      set onloadend(e) {
        CA.brandCheck(this, A),
          this[oA].loadend &&
            this.removeEventListener('loadend', this[oA].loadend),
          typeof e == 'function'
            ? ((this[oA].loadend = e), this.addEventListener('loadend', e))
            : (this[oA].loadend = null);
      }
      get onerror() {
        return CA.brandCheck(this, A), this[oA].error;
      }
      set onerror(e) {
        CA.brandCheck(this, A),
          this[oA].error && this.removeEventListener('error', this[oA].error),
          typeof e == 'function'
            ? ((this[oA].error = e), this.addEventListener('error', e))
            : (this[oA].error = null);
      }
      get onloadstart() {
        return CA.brandCheck(this, A), this[oA].loadstart;
      }
      set onloadstart(e) {
        CA.brandCheck(this, A),
          this[oA].loadstart &&
            this.removeEventListener('loadstart', this[oA].loadstart),
          typeof e == 'function'
            ? ((this[oA].loadstart = e), this.addEventListener('loadstart', e))
            : (this[oA].loadstart = null);
      }
      get onprogress() {
        return CA.brandCheck(this, A), this[oA].progress;
      }
      set onprogress(e) {
        CA.brandCheck(this, A),
          this[oA].progress &&
            this.removeEventListener('progress', this[oA].progress),
          typeof e == 'function'
            ? ((this[oA].progress = e), this.addEventListener('progress', e))
            : (this[oA].progress = null);
      }
      get onload() {
        return CA.brandCheck(this, A), this[oA].load;
      }
      set onload(e) {
        CA.brandCheck(this, A),
          this[oA].load && this.removeEventListener('load', this[oA].load),
          typeof e == 'function'
            ? ((this[oA].load = e), this.addEventListener('load', e))
            : (this[oA].load = null);
      }
      get onabort() {
        return CA.brandCheck(this, A), this[oA].abort;
      }
      set onabort(e) {
        CA.brandCheck(this, A),
          this[oA].abort && this.removeEventListener('abort', this[oA].abort),
          typeof e == 'function'
            ? ((this[oA].abort = e), this.addEventListener('abort', e))
            : (this[oA].abort = null);
      }
    };
  Lt.EMPTY = Lt.prototype.EMPTY = 0;
  Lt.LOADING = Lt.prototype.LOADING = 1;
  Lt.DONE = Lt.prototype.DONE = 2;
  Object.defineProperties(Lt.prototype, {
    EMPTY: tn,
    LOADING: tn,
    DONE: tn,
    readAsArrayBuffer: Te,
    readAsBinaryString: Te,
    readAsText: Te,
    readAsDataURL: Te,
    abort: Te,
    readyState: Te,
    result: Te,
    error: Te,
    onloadstart: Te,
    onprogress: Te,
    onload: Te,
    onabort: Te,
    onerror: Te,
    onloadend: Te,
    [Symbol.toStringTag]: {
      value: 'FileReader',
      writable: !1,
      enumerable: !1,
      configurable: !0,
    },
  });
  Object.defineProperties(Lt, { EMPTY: tn, LOADING: tn, DONE: tn });
  Bk.exports = { FileReader: Lt };
});
var Tg = B((soA, hk) => {
  'use strict';
  hk.exports = { kConstruct: dA().kConstruct };
});
var fk = B((noA, dk) => {
  'use strict';
  var lP = require('assert'),
    { URLSerializer: Ik } = Tt(),
    { isValidHeaderName: QP } = Et();
  function CP(A, e, t = !1) {
    let r = Ik(A, t),
      o = Ik(e, t);
    return r === o;
  }
  function BP(A) {
    lP(A !== null);
    let e = [];
    for (let t of A.split(',')) {
      if (((t = t.trim()), t.length)) {
        if (!QP(t)) continue;
      } else continue;
      e.push(t);
    }
    return e;
  }
  dk.exports = { urlEquals: CP, fieldValues: BP };
});
var kk = B((ioA, mk) => {
  'use strict';
  var { kConstruct: uP } = Tg(),
    { urlEquals: hP, fieldValues: XB } = fk(),
    { kEnumerableProperty: Ho, isDisturbed: IP } = eA(),
    { kHeadersList: pk } = dA(),
    { webidl: U } = Ie(),
    { Response: yk, cloneResponse: dP } = Bg(),
    { Request: rr } = Ji(),
    { kState: ye, kHeaders: Ng, kGuard: wk, kRealm: fP } = pr(),
    { fetching: pP } = Rg(),
    {
      urlIsHttpHttpsScheme: Ug,
      createDeferredPromise: rn,
      readAllBytes: wP,
    } = Et(),
    zB = require('assert'),
    { getGlobalDispatcher: yP } = _s(),
    Mg = class A {
      #A;
      constructor() {
        arguments[0] !== uP && U.illegalConstructor(), (this.#A = arguments[1]);
      }
      async match(e, t = {}) {
        U.brandCheck(this, A),
          U.argumentLengthCheck(arguments, 1, { header: 'Cache.match' }),
          (e = U.converters.RequestInfo(e)),
          (t = U.converters.CacheQueryOptions(t));
        let r = await this.matchAll(e, t);
        if (r.length !== 0) return r[0];
      }
      async matchAll(e = void 0, t = {}) {
        U.brandCheck(this, A),
          e !== void 0 && (e = U.converters.RequestInfo(e)),
          (t = U.converters.CacheQueryOptions(t));
        let r = null;
        if (e !== void 0)
          if (e instanceof rr) {
            if (((r = e[ye]), r.method !== 'GET' && !t.ignoreMethod)) return [];
          } else typeof e == 'string' && (r = new rr(e)[ye]);
        let o = [];
        if (e === void 0) for (let n of this.#A) o.push(n[1]);
        else {
          let n = this.#r(r, t);
          for (let i of n) o.push(i[1]);
        }
        let s = [];
        for (let n of o) {
          let i = new yk(n.body?.source ?? null),
            a = i[ye].body;
          (i[ye] = n),
            (i[ye].body = a),
            (i[Ng][pk] = n.headersList),
            (i[Ng][wk] = 'immutable'),
            s.push(i);
        }
        return Object.freeze(s);
      }
      async add(e) {
        U.brandCheck(this, A),
          U.argumentLengthCheck(arguments, 1, { header: 'Cache.add' }),
          (e = U.converters.RequestInfo(e));
        let t = [e];
        return await this.addAll(t);
      }
      async addAll(e) {
        U.brandCheck(this, A),
          U.argumentLengthCheck(arguments, 1, { header: 'Cache.addAll' }),
          (e = U.converters['sequence<RequestInfo>'](e));
        let t = [],
          r = [];
        for (let E of e) {
          if (typeof E == 'string') continue;
          let l = E[ye];
          if (!Ug(l.url) || l.method !== 'GET')
            throw U.errors.exception({
              header: 'Cache.addAll',
              message: 'Expected http/s scheme when method is not GET.',
            });
        }
        let o = [];
        for (let E of e) {
          let l = new rr(E)[ye];
          if (!Ug(l.url))
            throw U.errors.exception({
              header: 'Cache.addAll',
              message: 'Expected http/s scheme.',
            });
          (l.initiator = 'fetch'), (l.destination = 'subresource'), r.push(l);
          let C = rn();
          o.push(
            pP({
              request: l,
              dispatcher: yP(),
              processResponse(Q) {
                if (
                  Q.type === 'error' ||
                  Q.status === 206 ||
                  Q.status < 200 ||
                  Q.status > 299
                )
                  C.reject(
                    U.errors.exception({
                      header: 'Cache.addAll',
                      message:
                        'Received an invalid status code or the request failed.',
                    }),
                  );
                else if (Q.headersList.contains('vary')) {
                  let h = XB(Q.headersList.get('vary'));
                  for (let I of h)
                    if (I === '*') {
                      C.reject(
                        U.errors.exception({
                          header: 'Cache.addAll',
                          message: 'invalid vary field value',
                        }),
                      );
                      for (let u of o) u.abort();
                      return;
                    }
                }
              },
              processResponseEndOfBody(Q) {
                if (Q.aborted) {
                  C.reject(new DOMException('aborted', 'AbortError'));
                  return;
                }
                C.resolve(Q);
              },
            }),
          ),
            t.push(C.promise);
        }
        let n = await Promise.all(t),
          i = [],
          a = 0;
        for (let E of n) {
          let l = { type: 'put', request: r[a], response: E };
          i.push(l), a++;
        }
        let c = rn(),
          g = null;
        try {
          this.#e(i);
        } catch (E) {
          g = E;
        }
        return (
          queueMicrotask(() => {
            g === null ? c.resolve(void 0) : c.reject(g);
          }),
          c.promise
        );
      }
      async put(e, t) {
        U.brandCheck(this, A),
          U.argumentLengthCheck(arguments, 2, { header: 'Cache.put' }),
          (e = U.converters.RequestInfo(e)),
          (t = U.converters.Response(t));
        let r = null;
        if (
          (e instanceof rr ? (r = e[ye]) : (r = new rr(e)[ye]),
          !Ug(r.url) || r.method !== 'GET')
        )
          throw U.errors.exception({
            header: 'Cache.put',
            message: 'Expected an http/s scheme when method is not GET',
          });
        let o = t[ye];
        if (o.status === 206)
          throw U.errors.exception({
            header: 'Cache.put',
            message: 'Got 206 status',
          });
        if (o.headersList.contains('vary')) {
          let l = XB(o.headersList.get('vary'));
          for (let C of l)
            if (C === '*')
              throw U.errors.exception({
                header: 'Cache.put',
                message: 'Got * vary field value',
              });
        }
        if (o.body && (IP(o.body.stream) || o.body.stream.locked))
          throw U.errors.exception({
            header: 'Cache.put',
            message: 'Response body is locked or disturbed',
          });
        let s = dP(o),
          n = rn();
        if (o.body != null) {
          let C = o.body.stream.getReader();
          wP(C).then(n.resolve, n.reject);
        } else n.resolve(void 0);
        let i = [],
          a = { type: 'put', request: r, response: s };
        i.push(a);
        let c = await n.promise;
        s.body != null && (s.body.source = c);
        let g = rn(),
          E = null;
        try {
          this.#e(i);
        } catch (l) {
          E = l;
        }
        return (
          queueMicrotask(() => {
            E === null ? g.resolve() : g.reject(E);
          }),
          g.promise
        );
      }
      async delete(e, t = {}) {
        U.brandCheck(this, A),
          U.argumentLengthCheck(arguments, 1, { header: 'Cache.delete' }),
          (e = U.converters.RequestInfo(e)),
          (t = U.converters.CacheQueryOptions(t));
        let r = null;
        if (e instanceof rr) {
          if (((r = e[ye]), r.method !== 'GET' && !t.ignoreMethod)) return !1;
        } else zB(typeof e == 'string'), (r = new rr(e)[ye]);
        let o = [],
          s = { type: 'delete', request: r, options: t };
        o.push(s);
        let n = rn(),
          i = null,
          a;
        try {
          a = this.#e(o);
        } catch (c) {
          i = c;
        }
        return (
          queueMicrotask(() => {
            i === null ? n.resolve(!!a?.length) : n.reject(i);
          }),
          n.promise
        );
      }
      async keys(e = void 0, t = {}) {
        U.brandCheck(this, A),
          e !== void 0 && (e = U.converters.RequestInfo(e)),
          (t = U.converters.CacheQueryOptions(t));
        let r = null;
        if (e !== void 0)
          if (e instanceof rr) {
            if (((r = e[ye]), r.method !== 'GET' && !t.ignoreMethod)) return [];
          } else typeof e == 'string' && (r = new rr(e)[ye]);
        let o = rn(),
          s = [];
        if (e === void 0) for (let n of this.#A) s.push(n[0]);
        else {
          let n = this.#r(r, t);
          for (let i of n) s.push(i[0]);
        }
        return (
          queueMicrotask(() => {
            let n = [];
            for (let i of s) {
              let a = new rr('https://a');
              (a[ye] = i),
                (a[Ng][pk] = i.headersList),
                (a[Ng][wk] = 'immutable'),
                (a[fP] = i.client),
                n.push(a);
            }
            o.resolve(Object.freeze(n));
          }),
          o.promise
        );
      }
      #e(e) {
        let t = this.#A,
          r = [...t],
          o = [],
          s = [];
        try {
          for (let n of e) {
            if (n.type !== 'delete' && n.type !== 'put')
              throw U.errors.exception({
                header: 'Cache.#batchCacheOperations',
                message: 'operation type does not match "delete" or "put"',
              });
            if (n.type === 'delete' && n.response != null)
              throw U.errors.exception({
                header: 'Cache.#batchCacheOperations',
                message:
                  'delete operation should not have an associated response',
              });
            if (this.#r(n.request, n.options, o).length)
              throw new DOMException('???', 'InvalidStateError');
            let i;
            if (n.type === 'delete') {
              if (((i = this.#r(n.request, n.options)), i.length === 0))
                return [];
              for (let a of i) {
                let c = t.indexOf(a);
                zB(c !== -1), t.splice(c, 1);
              }
            } else if (n.type === 'put') {
              if (n.response == null)
                throw U.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'put operation should have an associated response',
                });
              let a = n.request;
              if (!Ug(a.url))
                throw U.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'expected http or https scheme',
                });
              if (a.method !== 'GET')
                throw U.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'not get method',
                });
              if (n.options != null)
                throw U.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'options must not be defined',
                });
              i = this.#r(n.request);
              for (let c of i) {
                let g = t.indexOf(c);
                zB(g !== -1), t.splice(g, 1);
              }
              t.push([n.request, n.response]), o.push([n.request, n.response]);
            }
            s.push([n.request, n.response]);
          }
          return s;
        } catch (n) {
          throw ((this.#A.length = 0), (this.#A = r), n);
        }
      }
      #r(e, t, r) {
        let o = [],
          s = r ?? this.#A;
        for (let n of s) {
          let [i, a] = n;
          this.#t(e, i, a, t) && o.push(n);
        }
        return o;
      }
      #t(e, t, r = null, o) {
        let s = new URL(e.url),
          n = new URL(t.url);
        if (
          (o?.ignoreSearch && ((n.search = ''), (s.search = '')), !hP(s, n, !0))
        )
          return !1;
        if (r == null || o?.ignoreVary || !r.headersList.contains('vary'))
          return !0;
        let i = XB(r.headersList.get('vary'));
        for (let a of i) {
          if (a === '*') return !1;
          let c = t.headersList.get(a),
            g = e.headersList.get(a);
          if (c !== g) return !1;
        }
        return !0;
      }
    };
  Object.defineProperties(Mg.prototype, {
    [Symbol.toStringTag]: { value: 'Cache', configurable: !0 },
    match: Ho,
    matchAll: Ho,
    add: Ho,
    addAll: Ho,
    put: Ho,
    delete: Ho,
    keys: Ho,
  });
  var Dk = [
    { key: 'ignoreSearch', converter: U.converters.boolean, defaultValue: !1 },
    { key: 'ignoreMethod', converter: U.converters.boolean, defaultValue: !1 },
    { key: 'ignoreVary', converter: U.converters.boolean, defaultValue: !1 },
  ];
  U.converters.CacheQueryOptions = U.dictionaryConverter(Dk);
  U.converters.MultiCacheQueryOptions = U.dictionaryConverter([
    ...Dk,
    { key: 'cacheName', converter: U.converters.DOMString },
  ]);
  U.converters.Response = U.interfaceConverter(yk);
  U.converters['sequence<RequestInfo>'] = U.sequenceConverter(
    U.converters.RequestInfo,
  );
  mk.exports = { Cache: Mg };
});
var bk = B((aoA, Rk) => {
  'use strict';
  var { kConstruct: qi } = Tg(),
    { Cache: Lg } = kk(),
    { webidl: De } = Ie(),
    { kEnumerableProperty: Pi } = eA(),
    Gg = class A {
      #A = new Map();
      constructor() {
        arguments[0] !== qi && De.illegalConstructor();
      }
      async match(e, t = {}) {
        if (
          (De.brandCheck(this, A),
          De.argumentLengthCheck(arguments, 1, {
            header: 'CacheStorage.match',
          }),
          (e = De.converters.RequestInfo(e)),
          (t = De.converters.MultiCacheQueryOptions(t)),
          t.cacheName != null)
        ) {
          if (this.#A.has(t.cacheName)) {
            let r = this.#A.get(t.cacheName);
            return await new Lg(qi, r).match(e, t);
          }
        } else
          for (let r of this.#A.values()) {
            let s = await new Lg(qi, r).match(e, t);
            if (s !== void 0) return s;
          }
      }
      async has(e) {
        return (
          De.brandCheck(this, A),
          De.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.has' }),
          (e = De.converters.DOMString(e)),
          this.#A.has(e)
        );
      }
      async open(e) {
        if (
          (De.brandCheck(this, A),
          De.argumentLengthCheck(arguments, 1, { header: 'CacheStorage.open' }),
          (e = De.converters.DOMString(e)),
          this.#A.has(e))
        ) {
          let r = this.#A.get(e);
          return new Lg(qi, r);
        }
        let t = [];
        return this.#A.set(e, t), new Lg(qi, t);
      }
      async delete(e) {
        return (
          De.brandCheck(this, A),
          De.argumentLengthCheck(arguments, 1, {
            header: 'CacheStorage.delete',
          }),
          (e = De.converters.DOMString(e)),
          this.#A.delete(e)
        );
      }
      async keys() {
        return De.brandCheck(this, A), [...this.#A.keys()];
      }
    };
  Object.defineProperties(Gg.prototype, {
    [Symbol.toStringTag]: { value: 'CacheStorage', configurable: !0 },
    match: Pi,
    has: Pi,
    open: Pi,
    delete: Pi,
    keys: Pi,
  });
  Rk.exports = { CacheStorage: Gg };
});
var Sk = B((coA, Fk) => {
  'use strict';
  Fk.exports = { maxAttributeValueSize: 1024, maxNameValuePairSize: 4096 };
});
var $B = B((goA, Uk) => {
  'use strict';
  var Tk = require('assert'),
    { kHeadersList: Nk } = dA();
  function DP(A) {
    if (A.length === 0) return !1;
    for (let e of A) {
      let t = e.charCodeAt(0);
      if (t >= 0 || t <= 8 || t >= 10 || t <= 31 || t === 127) return !1;
    }
  }
  function mP(A) {
    for (let e of A) {
      let t = e.charCodeAt(0);
      if (
        t <= 32 ||
        t > 127 ||
        e === '(' ||
        e === ')' ||
        e === '>' ||
        e === '<' ||
        e === '@' ||
        e === ',' ||
        e === ';' ||
        e === ':' ||
        e === '\\' ||
        e === '"' ||
        e === '/' ||
        e === '[' ||
        e === ']' ||
        e === '?' ||
        e === '=' ||
        e === '{' ||
        e === '}'
      )
        throw new Error('Invalid cookie name');
    }
  }
  function kP(A) {
    for (let e of A) {
      let t = e.charCodeAt(0);
      if (t < 33 || t === 34 || t === 44 || t === 59 || t === 92 || t > 126)
        throw new Error('Invalid header value');
    }
  }
  function RP(A) {
    for (let e of A)
      if (e.charCodeAt(0) < 33 || e === ';')
        throw new Error('Invalid cookie path');
  }
  function bP(A) {
    if (A.startsWith('-') || A.endsWith('.') || A.endsWith('-'))
      throw new Error('Invalid cookie domain');
  }
  function FP(A) {
    typeof A == 'number' && (A = new Date(A));
    let e = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      t = [
        'Jan',
        'Feb',
        'Mar',
        'Apr',
        'May',
        'Jun',
        'Jul',
        'Aug',
        'Sep',
        'Oct',
        'Nov',
        'Dec',
      ],
      r = e[A.getUTCDay()],
      o = A.getUTCDate().toString().padStart(2, '0'),
      s = t[A.getUTCMonth()],
      n = A.getUTCFullYear(),
      i = A.getUTCHours().toString().padStart(2, '0'),
      a = A.getUTCMinutes().toString().padStart(2, '0'),
      c = A.getUTCSeconds().toString().padStart(2, '0');
    return `${r}, ${o} ${s} ${n} ${i}:${a}:${c} GMT`;
  }
  function SP(A) {
    if (A < 0) throw new Error('Invalid cookie max-age');
  }
  function TP(A) {
    if (A.name.length === 0) return null;
    mP(A.name), kP(A.value);
    let e = [`${A.name}=${A.value}`];
    A.name.startsWith('__Secure-') && (A.secure = !0),
      A.name.startsWith('__Host-') &&
        ((A.secure = !0), (A.domain = null), (A.path = '/')),
      A.secure && e.push('Secure'),
      A.httpOnly && e.push('HttpOnly'),
      typeof A.maxAge == 'number' &&
        (SP(A.maxAge), e.push(`Max-Age=${A.maxAge}`)),
      A.domain && (bP(A.domain), e.push(`Domain=${A.domain}`)),
      A.path && (RP(A.path), e.push(`Path=${A.path}`)),
      A.expires &&
        A.expires.toString() !== 'Invalid Date' &&
        e.push(`Expires=${FP(A.expires)}`),
      A.sameSite && e.push(`SameSite=${A.sameSite}`);
    for (let t of A.unparsed) {
      if (!t.includes('=')) throw new Error('Invalid unparsed');
      let [r, ...o] = t.split('=');
      e.push(`${r.trim()}=${o.join('=')}`);
    }
    return e.join('; ');
  }
  var xg;
  function NP(A) {
    if (A[Nk]) return A[Nk];
    xg ||
      ((xg = Object.getOwnPropertySymbols(A).find(
        (t) => t.description === 'headers list',
      )),
      Tk(xg, 'Headers cannot be parsed'));
    let e = A[xg];
    return Tk(e), e;
  }
  Uk.exports = { isCTLExcludingHtab: DP, stringify: TP, getHeadersList: NP };
});
var Lk = B((EoA, Mk) => {
  'use strict';
  var { maxNameValuePairSize: UP, maxAttributeValueSize: MP } = Sk(),
    { isCTLExcludingHtab: LP } = $B(),
    { collectASequenceOfCodePointsFast: vg } = Tt(),
    GP = require('assert');
  function xP(A) {
    if (LP(A)) return null;
    let e = '',
      t = '',
      r = '',
      o = '';
    if (A.includes(';')) {
      let s = { position: 0 };
      (e = vg(';', A, s)), (t = A.slice(s.position));
    } else e = A;
    if (!e.includes('=')) o = e;
    else {
      let s = { position: 0 };
      (r = vg('=', e, s)), (o = e.slice(s.position + 1));
    }
    return (
      (r = r.trim()),
      (o = o.trim()),
      r.length + o.length > UP ? null : { name: r, value: o, ...on(t) }
    );
  }
  function on(A, e = {}) {
    if (A.length === 0) return e;
    GP(A[0] === ';'), (A = A.slice(1));
    let t = '';
    A.includes(';')
      ? ((t = vg(';', A, { position: 0 })), (A = A.slice(t.length)))
      : ((t = A), (A = ''));
    let r = '',
      o = '';
    if (t.includes('=')) {
      let n = { position: 0 };
      (r = vg('=', t, n)), (o = t.slice(n.position + 1));
    } else r = t;
    if (((r = r.trim()), (o = o.trim()), o.length > MP)) return on(A, e);
    let s = r.toLowerCase();
    if (s === 'expires') {
      let n = new Date(o);
      e.expires = n;
    } else if (s === 'max-age') {
      let n = o.charCodeAt(0);
      if (((n < 48 || n > 57) && o[0] !== '-') || !/^\d+$/.test(o))
        return on(A, e);
      let i = Number(o);
      e.maxAge = i;
    } else if (s === 'domain') {
      let n = o;
      n[0] === '.' && (n = n.slice(1)), (n = n.toLowerCase()), (e.domain = n);
    } else if (s === 'path') {
      let n = '';
      o.length === 0 || o[0] !== '/' ? (n = '/') : (n = o), (e.path = n);
    } else if (s === 'secure') e.secure = !0;
    else if (s === 'httponly') e.httpOnly = !0;
    else if (s === 'samesite') {
      let n = 'Default',
        i = o.toLowerCase();
      i.includes('none') && (n = 'None'),
        i.includes('strict') && (n = 'Strict'),
        i.includes('lax') && (n = 'Lax'),
        (e.sameSite = n);
    } else (e.unparsed ??= []), e.unparsed.push(`${r}=${o}`);
    return on(A, e);
  }
  Mk.exports = { parseSetCookie: xP, parseUnparsedAttributes: on };
});
var Ok = B((loA, vk) => {
  'use strict';
  var { parseSetCookie: vP } = Lk(),
    { stringify: Gk, getHeadersList: OP } = $B(),
    { webidl: z } = Ie(),
    { Headers: Og } = Oo();
  function YP(A) {
    z.argumentLengthCheck(arguments, 1, { header: 'getCookies' }),
      z.brandCheck(A, Og, { strict: !1 });
    let e = A.get('cookie'),
      t = {};
    if (!e) return t;
    for (let r of e.split(';')) {
      let [o, ...s] = r.split('=');
      t[o.trim()] = s.join('=');
    }
    return t;
  }
  function JP(A, e, t) {
    z.argumentLengthCheck(arguments, 2, { header: 'deleteCookie' }),
      z.brandCheck(A, Og, { strict: !1 }),
      (e = z.converters.DOMString(e)),
      (t = z.converters.DeleteCookieAttributes(t)),
      xk(A, { name: e, value: '', expires: new Date(0), ...t });
  }
  function HP(A) {
    z.argumentLengthCheck(arguments, 1, { header: 'getSetCookies' }),
      z.brandCheck(A, Og, { strict: !1 });
    let e = OP(A).cookies;
    return e ? e.map((t) => vP(Array.isArray(t) ? t[1] : t)) : [];
  }
  function xk(A, e) {
    z.argumentLengthCheck(arguments, 2, { header: 'setCookie' }),
      z.brandCheck(A, Og, { strict: !1 }),
      (e = z.converters.Cookie(e)),
      Gk(e) && A.append('Set-Cookie', Gk(e));
  }
  z.converters.DeleteCookieAttributes = z.dictionaryConverter([
    {
      converter: z.nullableConverter(z.converters.DOMString),
      key: 'path',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters.DOMString),
      key: 'domain',
      defaultValue: null,
    },
  ]);
  z.converters.Cookie = z.dictionaryConverter([
    { converter: z.converters.DOMString, key: 'name' },
    { converter: z.converters.DOMString, key: 'value' },
    {
      converter: z.nullableConverter((A) =>
        typeof A == 'number'
          ? z.converters['unsigned long long'](A)
          : new Date(A),
      ),
      key: 'expires',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters['long long']),
      key: 'maxAge',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters.DOMString),
      key: 'domain',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters.DOMString),
      key: 'path',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters.boolean),
      key: 'secure',
      defaultValue: null,
    },
    {
      converter: z.nullableConverter(z.converters.boolean),
      key: 'httpOnly',
      defaultValue: null,
    },
    {
      converter: z.converters.USVString,
      key: 'sameSite',
      allowedValues: ['Strict', 'Lax', 'None'],
    },
    {
      converter: z.sequenceConverter(z.converters.DOMString),
      key: 'unparsed',
      defaultValue: [],
    },
  ]);
  vk.exports = {
    getCookies: YP,
    deleteCookie: JP,
    getSetCookies: HP,
    setCookie: xk,
  };
});
var sn = B((QoA, Yk) => {
  'use strict';
  var VP = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
    qP = { enumerable: !0, writable: !1, configurable: !1 },
    PP = { CONNECTING: 0, OPEN: 1, CLOSING: 2, CLOSED: 3 },
    WP = { CONTINUATION: 0, TEXT: 1, BINARY: 2, CLOSE: 8, PING: 9, PONG: 10 },
    _P = 2 ** 16 - 1,
    jP = { INFO: 0, PAYLOADLENGTH_16: 2, PAYLOADLENGTH_64: 3, READ_DATA: 4 },
    ZP = Buffer.allocUnsafe(0);
  Yk.exports = {
    uid: VP,
    staticPropertyDescriptors: qP,
    states: PP,
    opcodes: WP,
    maxUnsigned16Bit: _P,
    parserStates: jP,
    emptyBuffer: ZP,
  };
});
var Wi = B((CoA, Jk) => {
  'use strict';
  Jk.exports = {
    kWebSocketURL: Symbol('url'),
    kReadyState: Symbol('ready state'),
    kController: Symbol('controller'),
    kResponse: Symbol('response'),
    kBinaryType: Symbol('binary type'),
    kSentClose: Symbol('sent close'),
    kReceivedClose: Symbol('received close'),
    kByteParser: Symbol('byte parser'),
  };
});
var eu = B((BoA, Hk) => {
  'use strict';
  var { webidl: M } = Ie(),
    { kEnumerableProperty: Ne } = eA(),
    { MessagePort: KP } = require('worker_threads'),
    Yg = class A extends Event {
      #A;
      constructor(e, t = {}) {
        M.argumentLengthCheck(arguments, 1, {
          header: 'MessageEvent constructor',
        }),
          (e = M.converters.DOMString(e)),
          (t = M.converters.MessageEventInit(t)),
          super(e, t),
          (this.#A = t);
      }
      get data() {
        return M.brandCheck(this, A), this.#A.data;
      }
      get origin() {
        return M.brandCheck(this, A), this.#A.origin;
      }
      get lastEventId() {
        return M.brandCheck(this, A), this.#A.lastEventId;
      }
      get source() {
        return M.brandCheck(this, A), this.#A.source;
      }
      get ports() {
        return (
          M.brandCheck(this, A),
          Object.isFrozen(this.#A.ports) || Object.freeze(this.#A.ports),
          this.#A.ports
        );
      }
      initMessageEvent(
        e,
        t = !1,
        r = !1,
        o = null,
        s = '',
        n = '',
        i = null,
        a = [],
      ) {
        return (
          M.brandCheck(this, A),
          M.argumentLengthCheck(arguments, 1, {
            header: 'MessageEvent.initMessageEvent',
          }),
          new A(e, {
            bubbles: t,
            cancelable: r,
            data: o,
            origin: s,
            lastEventId: n,
            source: i,
            ports: a,
          })
        );
      }
    },
    Jg = class A extends Event {
      #A;
      constructor(e, t = {}) {
        M.argumentLengthCheck(arguments, 1, {
          header: 'CloseEvent constructor',
        }),
          (e = M.converters.DOMString(e)),
          (t = M.converters.CloseEventInit(t)),
          super(e, t),
          (this.#A = t);
      }
      get wasClean() {
        return M.brandCheck(this, A), this.#A.wasClean;
      }
      get code() {
        return M.brandCheck(this, A), this.#A.code;
      }
      get reason() {
        return M.brandCheck(this, A), this.#A.reason;
      }
    },
    Hg = class A extends Event {
      #A;
      constructor(e, t) {
        M.argumentLengthCheck(arguments, 1, {
          header: 'ErrorEvent constructor',
        }),
          super(e, t),
          (e = M.converters.DOMString(e)),
          (t = M.converters.ErrorEventInit(t ?? {})),
          (this.#A = t);
      }
      get message() {
        return M.brandCheck(this, A), this.#A.message;
      }
      get filename() {
        return M.brandCheck(this, A), this.#A.filename;
      }
      get lineno() {
        return M.brandCheck(this, A), this.#A.lineno;
      }
      get colno() {
        return M.brandCheck(this, A), this.#A.colno;
      }
      get error() {
        return M.brandCheck(this, A), this.#A.error;
      }
    };
  Object.defineProperties(Yg.prototype, {
    [Symbol.toStringTag]: { value: 'MessageEvent', configurable: !0 },
    data: Ne,
    origin: Ne,
    lastEventId: Ne,
    source: Ne,
    ports: Ne,
    initMessageEvent: Ne,
  });
  Object.defineProperties(Jg.prototype, {
    [Symbol.toStringTag]: { value: 'CloseEvent', configurable: !0 },
    reason: Ne,
    code: Ne,
    wasClean: Ne,
  });
  Object.defineProperties(Hg.prototype, {
    [Symbol.toStringTag]: { value: 'ErrorEvent', configurable: !0 },
    message: Ne,
    filename: Ne,
    lineno: Ne,
    colno: Ne,
    error: Ne,
  });
  M.converters.MessagePort = M.interfaceConverter(KP);
  M.converters['sequence<MessagePort>'] = M.sequenceConverter(
    M.converters.MessagePort,
  );
  var Au = [
    { key: 'bubbles', converter: M.converters.boolean, defaultValue: !1 },
    { key: 'cancelable', converter: M.converters.boolean, defaultValue: !1 },
    { key: 'composed', converter: M.converters.boolean, defaultValue: !1 },
  ];
  M.converters.MessageEventInit = M.dictionaryConverter([
    ...Au,
    { key: 'data', converter: M.converters.any, defaultValue: null },
    { key: 'origin', converter: M.converters.USVString, defaultValue: '' },
    { key: 'lastEventId', converter: M.converters.DOMString, defaultValue: '' },
    {
      key: 'source',
      converter: M.nullableConverter(M.converters.MessagePort),
      defaultValue: null,
    },
    {
      key: 'ports',
      converter: M.converters['sequence<MessagePort>'],
      get defaultValue() {
        return [];
      },
    },
  ]);
  M.converters.CloseEventInit = M.dictionaryConverter([
    ...Au,
    { key: 'wasClean', converter: M.converters.boolean, defaultValue: !1 },
    { key: 'code', converter: M.converters['unsigned short'], defaultValue: 0 },
    { key: 'reason', converter: M.converters.USVString, defaultValue: '' },
  ]);
  M.converters.ErrorEventInit = M.dictionaryConverter([
    ...Au,
    { key: 'message', converter: M.converters.DOMString, defaultValue: '' },
    { key: 'filename', converter: M.converters.USVString, defaultValue: '' },
    {
      key: 'lineno',
      converter: M.converters['unsigned long'],
      defaultValue: 0,
    },
    { key: 'colno', converter: M.converters['unsigned long'], defaultValue: 0 },
    { key: 'error', converter: M.converters.any },
  ]);
  Hk.exports = { MessageEvent: Yg, CloseEvent: Jg, ErrorEvent: Hg };
});
var Pg = B((uoA, Pk) => {
  'use strict';
  var {
      kReadyState: Vg,
      kController: XP,
      kResponse: zP,
      kBinaryType: $P,
      kWebSocketURL: AW,
    } = Wi(),
    { states: qg, opcodes: Vk } = sn(),
    { MessageEvent: eW, ErrorEvent: tW } = eu();
  function rW(A) {
    return A[Vg] === qg.OPEN;
  }
  function oW(A) {
    return A[Vg] === qg.CLOSING;
  }
  function sW(A) {
    return A[Vg] === qg.CLOSED;
  }
  function tu(A, e, t = Event, r) {
    let o = new t(A, r);
    e.dispatchEvent(o);
  }
  function nW(A, e, t) {
    if (A[Vg] !== qg.OPEN) return;
    let r;
    if (e === Vk.TEXT)
      try {
        r = new TextDecoder('utf-8', { fatal: !0 }).decode(t);
      } catch {
        qk(A, 'Received invalid UTF-8 in text frame.');
        return;
      }
    else
      e === Vk.BINARY &&
        (A[$P] === 'blob'
          ? (r = new Blob([t]))
          : (r = new Uint8Array(t).buffer));
    tu('message', A, eW, { origin: A[AW].origin, data: r });
  }
  function iW(A) {
    if (A.length === 0) return !1;
    for (let e of A) {
      let t = e.charCodeAt(0);
      if (
        t < 33 ||
        t > 126 ||
        e === '(' ||
        e === ')' ||
        e === '<' ||
        e === '>' ||
        e === '@' ||
        e === ',' ||
        e === ';' ||
        e === ':' ||
        e === '\\' ||
        e === '"' ||
        e === '/' ||
        e === '[' ||
        e === ']' ||
        e === '?' ||
        e === '=' ||
        e === '{' ||
        e === '}' ||
        t === 32 ||
        t === 9
      )
        return !1;
    }
    return !0;
  }
  function aW(A) {
    return A >= 1e3 && A < 1015
      ? A !== 1004 && A !== 1005 && A !== 1006
      : A >= 3e3 && A <= 4999;
  }
  function qk(A, e) {
    let { [XP]: t, [zP]: r } = A;
    t.abort(),
      r?.socket && !r.socket.destroyed && r.socket.destroy(),
      e && tu('error', A, tW, { error: new Error(e) });
  }
  Pk.exports = {
    isEstablished: rW,
    isClosing: oW,
    isClosed: sW,
    fireEvent: tu,
    isValidSubprotocol: iW,
    isValidStatusCode: aW,
    failWebsocketConnection: qk,
    websocketMessageReceived: nW,
  };
});
var Xk = B((hoA, Kk) => {
  'use strict';
  var ou = require('diagnostics_channel'),
    { uid: cW, states: _k } = sn(),
    {
      kReadyState: jk,
      kSentClose: Wk,
      kByteParser: Zk,
      kReceivedClose: gW,
    } = Wi(),
    { fireEvent: EW, failWebsocketConnection: Vo } = Pg(),
    { CloseEvent: lW } = eu(),
    { makeRequest: QW } = Ji(),
    { fetching: CW } = Rg(),
    { Headers: BW } = Oo(),
    { getGlobalDispatcher: uW } = _s(),
    { kHeadersList: hW } = dA(),
    Sr = {};
  Sr.open = ou.channel('undici:websocket:open');
  Sr.close = ou.channel('undici:websocket:close');
  Sr.socketError = ou.channel('undici:websocket:socket_error');
  var ru;
  try {
    ru = require('crypto');
  } catch {}
  function IW(A, e, t, r, o) {
    let s = A;
    s.protocol = A.protocol === 'ws:' ? 'http:' : 'https:';
    let n = QW({
      urlList: [s],
      serviceWorkers: 'none',
      referrer: 'no-referrer',
      mode: 'websocket',
      credentials: 'include',
      cache: 'no-store',
      redirect: 'error',
    });
    if (o.headers) {
      let g = new BW(o.headers)[hW];
      n.headersList = g;
    }
    let i = ru.randomBytes(16).toString('base64');
    n.headersList.append('sec-websocket-key', i),
      n.headersList.append('sec-websocket-version', '13');
    for (let g of e) n.headersList.append('sec-websocket-protocol', g);
    let a = '';
    return CW({
      request: n,
      useParallelQueue: !0,
      dispatcher: o.dispatcher ?? uW(),
      processResponse(g) {
        if (g.type === 'error' || g.status !== 101) {
          Vo(t, 'Received network error or non-101 status code.');
          return;
        }
        if (e.length !== 0 && !g.headersList.get('Sec-WebSocket-Protocol')) {
          Vo(t, 'Server did not respond with sent protocols.');
          return;
        }
        if (g.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {
          Vo(t, 'Server did not set Upgrade header to "websocket".');
          return;
        }
        if (g.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {
          Vo(t, 'Server did not set Connection header to "upgrade".');
          return;
        }
        let E = g.headersList.get('Sec-WebSocket-Accept'),
          l = ru
            .createHash('sha1')
            .update(i + cW)
            .digest('base64');
        if (E !== l) {
          Vo(t, 'Incorrect hash received in Sec-WebSocket-Accept header.');
          return;
        }
        let C = g.headersList.get('Sec-WebSocket-Extensions');
        if (C !== null && C !== a) {
          Vo(t, 'Received different permessage-deflate than the one set.');
          return;
        }
        let Q = g.headersList.get('Sec-WebSocket-Protocol');
        if (Q !== null && Q !== n.headersList.get('Sec-WebSocket-Protocol')) {
          Vo(t, 'Protocol was not set in the opening handshake.');
          return;
        }
        g.socket.on('data', dW),
          g.socket.on('close', fW),
          g.socket.on('error', pW),
          Sr.open.hasSubscribers &&
            Sr.open.publish({
              address: g.socket.address(),
              protocol: Q,
              extensions: C,
            }),
          r(g);
      },
    });
  }
  function dW(A) {
    this.ws[Zk].write(A) || this.pause();
  }
  function fW() {
    let { ws: A } = this,
      e = A[Wk] && A[gW],
      t = 1005,
      r = '',
      o = A[Zk].closingInfo;
    o ? ((t = o.code ?? 1005), (r = o.reason)) : A[Wk] || (t = 1006),
      (A[jk] = _k.CLOSED),
      EW('close', A, lW, { wasClean: e, code: t, reason: r }),
      Sr.close.hasSubscribers &&
        Sr.close.publish({ websocket: A, code: t, reason: r });
  }
  function pW(A) {
    let { ws: e } = this;
    (e[jk] = _k.CLOSING),
      Sr.socketError.hasSubscribers && Sr.socketError.publish(A),
      this.destroy();
  }
  Kk.exports = { establishWebSocketConnection: IW };
});
var nu = B((IoA, $k) => {
  'use strict';
  var { maxUnsigned16Bit: wW } = sn(),
    zk;
  try {
    zk = require('crypto');
  } catch {}
  var su = class {
    constructor(e) {
      (this.frameData = e), (this.maskKey = zk.randomBytes(4));
    }
    createFrame(e) {
      let t = this.frameData?.byteLength ?? 0,
        r = t,
        o = 6;
      t > wW ? ((o += 8), (r = 127)) : t > 125 && ((o += 2), (r = 126));
      let s = Buffer.allocUnsafe(t + o);
      (s[0] = s[1] = 0), (s[0] |= 128), (s[0] = (s[0] & 240) + e);
      (s[o - 4] = this.maskKey[0]),
        (s[o - 3] = this.maskKey[1]),
        (s[o - 2] = this.maskKey[2]),
        (s[o - 1] = this.maskKey[3]),
        (s[1] = r),
        r === 126
          ? s.writeUInt16BE(t, 2)
          : r === 127 && ((s[2] = s[3] = 0), s.writeUIntBE(t, 4, 6)),
        (s[1] |= 128);
      for (let n = 0; n < t; n++)
        s[o + n] = this.frameData[n] ^ this.maskKey[n % 4];
      return s;
    }
  };
  $k.exports = { WebsocketFrameSend: su };
});
var iR = B((doA, nR) => {
  'use strict';
  var { Writable: yW } = require('stream'),
    sR = require('diagnostics_channel'),
    { parserStates: Ct, opcodes: Bt, states: DW, emptyBuffer: mW } = sn(),
    {
      kReadyState: kW,
      kSentClose: AR,
      kResponse: eR,
      kReceivedClose: tR,
    } = Wi(),
    {
      isValidStatusCode: rR,
      failWebsocketConnection: _i,
      websocketMessageReceived: RW,
    } = Pg(),
    { WebsocketFrameSend: oR } = nu(),
    nn = {};
  nn.ping = sR.channel('undici:websocket:ping');
  nn.pong = sR.channel('undici:websocket:pong');
  var iu = class extends yW {
    #A = [];
    #e = 0;
    #r = Ct.INFO;
    #t = {};
    #o = [];
    constructor(e) {
      super(), (this.ws = e);
    }
    _write(e, t, r) {
      this.#A.push(e), (this.#e += e.length), this.run(r);
    }
    run(e) {
      for (;;) {
        if (this.#r === Ct.INFO) {
          if (this.#e < 2) return e();
          let t = this.consume(2);
          if (
            ((this.#t.fin = (t[0] & 128) !== 0),
            (this.#t.opcode = t[0] & 15),
            (this.#t.originalOpcode ??= this.#t.opcode),
            (this.#t.fragmented =
              !this.#t.fin && this.#t.opcode !== Bt.CONTINUATION),
            this.#t.fragmented &&
              this.#t.opcode !== Bt.BINARY &&
              this.#t.opcode !== Bt.TEXT)
          ) {
            _i(this.ws, 'Invalid frame type was fragmented.');
            return;
          }
          let r = t[1] & 127;
          if (
            (r <= 125
              ? ((this.#t.payloadLength = r), (this.#r = Ct.READ_DATA))
              : r === 126
                ? (this.#r = Ct.PAYLOADLENGTH_16)
                : r === 127 && (this.#r = Ct.PAYLOADLENGTH_64),
            this.#t.fragmented && r > 125)
          ) {
            _i(this.ws, 'Fragmented frame exceeded 125 bytes.');
            return;
          } else if (
            (this.#t.opcode === Bt.PING ||
              this.#t.opcode === Bt.PONG ||
              this.#t.opcode === Bt.CLOSE) &&
            r > 125
          ) {
            _i(this.ws, 'Payload length for control frame exceeded 125 bytes.');
            return;
          } else if (this.#t.opcode === Bt.CLOSE) {
            if (r === 1) {
              _i(this.ws, 'Received close frame with a 1-byte body.');
              return;
            }
            let o = this.consume(r);
            if (
              ((this.#t.closeInfo = this.parseCloseBody(!1, o)), !this.ws[AR])
            ) {
              let s = Buffer.allocUnsafe(2);
              s.writeUInt16BE(this.#t.closeInfo.code, 0);
              let n = new oR(s);
              this.ws[eR].socket.write(n.createFrame(Bt.CLOSE), (i) => {
                i || (this.ws[AR] = !0);
              });
            }
            (this.ws[kW] = DW.CLOSING), (this.ws[tR] = !0), this.end();
            return;
          } else if (this.#t.opcode === Bt.PING) {
            let o = this.consume(r);
            if (!this.ws[tR]) {
              let s = new oR(o);
              this.ws[eR].socket.write(s.createFrame(Bt.PONG)),
                nn.ping.hasSubscribers && nn.ping.publish({ payload: o });
            }
            if (((this.#r = Ct.INFO), this.#e > 0)) continue;
            e();
            return;
          } else if (this.#t.opcode === Bt.PONG) {
            let o = this.consume(r);
            if (
              (nn.pong.hasSubscribers && nn.pong.publish({ payload: o }),
              this.#e > 0)
            )
              continue;
            e();
            return;
          }
        } else if (this.#r === Ct.PAYLOADLENGTH_16) {
          if (this.#e < 2) return e();
          let t = this.consume(2);
          (this.#t.payloadLength = t.readUInt16BE(0)), (this.#r = Ct.READ_DATA);
        } else if (this.#r === Ct.PAYLOADLENGTH_64) {
          if (this.#e < 8) return e();
          let t = this.consume(8),
            r = t.readUInt32BE(0);
          if (r > 2 ** 31 - 1) {
            _i(this.ws, 'Received payload length > 2^31 bytes.');
            return;
          }
          let o = t.readUInt32BE(4);
          (this.#t.payloadLength = (r << 8) + o), (this.#r = Ct.READ_DATA);
        } else if (this.#r === Ct.READ_DATA) {
          if (this.#e < this.#t.payloadLength) return e();
          if (this.#e >= this.#t.payloadLength) {
            let t = this.consume(this.#t.payloadLength);
            if (
              (this.#o.push(t),
              !this.#t.fragmented ||
                (this.#t.fin && this.#t.opcode === Bt.CONTINUATION))
            ) {
              let r = Buffer.concat(this.#o);
              RW(this.ws, this.#t.originalOpcode, r),
                (this.#t = {}),
                (this.#o.length = 0);
            }
            this.#r = Ct.INFO;
          }
        }
        if (!(this.#e > 0)) {
          e();
          break;
        }
      }
    }
    consume(e) {
      if (e > this.#e) return null;
      if (e === 0) return mW;
      if (this.#A[0].length === e)
        return (this.#e -= this.#A[0].length), this.#A.shift();
      let t = Buffer.allocUnsafe(e),
        r = 0;
      for (; r !== e; ) {
        let o = this.#A[0],
          { length: s } = o;
        if (s + r === e) {
          t.set(this.#A.shift(), r);
          break;
        } else if (s + r > e) {
          t.set(o.subarray(0, e - r), r), (this.#A[0] = o.subarray(e - r));
          break;
        } else t.set(this.#A.shift(), r), (r += o.length);
      }
      return (this.#e -= e), t;
    }
    parseCloseBody(e, t) {
      let r;
      if ((t.length >= 2 && (r = t.readUInt16BE(0)), e))
        return rR(r) ? { code: r } : null;
      let o = t.subarray(2);
      if (
        (o[0] === 239 && o[1] === 187 && o[2] === 191 && (o = o.subarray(3)),
        r !== void 0 && !rR(r))
      )
        return null;
      try {
        o = new TextDecoder('utf-8', { fatal: !0 }).decode(o);
      } catch {
        return null;
      }
      return { code: r, reason: o };
    }
    get closingInfo() {
      return this.#t.closeInfo;
    }
  };
  nR.exports = { ByteParser: iu };
});
var BR = B((foA, CR) => {
  'use strict';
  var { webidl: H } = Ie(),
    { DOMException: so } = Kr(),
    { URLSerializer: bW } = Tt(),
    { getGlobalOrigin: FW } = ms(),
    {
      staticPropertyDescriptors: no,
      states: an,
      opcodes: ji,
      emptyBuffer: SW,
    } = sn(),
    {
      kWebSocketURL: aR,
      kReadyState: Tr,
      kController: TW,
      kBinaryType: Wg,
      kResponse: _g,
      kSentClose: NW,
      kByteParser: UW,
    } = Wi(),
    {
      isEstablished: cR,
      isClosing: gR,
      isValidSubprotocol: MW,
      failWebsocketConnection: LW,
      fireEvent: GW,
    } = Pg(),
    { establishWebSocketConnection: xW } = Xk(),
    { WebsocketFrameSend: Zi } = nu(),
    { ByteParser: vW } = iR(),
    { kEnumerableProperty: ut, isBlobLike: lR } = eA(),
    { getGlobalDispatcher: OW } = _s(),
    { types: QR } = require('util'),
    ER = !1,
    et = class A extends EventTarget {
      #A = { open: null, error: null, close: null, message: null };
      #e = 0;
      #r = '';
      #t = '';
      constructor(e, t = []) {
        super(),
          H.argumentLengthCheck(arguments, 1, {
            header: 'WebSocket constructor',
          }),
          ER ||
            ((ER = !0),
            process.emitWarning(
              'WebSockets are experimental, expect them to change at any time.',
              { code: 'UNDICI-WS' },
            ));
        let r =
          H.converters['DOMString or sequence<DOMString> or WebSocketInit'](t);
        (e = H.converters.USVString(e)), (t = r.protocols);
        let o = FW(),
          s;
        try {
          s = new URL(e, o);
        } catch (n) {
          throw new so(n, 'SyntaxError');
        }
        if (
          (s.protocol === 'http:'
            ? (s.protocol = 'ws:')
            : s.protocol === 'https:' && (s.protocol = 'wss:'),
          s.protocol !== 'ws:' && s.protocol !== 'wss:')
        )
          throw new so(
            `Expected a ws: or wss: protocol, got ${s.protocol}`,
            'SyntaxError',
          );
        if (s.hash || s.href.endsWith('#'))
          throw new so('Got fragment', 'SyntaxError');
        if (
          (typeof t == 'string' && (t = [t]),
          t.length !== new Set(t.map((n) => n.toLowerCase())).size)
        )
          throw new so('Invalid Sec-WebSocket-Protocol value', 'SyntaxError');
        if (t.length > 0 && !t.every((n) => MW(n)))
          throw new so('Invalid Sec-WebSocket-Protocol value', 'SyntaxError');
        (this[aR] = new URL(s.href)),
          (this[TW] = xW(s, t, this, (n) => this.#o(n), r)),
          (this[Tr] = A.CONNECTING),
          (this[Wg] = 'blob');
      }
      close(e = void 0, t = void 0) {
        if (
          (H.brandCheck(this, A),
          e !== void 0 &&
            (e = H.converters['unsigned short'](e, { clamp: !0 })),
          t !== void 0 && (t = H.converters.USVString(t)),
          e !== void 0 && e !== 1e3 && (e < 3e3 || e > 4999))
        )
          throw new so('invalid code', 'InvalidAccessError');
        let r = 0;
        if (t !== void 0 && ((r = Buffer.byteLength(t)), r > 123))
          throw new so(
            `Reason must be less than 123 bytes; received ${r}`,
            'SyntaxError',
          );
        if (!(this[Tr] === A.CLOSING || this[Tr] === A.CLOSED))
          if (!cR(this))
            LW(this, 'Connection was closed before it was established.'),
              (this[Tr] = A.CLOSING);
          else if (gR(this)) this[Tr] = A.CLOSING;
          else {
            let o = new Zi();
            e !== void 0 && t === void 0
              ? ((o.frameData = Buffer.allocUnsafe(2)),
                o.frameData.writeUInt16BE(e, 0))
              : e !== void 0 && t !== void 0
                ? ((o.frameData = Buffer.allocUnsafe(2 + r)),
                  o.frameData.writeUInt16BE(e, 0),
                  o.frameData.write(t, 2, 'utf-8'))
                : (o.frameData = SW),
              this[_g].socket.write(o.createFrame(ji.CLOSE), (n) => {
                n || (this[NW] = !0);
              }),
              (this[Tr] = an.CLOSING);
          }
      }
      send(e) {
        if (
          (H.brandCheck(this, A),
          H.argumentLengthCheck(arguments, 1, { header: 'WebSocket.send' }),
          (e = H.converters.WebSocketSendData(e)),
          this[Tr] === A.CONNECTING)
        )
          throw new so('Sent before connected.', 'InvalidStateError');
        if (!cR(this) || gR(this)) return;
        let t = this[_g].socket;
        if (typeof e == 'string') {
          let r = Buffer.from(e),
            s = new Zi(r).createFrame(ji.TEXT);
          (this.#e += r.byteLength),
            t.write(s, () => {
              this.#e -= r.byteLength;
            });
        } else if (QR.isArrayBuffer(e)) {
          let r = Buffer.from(e),
            s = new Zi(r).createFrame(ji.BINARY);
          (this.#e += r.byteLength),
            t.write(s, () => {
              this.#e -= r.byteLength;
            });
        } else if (ArrayBuffer.isView(e)) {
          let r = Buffer.from(e, e.byteOffset, e.byteLength),
            s = new Zi(r).createFrame(ji.BINARY);
          (this.#e += r.byteLength),
            t.write(s, () => {
              this.#e -= r.byteLength;
            });
        } else if (lR(e)) {
          let r = new Zi();
          e.arrayBuffer().then((o) => {
            let s = Buffer.from(o);
            r.frameData = s;
            let n = r.createFrame(ji.BINARY);
            (this.#e += s.byteLength),
              t.write(n, () => {
                this.#e -= s.byteLength;
              });
          });
        }
      }
      get readyState() {
        return H.brandCheck(this, A), this[Tr];
      }
      get bufferedAmount() {
        return H.brandCheck(this, A), this.#e;
      }
      get url() {
        return H.brandCheck(this, A), bW(this[aR]);
      }
      get extensions() {
        return H.brandCheck(this, A), this.#t;
      }
      get protocol() {
        return H.brandCheck(this, A), this.#r;
      }
      get onopen() {
        return H.brandCheck(this, A), this.#A.open;
      }
      set onopen(e) {
        H.brandCheck(this, A),
          this.#A.open && this.removeEventListener('open', this.#A.open),
          typeof e == 'function'
            ? ((this.#A.open = e), this.addEventListener('open', e))
            : (this.#A.open = null);
      }
      get onerror() {
        return H.brandCheck(this, A), this.#A.error;
      }
      set onerror(e) {
        H.brandCheck(this, A),
          this.#A.error && this.removeEventListener('error', this.#A.error),
          typeof e == 'function'
            ? ((this.#A.error = e), this.addEventListener('error', e))
            : (this.#A.error = null);
      }
      get onclose() {
        return H.brandCheck(this, A), this.#A.close;
      }
      set onclose(e) {
        H.brandCheck(this, A),
          this.#A.close && this.removeEventListener('close', this.#A.close),
          typeof e == 'function'
            ? ((this.#A.close = e), this.addEventListener('close', e))
            : (this.#A.close = null);
      }
      get onmessage() {
        return H.brandCheck(this, A), this.#A.message;
      }
      set onmessage(e) {
        H.brandCheck(this, A),
          this.#A.message &&
            this.removeEventListener('message', this.#A.message),
          typeof e == 'function'
            ? ((this.#A.message = e), this.addEventListener('message', e))
            : (this.#A.message = null);
      }
      get binaryType() {
        return H.brandCheck(this, A), this[Wg];
      }
      set binaryType(e) {
        H.brandCheck(this, A),
          e !== 'blob' && e !== 'arraybuffer'
            ? (this[Wg] = 'blob')
            : (this[Wg] = e);
      }
      #o(e) {
        this[_g] = e;
        let t = new vW(this);
        t.on('drain', function () {
          this.ws[_g].socket.resume();
        }),
          (e.socket.ws = this),
          (this[UW] = t),
          (this[Tr] = an.OPEN);
        let r = e.headersList.get('sec-websocket-extensions');
        r !== null && (this.#t = r);
        let o = e.headersList.get('sec-websocket-protocol');
        o !== null && (this.#r = o), GW('open', this);
      }
    };
  et.CONNECTING = et.prototype.CONNECTING = an.CONNECTING;
  et.OPEN = et.prototype.OPEN = an.OPEN;
  et.CLOSING = et.prototype.CLOSING = an.CLOSING;
  et.CLOSED = et.prototype.CLOSED = an.CLOSED;
  Object.defineProperties(et.prototype, {
    CONNECTING: no,
    OPEN: no,
    CLOSING: no,
    CLOSED: no,
    url: ut,
    readyState: ut,
    bufferedAmount: ut,
    onopen: ut,
    onerror: ut,
    onclose: ut,
    close: ut,
    onmessage: ut,
    binaryType: ut,
    send: ut,
    extensions: ut,
    protocol: ut,
    [Symbol.toStringTag]: {
      value: 'WebSocket',
      writable: !1,
      enumerable: !1,
      configurable: !0,
    },
  });
  Object.defineProperties(et, {
    CONNECTING: no,
    OPEN: no,
    CLOSING: no,
    CLOSED: no,
  });
  H.converters['sequence<DOMString>'] = H.sequenceConverter(
    H.converters.DOMString,
  );
  H.converters['DOMString or sequence<DOMString>'] = function (A) {
    return H.util.Type(A) === 'Object' && Symbol.iterator in A
      ? H.converters['sequence<DOMString>'](A)
      : H.converters.DOMString(A);
  };
  H.converters.WebSocketInit = H.dictionaryConverter([
    {
      key: 'protocols',
      converter: H.converters['DOMString or sequence<DOMString>'],
      get defaultValue() {
        return [];
      },
    },
    {
      key: 'dispatcher',
      converter: (A) => A,
      get defaultValue() {
        return OW();
      },
    },
    {
      key: 'headers',
      converter: H.nullableConverter(H.converters.HeadersInit),
    },
  ]);
  H.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (
    A,
  ) {
    return H.util.Type(A) === 'Object' && !(Symbol.iterator in A)
      ? H.converters.WebSocketInit(A)
      : { protocols: H.converters['DOMString or sequence<DOMString>'](A) };
  };
  H.converters.WebSocketSendData = function (A) {
    if (H.util.Type(A) === 'Object') {
      if (lR(A)) return H.converters.Blob(A, { strict: !1 });
      if (ArrayBuffer.isView(A) || QR.isAnyArrayBuffer(A))
        return H.converters.BufferSource(A);
    }
    return H.converters.USVString(A);
  };
  CR.exports = { WebSocket: et };
});
var dR = B((poA, P) => {
  'use strict';
  var YW = bi(),
    uR = bc(),
    hR = uA(),
    JW = vs(),
    HW = Sy(),
    VW = Ni(),
    qo = eA(),
    { InvalidArgumentError: jg } = hR,
    cn = pD(),
    qW = fi(),
    PW = hB(),
    WW = rm(),
    _W = fB(),
    jW = sB(),
    ZW = cm(),
    KW = Cm(),
    { getGlobalDispatcher: IR, setGlobalDispatcher: XW } = _s(),
    zW = fm(),
    $W = uC(),
    A_ = Nc(),
    au;
  try {
    require('crypto'), (au = !0);
  } catch {
    au = !1;
  }
  Object.assign(uR.prototype, cn);
  P.exports.Dispatcher = uR;
  P.exports.Client = YW;
  P.exports.Pool = JW;
  P.exports.BalancedPool = HW;
  P.exports.Agent = VW;
  P.exports.ProxyAgent = ZW;
  P.exports.RetryHandler = KW;
  P.exports.DecoratorHandler = zW;
  P.exports.RedirectHandler = $W;
  P.exports.createRedirectInterceptor = A_;
  P.exports.buildConnector = qW;
  P.exports.errors = hR;
  function Ki(A) {
    return (e, t, r) => {
      if (
        (typeof t == 'function' && ((r = t), (t = null)),
        !e ||
          (typeof e != 'string' && typeof e != 'object' && !(e instanceof URL)))
      )
        throw new jg('invalid url');
      if (t != null && typeof t != 'object') throw new jg('invalid opts');
      if (t && t.path != null) {
        if (typeof t.path != 'string') throw new jg('invalid opts.path');
        let n = t.path;
        t.path.startsWith('/') || (n = `/${n}`),
          (e = new URL(qo.parseOrigin(e).origin + n));
      } else t || (t = typeof e == 'object' ? e : {}), (e = qo.parseURL(e));
      let { agent: o, dispatcher: s = IR() } = t;
      if (o) throw new jg('unsupported opts.agent. Did you mean opts.client?');
      return A.call(
        s,
        {
          ...t,
          origin: e.origin,
          path: e.search ? `${e.pathname}${e.search}` : e.pathname,
          method: t.method || (t.body ? 'PUT' : 'GET'),
        },
        r,
      );
    };
  }
  P.exports.setGlobalDispatcher = XW;
  P.exports.getGlobalDispatcher = IR;
  if (qo.nodeMajor > 16 || (qo.nodeMajor === 16 && qo.nodeMinor >= 8)) {
    let A = null;
    (P.exports.fetch = async function (n) {
      A || (A = Rg().fetch);
      try {
        return await A(...arguments);
      } catch (i) {
        throw (typeof i == 'object' && Error.captureStackTrace(i, this), i);
      }
    }),
      (P.exports.Headers = Oo().Headers),
      (P.exports.Response = Bg().Response),
      (P.exports.Request = Ji().Request),
      (P.exports.FormData = mc().FormData),
      (P.exports.File = yc().File),
      (P.exports.FileReader = uk().FileReader);
    let { setGlobalOrigin: e, getGlobalOrigin: t } = ms();
    (P.exports.setGlobalOrigin = e), (P.exports.getGlobalOrigin = t);
    let { CacheStorage: r } = bk(),
      { kConstruct: o } = Tg();
    P.exports.caches = new r(o);
  }
  if (qo.nodeMajor >= 16) {
    let {
      deleteCookie: A,
      getCookies: e,
      getSetCookies: t,
      setCookie: r,
    } = Ok();
    (P.exports.deleteCookie = A),
      (P.exports.getCookies = e),
      (P.exports.getSetCookies = t),
      (P.exports.setCookie = r);
    let { parseMIMEType: o, serializeAMimeType: s } = Tt();
    (P.exports.parseMIMEType = o), (P.exports.serializeAMimeType = s);
  }
  if (qo.nodeMajor >= 18 && au) {
    let { WebSocket: A } = BR();
    P.exports.WebSocket = A;
  }
  P.exports.request = Ki(cn.request);
  P.exports.stream = Ki(cn.stream);
  P.exports.pipeline = Ki(cn.pipeline);
  P.exports.connect = Ki(cn.connect);
  P.exports.upgrade = Ki(cn.upgrade);
  P.exports.MockClient = PW;
  P.exports.MockPool = _W;
  P.exports.MockAgent = WW;
  P.exports.mockErrors = jW;
});
var lu = B((pA) => {
  'use strict';
  var e_ =
      (pA && pA.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    t_ =
      (pA && pA.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    $g =
      (pA && pA.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              e_(e, A, t);
        return t_(e, A), e;
      },
    JA =
      (pA && pA.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(pA, '__esModule', { value: !0 });
  pA.HttpClient =
    pA.isHttps =
    pA.HttpClientResponse =
    pA.HttpClientError =
    pA.getProxyUrl =
    pA.MediaTypes =
    pA.Headers =
    pA.HttpCodes =
      void 0;
  var cu = $g(require('http')),
    fR = $g(require('https')),
    gu = $g(Sf()),
    Zg = $g(Gf()),
    r_ = dR(),
    ht;
  (function (A) {
    (A[(A.OK = 200)] = 'OK'),
      (A[(A.MultipleChoices = 300)] = 'MultipleChoices'),
      (A[(A.MovedPermanently = 301)] = 'MovedPermanently'),
      (A[(A.ResourceMoved = 302)] = 'ResourceMoved'),
      (A[(A.SeeOther = 303)] = 'SeeOther'),
      (A[(A.NotModified = 304)] = 'NotModified'),
      (A[(A.UseProxy = 305)] = 'UseProxy'),
      (A[(A.SwitchProxy = 306)] = 'SwitchProxy'),
      (A[(A.TemporaryRedirect = 307)] = 'TemporaryRedirect'),
      (A[(A.PermanentRedirect = 308)] = 'PermanentRedirect'),
      (A[(A.BadRequest = 400)] = 'BadRequest'),
      (A[(A.Unauthorized = 401)] = 'Unauthorized'),
      (A[(A.PaymentRequired = 402)] = 'PaymentRequired'),
      (A[(A.Forbidden = 403)] = 'Forbidden'),
      (A[(A.NotFound = 404)] = 'NotFound'),
      (A[(A.MethodNotAllowed = 405)] = 'MethodNotAllowed'),
      (A[(A.NotAcceptable = 406)] = 'NotAcceptable'),
      (A[(A.ProxyAuthenticationRequired = 407)] =
        'ProxyAuthenticationRequired'),
      (A[(A.RequestTimeout = 408)] = 'RequestTimeout'),
      (A[(A.Conflict = 409)] = 'Conflict'),
      (A[(A.Gone = 410)] = 'Gone'),
      (A[(A.TooManyRequests = 429)] = 'TooManyRequests'),
      (A[(A.InternalServerError = 500)] = 'InternalServerError'),
      (A[(A.NotImplemented = 501)] = 'NotImplemented'),
      (A[(A.BadGateway = 502)] = 'BadGateway'),
      (A[(A.ServiceUnavailable = 503)] = 'ServiceUnavailable'),
      (A[(A.GatewayTimeout = 504)] = 'GatewayTimeout');
  })(ht || (pA.HttpCodes = ht = {}));
  var le;
  (function (A) {
    (A.Accept = 'accept'), (A.ContentType = 'content-type');
  })(le || (pA.Headers = le = {}));
  var Nr;
  (function (A) {
    A.ApplicationJson = 'application/json';
  })(Nr || (pA.MediaTypes = Nr = {}));
  function o_(A) {
    let e = gu.getProxyUrl(new URL(A));
    return e ? e.href : '';
  }
  pA.getProxyUrl = o_;
  var s_ = [
      ht.MovedPermanently,
      ht.ResourceMoved,
      ht.SeeOther,
      ht.TemporaryRedirect,
      ht.PermanentRedirect,
    ],
    n_ = [ht.BadGateway, ht.ServiceUnavailable, ht.GatewayTimeout],
    i_ = ['OPTIONS', 'GET', 'DELETE', 'HEAD'],
    a_ = 10,
    c_ = 5,
    Xg = class A extends Error {
      constructor(e, t) {
        super(e),
          (this.name = 'HttpClientError'),
          (this.statusCode = t),
          Object.setPrototypeOf(this, A.prototype);
      }
    };
  pA.HttpClientError = Xg;
  var zg = class {
    constructor(e) {
      this.message = e;
    }
    readBody() {
      return JA(this, void 0, void 0, function* () {
        return new Promise((e) =>
          JA(this, void 0, void 0, function* () {
            let t = Buffer.alloc(0);
            this.message.on('data', (r) => {
              t = Buffer.concat([t, r]);
            }),
              this.message.on('end', () => {
                e(t.toString());
              });
          }),
        );
      });
    }
    readBodyBuffer() {
      return JA(this, void 0, void 0, function* () {
        return new Promise((e) =>
          JA(this, void 0, void 0, function* () {
            let t = [];
            this.message.on('data', (r) => {
              t.push(r);
            }),
              this.message.on('end', () => {
                e(Buffer.concat(t));
              });
          }),
        );
      });
    }
  };
  pA.HttpClientResponse = zg;
  function g_(A) {
    return new URL(A).protocol === 'https:';
  }
  pA.isHttps = g_;
  var Eu = class {
    constructor(e, t, r) {
      (this._ignoreSslError = !1),
        (this._allowRedirects = !0),
        (this._allowRedirectDowngrade = !1),
        (this._maxRedirects = 50),
        (this._allowRetries = !1),
        (this._maxRetries = 1),
        (this._keepAlive = !1),
        (this._disposed = !1),
        (this.userAgent = e),
        (this.handlers = t || []),
        (this.requestOptions = r),
        r &&
          (r.ignoreSslError != null &&
            (this._ignoreSslError = r.ignoreSslError),
          (this._socketTimeout = r.socketTimeout),
          r.allowRedirects != null && (this._allowRedirects = r.allowRedirects),
          r.allowRedirectDowngrade != null &&
            (this._allowRedirectDowngrade = r.allowRedirectDowngrade),
          r.maxRedirects != null &&
            (this._maxRedirects = Math.max(r.maxRedirects, 0)),
          r.keepAlive != null && (this._keepAlive = r.keepAlive),
          r.allowRetries != null && (this._allowRetries = r.allowRetries),
          r.maxRetries != null && (this._maxRetries = r.maxRetries));
    }
    options(e, t) {
      return JA(this, void 0, void 0, function* () {
        return this.request('OPTIONS', e, null, t || {});
      });
    }
    get(e, t) {
      return JA(this, void 0, void 0, function* () {
        return this.request('GET', e, null, t || {});
      });
    }
    del(e, t) {
      return JA(this, void 0, void 0, function* () {
        return this.request('DELETE', e, null, t || {});
      });
    }
    post(e, t, r) {
      return JA(this, void 0, void 0, function* () {
        return this.request('POST', e, t, r || {});
      });
    }
    patch(e, t, r) {
      return JA(this, void 0, void 0, function* () {
        return this.request('PATCH', e, t, r || {});
      });
    }
    put(e, t, r) {
      return JA(this, void 0, void 0, function* () {
        return this.request('PUT', e, t, r || {});
      });
    }
    head(e, t) {
      return JA(this, void 0, void 0, function* () {
        return this.request('HEAD', e, null, t || {});
      });
    }
    sendStream(e, t, r, o) {
      return JA(this, void 0, void 0, function* () {
        return this.request(e, t, r, o);
      });
    }
    getJson(e, t = {}) {
      return JA(this, void 0, void 0, function* () {
        t[le.Accept] = this._getExistingOrDefaultHeader(
          t,
          le.Accept,
          Nr.ApplicationJson,
        );
        let r = yield this.get(e, t);
        return this._processResponse(r, this.requestOptions);
      });
    }
    postJson(e, t, r = {}) {
      return JA(this, void 0, void 0, function* () {
        let o = JSON.stringify(t, null, 2);
        (r[le.Accept] = this._getExistingOrDefaultHeader(
          r,
          le.Accept,
          Nr.ApplicationJson,
        )),
          (r[le.ContentType] = this._getExistingOrDefaultHeader(
            r,
            le.ContentType,
            Nr.ApplicationJson,
          ));
        let s = yield this.post(e, o, r);
        return this._processResponse(s, this.requestOptions);
      });
    }
    putJson(e, t, r = {}) {
      return JA(this, void 0, void 0, function* () {
        let o = JSON.stringify(t, null, 2);
        (r[le.Accept] = this._getExistingOrDefaultHeader(
          r,
          le.Accept,
          Nr.ApplicationJson,
        )),
          (r[le.ContentType] = this._getExistingOrDefaultHeader(
            r,
            le.ContentType,
            Nr.ApplicationJson,
          ));
        let s = yield this.put(e, o, r);
        return this._processResponse(s, this.requestOptions);
      });
    }
    patchJson(e, t, r = {}) {
      return JA(this, void 0, void 0, function* () {
        let o = JSON.stringify(t, null, 2);
        (r[le.Accept] = this._getExistingOrDefaultHeader(
          r,
          le.Accept,
          Nr.ApplicationJson,
        )),
          (r[le.ContentType] = this._getExistingOrDefaultHeader(
            r,
            le.ContentType,
            Nr.ApplicationJson,
          ));
        let s = yield this.patch(e, o, r);
        return this._processResponse(s, this.requestOptions);
      });
    }
    request(e, t, r, o) {
      return JA(this, void 0, void 0, function* () {
        if (this._disposed)
          throw new Error('Client has already been disposed.');
        let s = new URL(t),
          n = this._prepareRequest(e, s, o),
          i = this._allowRetries && i_.includes(e) ? this._maxRetries + 1 : 1,
          a = 0,
          c;
        do {
          if (
            ((c = yield this.requestRaw(n, r)),
            c && c.message && c.message.statusCode === ht.Unauthorized)
          ) {
            let E;
            for (let l of this.handlers)
              if (l.canHandleAuthentication(c)) {
                E = l;
                break;
              }
            return E ? E.handleAuthentication(this, n, r) : c;
          }
          let g = this._maxRedirects;
          for (
            ;
            c.message.statusCode &&
            s_.includes(c.message.statusCode) &&
            this._allowRedirects &&
            g > 0;
          ) {
            let E = c.message.headers.location;
            if (!E) break;
            let l = new URL(E);
            if (
              s.protocol === 'https:' &&
              s.protocol !== l.protocol &&
              !this._allowRedirectDowngrade
            )
              throw new Error(
                'Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.',
              );
            if ((yield c.readBody(), l.hostname !== s.hostname))
              for (let C in o)
                C.toLowerCase() === 'authorization' && delete o[C];
            (n = this._prepareRequest(e, l, o)),
              (c = yield this.requestRaw(n, r)),
              g--;
          }
          if (!c.message.statusCode || !n_.includes(c.message.statusCode))
            return c;
          (a += 1),
            a < i &&
              (yield c.readBody(), yield this._performExponentialBackoff(a));
        } while (a < i);
        return c;
      });
    }
    dispose() {
      this._agent && this._agent.destroy(), (this._disposed = !0);
    }
    requestRaw(e, t) {
      return JA(this, void 0, void 0, function* () {
        return new Promise((r, o) => {
          function s(n, i) {
            n ? o(n) : i ? r(i) : o(new Error('Unknown error'));
          }
          this.requestRawWithCallback(e, t, s);
        });
      });
    }
    requestRawWithCallback(e, t, r) {
      typeof t == 'string' &&
        (e.options.headers || (e.options.headers = {}),
        (e.options.headers['Content-Length'] = Buffer.byteLength(t, 'utf8')));
      let o = !1;
      function s(a, c) {
        o || ((o = !0), r(a, c));
      }
      let n = e.httpModule.request(e.options, (a) => {
          let c = new zg(a);
          s(void 0, c);
        }),
        i;
      n.on('socket', (a) => {
        i = a;
      }),
        n.setTimeout(this._socketTimeout || 3 * 6e4, () => {
          i && i.end(), s(new Error(`Request timeout: ${e.options.path}`));
        }),
        n.on('error', function (a) {
          s(a);
        }),
        t && typeof t == 'string' && n.write(t, 'utf8'),
        t && typeof t != 'string'
          ? (t.on('close', function () {
              n.end();
            }),
            t.pipe(n))
          : n.end();
    }
    getAgent(e) {
      let t = new URL(e);
      return this._getAgent(t);
    }
    getAgentDispatcher(e) {
      let t = new URL(e),
        r = gu.getProxyUrl(t);
      if (r && r.hostname) return this._getProxyAgentDispatcher(t, r);
    }
    _prepareRequest(e, t, r) {
      let o = {};
      o.parsedUrl = t;
      let s = o.parsedUrl.protocol === 'https:';
      o.httpModule = s ? fR : cu;
      let n = s ? 443 : 80;
      if (
        ((o.options = {}),
        (o.options.host = o.parsedUrl.hostname),
        (o.options.port = o.parsedUrl.port ? parseInt(o.parsedUrl.port) : n),
        (o.options.path =
          (o.parsedUrl.pathname || '') + (o.parsedUrl.search || '')),
        (o.options.method = e),
        (o.options.headers = this._mergeHeaders(r)),
        this.userAgent != null &&
          (o.options.headers['user-agent'] = this.userAgent),
        (o.options.agent = this._getAgent(o.parsedUrl)),
        this.handlers)
      )
        for (let i of this.handlers) i.prepareRequest(o.options);
      return o;
    }
    _mergeHeaders(e) {
      return this.requestOptions && this.requestOptions.headers
        ? Object.assign({}, Kg(this.requestOptions.headers), Kg(e || {}))
        : Kg(e || {});
    }
    _getExistingOrDefaultHeader(e, t, r) {
      let o;
      return (
        this.requestOptions &&
          this.requestOptions.headers &&
          (o = Kg(this.requestOptions.headers)[t]),
        e[t] || o || r
      );
    }
    _getAgent(e) {
      let t,
        r = gu.getProxyUrl(e),
        o = r && r.hostname;
      if (
        (this._keepAlive && o && (t = this._proxyAgent),
        o || (t = this._agent),
        t)
      )
        return t;
      let s = e.protocol === 'https:',
        n = 100;
      if (
        (this.requestOptions &&
          (n = this.requestOptions.maxSockets || cu.globalAgent.maxSockets),
        r && r.hostname)
      ) {
        let i = {
            maxSockets: n,
            keepAlive: this._keepAlive,
            proxy: Object.assign(
              Object.assign(
                {},
                (r.username || r.password) && {
                  proxyAuth: `${r.username}:${r.password}`,
                },
              ),
              { host: r.hostname, port: r.port },
            ),
          },
          a,
          c = r.protocol === 'https:';
        s
          ? (a = c ? Zg.httpsOverHttps : Zg.httpsOverHttp)
          : (a = c ? Zg.httpOverHttps : Zg.httpOverHttp),
          (t = a(i)),
          (this._proxyAgent = t);
      }
      if (!t) {
        let i = { keepAlive: this._keepAlive, maxSockets: n };
        (t = s ? new fR.Agent(i) : new cu.Agent(i)), (this._agent = t);
      }
      return (
        s &&
          this._ignoreSslError &&
          (t.options = Object.assign(t.options || {}, {
            rejectUnauthorized: !1,
          })),
        t
      );
    }
    _getProxyAgentDispatcher(e, t) {
      let r;
      if ((this._keepAlive && (r = this._proxyAgentDispatcher), r)) return r;
      let o = e.protocol === 'https:';
      return (
        (r = new r_.ProxyAgent(
          Object.assign(
            { uri: t.href, pipelining: this._keepAlive ? 1 : 0 },
            (t.username || t.password) && {
              token: `Basic ${Buffer.from(`${t.username}:${t.password}`).toString('base64')}`,
            },
          ),
        )),
        (this._proxyAgentDispatcher = r),
        o &&
          this._ignoreSslError &&
          (r.options = Object.assign(r.options.requestTls || {}, {
            rejectUnauthorized: !1,
          })),
        r
      );
    }
    _performExponentialBackoff(e) {
      return JA(this, void 0, void 0, function* () {
        e = Math.min(a_, e);
        let t = c_ * Math.pow(2, e);
        return new Promise((r) => setTimeout(() => r(), t));
      });
    }
    _processResponse(e, t) {
      return JA(this, void 0, void 0, function* () {
        return new Promise((r, o) =>
          JA(this, void 0, void 0, function* () {
            let s = e.message.statusCode || 0,
              n = { statusCode: s, result: null, headers: {} };
            s === ht.NotFound && r(n);
            function i(g, E) {
              if (typeof E == 'string') {
                let l = new Date(E);
                if (!isNaN(l.valueOf())) return l;
              }
              return E;
            }
            let a, c;
            try {
              (c = yield e.readBody()),
                c &&
                  c.length > 0 &&
                  (t && t.deserializeDates
                    ? (a = JSON.parse(c, i))
                    : (a = JSON.parse(c)),
                  (n.result = a)),
                (n.headers = e.message.headers);
            } catch {}
            if (s > 299) {
              let g;
              a && a.message
                ? (g = a.message)
                : c && c.length > 0
                  ? (g = c)
                  : (g = `Failed request: (${s})`);
              let E = new Xg(g, s);
              (E.result = n.result), o(E);
            } else r(n);
          }),
        );
      });
    }
  };
  pA.HttpClient = Eu;
  var Kg = (A) =>
    Object.keys(A).reduce((e, t) => ((e[t.toLowerCase()] = A[t]), e), {});
});
var pR = B((or) => {
  'use strict';
  var uu =
    (or && or.__awaiter) ||
    function (A, e, t, r) {
      function o(s) {
        return s instanceof t
          ? s
          : new t(function (n) {
              n(s);
            });
      }
      return new (t || (t = Promise))(function (s, n) {
        function i(g) {
          try {
            c(r.next(g));
          } catch (E) {
            n(E);
          }
        }
        function a(g) {
          try {
            c(r.throw(g));
          } catch (E) {
            n(E);
          }
        }
        function c(g) {
          g.done ? s(g.value) : o(g.value).then(i, a);
        }
        c((r = r.apply(A, e || [])).next());
      });
    };
  Object.defineProperty(or, '__esModule', { value: !0 });
  or.PersonalAccessTokenCredentialHandler =
    or.BearerCredentialHandler =
    or.BasicCredentialHandler =
      void 0;
  var Qu = class {
    constructor(e, t) {
      (this.username = e), (this.password = t);
    }
    prepareRequest(e) {
      if (!e.headers) throw Error('The request has no headers');
      e.headers.Authorization = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return uu(this, void 0, void 0, function* () {
        throw new Error('not implemented');
      });
    }
  };
  or.BasicCredentialHandler = Qu;
  var Cu = class {
    constructor(e) {
      this.token = e;
    }
    prepareRequest(e) {
      if (!e.headers) throw Error('The request has no headers');
      e.headers.Authorization = `Bearer ${this.token}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return uu(this, void 0, void 0, function* () {
        throw new Error('not implemented');
      });
    }
  };
  or.BearerCredentialHandler = Cu;
  var Bu = class {
    constructor(e) {
      this.token = e;
    }
    prepareRequest(e) {
      if (!e.headers) throw Error('The request has no headers');
      e.headers.Authorization = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;
    }
    canHandleAuthentication() {
      return !1;
    }
    handleAuthentication() {
      return uu(this, void 0, void 0, function* () {
        throw new Error('not implemented');
      });
    }
  };
  or.PersonalAccessTokenCredentialHandler = Bu;
});
var DR = B((gn) => {
  'use strict';
  var wR =
    (gn && gn.__awaiter) ||
    function (A, e, t, r) {
      function o(s) {
        return s instanceof t
          ? s
          : new t(function (n) {
              n(s);
            });
      }
      return new (t || (t = Promise))(function (s, n) {
        function i(g) {
          try {
            c(r.next(g));
          } catch (E) {
            n(E);
          }
        }
        function a(g) {
          try {
            c(r.throw(g));
          } catch (E) {
            n(E);
          }
        }
        function c(g) {
          g.done ? s(g.value) : o(g.value).then(i, a);
        }
        c((r = r.apply(A, e || [])).next());
      });
    };
  Object.defineProperty(gn, '__esModule', { value: !0 });
  gn.OidcClient = void 0;
  var E_ = lu(),
    l_ = pR(),
    yR = En(),
    hu = class A {
      static createHttpClient(e = !0, t = 10) {
        let r = { allowRetries: e, maxRetries: t };
        return new E_.HttpClient(
          'actions/oidc-client',
          [new l_.BearerCredentialHandler(A.getRequestToken())],
          r,
        );
      }
      static getRequestToken() {
        let e = process.env.ACTIONS_ID_TOKEN_REQUEST_TOKEN;
        if (!e)
          throw new Error(
            'Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable',
          );
        return e;
      }
      static getIDTokenUrl() {
        let e = process.env.ACTIONS_ID_TOKEN_REQUEST_URL;
        if (!e)
          throw new Error(
            'Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable',
          );
        return e;
      }
      static getCall(e) {
        var t;
        return wR(this, void 0, void 0, function* () {
          let s =
            (t = (yield A.createHttpClient()
              .getJson(e)
              .catch((n) => {
                throw new Error(`Failed to get ID Token. 
 
        Error Code : ${n.statusCode}
 
        Error Message: ${n.message}`);
              })).result) === null || t === void 0
              ? void 0
              : t.value;
          if (!s)
            throw new Error('Response json body do not have ID Token field');
          return s;
        });
      }
      static getIDToken(e) {
        return wR(this, void 0, void 0, function* () {
          try {
            let t = A.getIDTokenUrl();
            if (e) {
              let o = encodeURIComponent(e);
              t = `${t}&audience=${o}`;
            }
            (0, yR.debug)(`ID token url is ${t}`);
            let r = yield A.getCall(t);
            return (0, yR.setSecret)(r), r;
          } catch (t) {
            throw new Error(`Error message: ${t.message}`);
          }
        });
      }
    };
  gn.OidcClient = hu;
});
var pu = B((Ue) => {
  'use strict';
  var Iu =
    (Ue && Ue.__awaiter) ||
    function (A, e, t, r) {
      function o(s) {
        return s instanceof t
          ? s
          : new t(function (n) {
              n(s);
            });
      }
      return new (t || (t = Promise))(function (s, n) {
        function i(g) {
          try {
            c(r.next(g));
          } catch (E) {
            n(E);
          }
        }
        function a(g) {
          try {
            c(r.throw(g));
          } catch (E) {
            n(E);
          }
        }
        function c(g) {
          g.done ? s(g.value) : o(g.value).then(i, a);
        }
        c((r = r.apply(A, e || [])).next());
      });
    };
  Object.defineProperty(Ue, '__esModule', { value: !0 });
  Ue.summary =
    Ue.markdownSummary =
    Ue.SUMMARY_DOCS_URL =
    Ue.SUMMARY_ENV_VAR =
      void 0;
  var Q_ = require('os'),
    du = require('fs'),
    { access: C_, appendFile: B_, writeFile: u_ } = du.promises;
  Ue.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';
  Ue.SUMMARY_DOCS_URL =
    'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';
  var fu = class {
      constructor() {
        this._buffer = '';
      }
      filePath() {
        return Iu(this, void 0, void 0, function* () {
          if (this._filePath) return this._filePath;
          let e = process.env[Ue.SUMMARY_ENV_VAR];
          if (!e)
            throw new Error(
              `Unable to find environment variable for $${Ue.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`,
            );
          try {
            yield C_(e, du.constants.R_OK | du.constants.W_OK);
          } catch {
            throw new Error(
              `Unable to access summary file: '${e}'. Check if the file has correct read/write permissions.`,
            );
          }
          return (this._filePath = e), this._filePath;
        });
      }
      wrap(e, t, r = {}) {
        let o = Object.entries(r)
          .map(([s, n]) => ` ${s}="${n}"`)
          .join('');
        return t ? `<${e}${o}>${t}</${e}>` : `<${e}${o}>`;
      }
      write(e) {
        return Iu(this, void 0, void 0, function* () {
          let t = !!e?.overwrite,
            r = yield this.filePath();
          return (
            yield (t ? u_ : B_)(r, this._buffer, { encoding: 'utf8' }),
            this.emptyBuffer()
          );
        });
      }
      clear() {
        return Iu(this, void 0, void 0, function* () {
          return this.emptyBuffer().write({ overwrite: !0 });
        });
      }
      stringify() {
        return this._buffer;
      }
      isEmptyBuffer() {
        return this._buffer.length === 0;
      }
      emptyBuffer() {
        return (this._buffer = ''), this;
      }
      addRaw(e, t = !1) {
        return (this._buffer += e), t ? this.addEOL() : this;
      }
      addEOL() {
        return this.addRaw(Q_.EOL);
      }
      addCodeBlock(e, t) {
        let r = Object.assign({}, t && { lang: t }),
          o = this.wrap('pre', this.wrap('code', e), r);
        return this.addRaw(o).addEOL();
      }
      addList(e, t = !1) {
        let r = t ? 'ol' : 'ul',
          o = e.map((n) => this.wrap('li', n)).join(''),
          s = this.wrap(r, o);
        return this.addRaw(s).addEOL();
      }
      addTable(e) {
        let t = e
            .map((o) => {
              let s = o
                .map((n) => {
                  if (typeof n == 'string') return this.wrap('td', n);
                  let { header: i, data: a, colspan: c, rowspan: g } = n,
                    E = i ? 'th' : 'td',
                    l = Object.assign(
                      Object.assign({}, c && { colspan: c }),
                      g && { rowspan: g },
                    );
                  return this.wrap(E, a, l);
                })
                .join('');
              return this.wrap('tr', s);
            })
            .join(''),
          r = this.wrap('table', t);
        return this.addRaw(r).addEOL();
      }
      addDetails(e, t) {
        let r = this.wrap('details', this.wrap('summary', e) + t);
        return this.addRaw(r).addEOL();
      }
      addImage(e, t, r) {
        let { width: o, height: s } = r || {},
          n = Object.assign(
            Object.assign({}, o && { width: o }),
            s && { height: s },
          ),
          i = this.wrap('img', null, Object.assign({ src: e, alt: t }, n));
        return this.addRaw(i).addEOL();
      }
      addHeading(e, t) {
        let r = `h${t}`,
          o = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(r) ? r : 'h1',
          s = this.wrap(o, e);
        return this.addRaw(s).addEOL();
      }
      addSeparator() {
        let e = this.wrap('hr', null);
        return this.addRaw(e).addEOL();
      }
      addBreak() {
        let e = this.wrap('br', null);
        return this.addRaw(e).addEOL();
      }
      addQuote(e, t) {
        let r = Object.assign({}, t && { cite: t }),
          o = this.wrap('blockquote', e, r);
        return this.addRaw(o).addEOL();
      }
      addLink(e, t) {
        let r = this.wrap('a', e, { href: t });
        return this.addRaw(r).addEOL();
      }
    },
    mR = new fu();
  Ue.markdownSummary = mR;
  Ue.summary = mR;
});
var kR = B((Me) => {
  'use strict';
  var h_ =
      (Me && Me.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    I_ =
      (Me && Me.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    d_ =
      (Me && Me.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              h_(e, A, t);
        return I_(e, A), e;
      };
  Object.defineProperty(Me, '__esModule', { value: !0 });
  Me.toPlatformPath = Me.toWin32Path = Me.toPosixPath = void 0;
  var f_ = d_(require('path'));
  function p_(A) {
    return A.replace(/[\\]/g, '/');
  }
  Me.toPosixPath = p_;
  function w_(A) {
    return A.replace(/[/]/g, '\\');
  }
  Me.toWin32Path = w_;
  function y_(A) {
    return A.replace(/[/\\]/g, f_.sep);
  }
  Me.toPlatformPath = y_;
});
var yu = B((b) => {
  'use strict';
  var D_ =
      (b && b.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t),
              Object.defineProperty(A, r, {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              });
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    m_ =
      (b && b.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    bR =
      (b && b.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' && Object.hasOwnProperty.call(A, t) && D_(e, A, t);
        return m_(e, A), e;
      },
    wu =
      (b && b.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      },
    Le;
  Object.defineProperty(b, '__esModule', { value: !0 });
  b.getCmdPath =
    b.tryGetExecutablePath =
    b.isRooted =
    b.isDirectory =
    b.exists =
    b.READONLY =
    b.UV_FS_O_EXLOCK =
    b.IS_WINDOWS =
    b.unlink =
    b.symlink =
    b.stat =
    b.rmdir =
    b.rm =
    b.rename =
    b.readlink =
    b.readdir =
    b.open =
    b.mkdir =
    b.lstat =
    b.copyFile =
    b.chmod =
      void 0;
  var FR = bR(require('fs')),
    AE = bR(require('path'));
  (Le = FR.promises),
    (b.chmod = Le.chmod),
    (b.copyFile = Le.copyFile),
    (b.lstat = Le.lstat),
    (b.mkdir = Le.mkdir),
    (b.open = Le.open),
    (b.readdir = Le.readdir),
    (b.readlink = Le.readlink),
    (b.rename = Le.rename),
    (b.rm = Le.rm),
    (b.rmdir = Le.rmdir),
    (b.stat = Le.stat),
    (b.symlink = Le.symlink),
    (b.unlink = Le.unlink);
  b.IS_WINDOWS = process.platform === 'win32';
  b.UV_FS_O_EXLOCK = 268435456;
  b.READONLY = FR.constants.O_RDONLY;
  function k_(A) {
    return wu(this, void 0, void 0, function* () {
      try {
        yield b.stat(A);
      } catch (e) {
        if (e.code === 'ENOENT') return !1;
        throw e;
      }
      return !0;
    });
  }
  b.exists = k_;
  function R_(A, e = !1) {
    return wu(this, void 0, void 0, function* () {
      return (e ? yield b.stat(A) : yield b.lstat(A)).isDirectory();
    });
  }
  b.isDirectory = R_;
  function b_(A) {
    if (((A = S_(A)), !A))
      throw new Error('isRooted() parameter "p" cannot be empty');
    return b.IS_WINDOWS
      ? A.startsWith('\\') || /^[A-Z]:/i.test(A)
      : A.startsWith('/');
  }
  b.isRooted = b_;
  function F_(A, e) {
    return wu(this, void 0, void 0, function* () {
      let t;
      try {
        t = yield b.stat(A);
      } catch (o) {
        o.code !== 'ENOENT' &&
          console.log(
            `Unexpected error attempting to determine if executable file exists '${A}': ${o}`,
          );
      }
      if (t && t.isFile()) {
        if (b.IS_WINDOWS) {
          let o = AE.extname(A).toUpperCase();
          if (e.some((s) => s.toUpperCase() === o)) return A;
        } else if (RR(t)) return A;
      }
      let r = A;
      for (let o of e) {
        (A = r + o), (t = void 0);
        try {
          t = yield b.stat(A);
        } catch (s) {
          s.code !== 'ENOENT' &&
            console.log(
              `Unexpected error attempting to determine if executable file exists '${A}': ${s}`,
            );
        }
        if (t && t.isFile()) {
          if (b.IS_WINDOWS) {
            try {
              let s = AE.dirname(A),
                n = AE.basename(A).toUpperCase();
              for (let i of yield b.readdir(s))
                if (n === i.toUpperCase()) {
                  A = AE.join(s, i);
                  break;
                }
            } catch (s) {
              console.log(
                `Unexpected error attempting to determine the actual case of the file '${A}': ${s}`,
              );
            }
            return A;
          } else if (RR(t)) return A;
        }
      }
      return '';
    });
  }
  b.tryGetExecutablePath = F_;
  function S_(A) {
    return (
      (A = A || ''),
      b.IS_WINDOWS
        ? ((A = A.replace(/\//g, '\\')), A.replace(/\\\\+/g, '\\'))
        : A.replace(/\/\/+/g, '/')
    );
  }
  function RR(A) {
    return (
      (A.mode & 1) > 0 ||
      ((A.mode & 8) > 0 && A.gid === process.getgid()) ||
      ((A.mode & 64) > 0 && A.uid === process.getuid())
    );
  }
  function T_() {
    var A;
    return (A = process.env.COMSPEC) !== null && A !== void 0 ? A : 'cmd.exe';
  }
  b.getCmdPath = T_;
});
var GR = B((LA) => {
  'use strict';
  var N_ =
      (LA && LA.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t),
              Object.defineProperty(A, r, {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              });
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    U_ =
      (LA && LA.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    SR =
      (LA && LA.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' && Object.hasOwnProperty.call(A, t) && N_(e, A, t);
        return U_(e, A), e;
      },
    io =
      (LA && LA.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(LA, '__esModule', { value: !0 });
  LA.findInPath = LA.which = LA.mkdirP = LA.rmRF = LA.mv = LA.cp = void 0;
  var M_ = require('assert'),
    sr = SR(require('path')),
    iA = SR(yu());
  function L_(A, e, t = {}) {
    return io(this, void 0, void 0, function* () {
      let { force: r, recursive: o, copySourceDirectory: s } = x_(t),
        n = (yield iA.exists(e)) ? yield iA.stat(e) : null;
      if (n && n.isFile() && !r) return;
      let i = n && n.isDirectory() && s ? sr.join(e, sr.basename(A)) : e;
      if (!(yield iA.exists(A)))
        throw new Error(`no such file or directory: ${A}`);
      if ((yield iA.stat(A)).isDirectory())
        if (o) yield MR(A, i, 0, r);
        else
          throw new Error(
            `Failed to copy. ${A} is a directory, but tried to copy without recursive flag.`,
          );
      else {
        if (sr.relative(A, i) === '')
          throw new Error(`'${i}' and '${A}' are the same file`);
        yield LR(A, i, r);
      }
    });
  }
  LA.cp = L_;
  function G_(A, e, t = {}) {
    return io(this, void 0, void 0, function* () {
      if (yield iA.exists(e)) {
        let r = !0;
        if (
          ((yield iA.isDirectory(e)) &&
            ((e = sr.join(e, sr.basename(A))), (r = yield iA.exists(e))),
          r)
        )
          if (t.force == null || t.force) yield TR(e);
          else throw new Error('Destination already exists');
      }
      yield Du(sr.dirname(e)), yield iA.rename(A, e);
    });
  }
  LA.mv = G_;
  function TR(A) {
    return io(this, void 0, void 0, function* () {
      if (iA.IS_WINDOWS && /[*"<>|]/.test(A))
        throw new Error(
          'File path must not contain `*`, `"`, `<`, `>` or `|` on Windows',
        );
      try {
        yield iA.rm(A, {
          force: !0,
          maxRetries: 3,
          recursive: !0,
          retryDelay: 300,
        });
      } catch (e) {
        throw new Error(`File was unable to be removed ${e}`);
      }
    });
  }
  LA.rmRF = TR;
  function Du(A) {
    return io(this, void 0, void 0, function* () {
      M_.ok(A, 'a path argument must be provided'),
        yield iA.mkdir(A, { recursive: !0 });
    });
  }
  LA.mkdirP = Du;
  function NR(A, e) {
    return io(this, void 0, void 0, function* () {
      if (!A) throw new Error("parameter 'tool' is required");
      if (e) {
        let r = yield NR(A, !1);
        if (!r)
          throw iA.IS_WINDOWS
            ? new Error(
                `Unable to locate executable file: ${A}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also verify the file has a valid extension for an executable file.`,
              )
            : new Error(
                `Unable to locate executable file: ${A}. Please verify either the file path exists or the file can be found within a directory specified by the PATH environment variable. Also check the file mode to verify the file is executable.`,
              );
        return r;
      }
      let t = yield UR(A);
      return t && t.length > 0 ? t[0] : '';
    });
  }
  LA.which = NR;
  function UR(A) {
    return io(this, void 0, void 0, function* () {
      if (!A) throw new Error("parameter 'tool' is required");
      let e = [];
      if (iA.IS_WINDOWS && process.env.PATHEXT)
        for (let o of process.env.PATHEXT.split(sr.delimiter)) o && e.push(o);
      if (iA.isRooted(A)) {
        let o = yield iA.tryGetExecutablePath(A, e);
        return o ? [o] : [];
      }
      if (A.includes(sr.sep)) return [];
      let t = [];
      if (process.env.PATH)
        for (let o of process.env.PATH.split(sr.delimiter)) o && t.push(o);
      let r = [];
      for (let o of t) {
        let s = yield iA.tryGetExecutablePath(sr.join(o, A), e);
        s && r.push(s);
      }
      return r;
    });
  }
  LA.findInPath = UR;
  function x_(A) {
    let e = A.force == null ? !0 : A.force,
      t = !!A.recursive,
      r = A.copySourceDirectory == null ? !0 : !!A.copySourceDirectory;
    return { force: e, recursive: t, copySourceDirectory: r };
  }
  function MR(A, e, t, r) {
    return io(this, void 0, void 0, function* () {
      if (t >= 255) return;
      t++, yield Du(e);
      let o = yield iA.readdir(A);
      for (let s of o) {
        let n = `${A}/${s}`,
          i = `${e}/${s}`;
        (yield iA.lstat(n)).isDirectory()
          ? yield MR(n, i, t, r)
          : yield LR(n, i, r);
      }
      yield iA.chmod(e, (yield iA.stat(A)).mode);
    });
  }
  function LR(A, e, t) {
    return io(this, void 0, void 0, function* () {
      if ((yield iA.lstat(A)).isSymbolicLink()) {
        try {
          yield iA.lstat(e), yield iA.unlink(e);
        } catch (o) {
          o.code === 'EPERM' && (yield iA.chmod(e, '0666'), yield iA.unlink(e));
        }
        let r = yield iA.readlink(A);
        yield iA.symlink(r, e, iA.IS_WINDOWS ? 'junction' : null);
      } else (!(yield iA.exists(e)) || t) && (yield iA.copyFile(A, e));
    });
  }
});
var YR = B((Ge) => {
  'use strict';
  var v_ =
      (Ge && Ge.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t),
              Object.defineProperty(A, r, {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              });
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    O_ =
      (Ge && Ge.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    ln =
      (Ge && Ge.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' && Object.hasOwnProperty.call(A, t) && v_(e, A, t);
        return O_(e, A), e;
      },
    xR =
      (Ge && Ge.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(Ge, '__esModule', { value: !0 });
  Ge.argStringToArray = Ge.ToolRunner = void 0;
  var eE = ln(require('os')),
    OR = ln(require('events')),
    Y_ = ln(require('child_process')),
    J_ = ln(require('path')),
    H_ = ln(GR()),
    vR = ln(yu()),
    V_ = require('timers'),
    tE = process.platform === 'win32',
    mu = class extends OR.EventEmitter {
      constructor(e, t, r) {
        if ((super(), !e))
          throw new Error("Parameter 'toolPath' cannot be null or empty.");
        (this.toolPath = e), (this.args = t || []), (this.options = r || {});
      }
      _debug(e) {
        this.options.listeners &&
          this.options.listeners.debug &&
          this.options.listeners.debug(e);
      }
      _getCommandString(e, t) {
        let r = this._getSpawnFileName(),
          o = this._getSpawnArgs(e),
          s = t ? '' : '[command]';
        if (tE)
          if (this._isCmdFile()) {
            s += r;
            for (let n of o) s += ` ${n}`;
          } else if (e.windowsVerbatimArguments) {
            s += `"${r}"`;
            for (let n of o) s += ` ${n}`;
          } else {
            s += this._windowsQuoteCmdArg(r);
            for (let n of o) s += ` ${this._windowsQuoteCmdArg(n)}`;
          }
        else {
          s += r;
          for (let n of o) s += ` ${n}`;
        }
        return s;
      }
      _processLineBuffer(e, t, r) {
        try {
          let o = t + e.toString(),
            s = o.indexOf(eE.EOL);
          for (; s > -1; ) {
            let n = o.substring(0, s);
            r(n), (o = o.substring(s + eE.EOL.length)), (s = o.indexOf(eE.EOL));
          }
          return o;
        } catch (o) {
          return (
            this._debug(`error processing line. Failed with error ${o}`), ''
          );
        }
      }
      _getSpawnFileName() {
        return tE && this._isCmdFile()
          ? process.env.COMSPEC || 'cmd.exe'
          : this.toolPath;
      }
      _getSpawnArgs(e) {
        if (tE && this._isCmdFile()) {
          let t = `/D /S /C "${this._windowsQuoteCmdArg(this.toolPath)}`;
          for (let r of this.args)
            (t += ' '),
              (t += e.windowsVerbatimArguments
                ? r
                : this._windowsQuoteCmdArg(r));
          return (t += '"'), [t];
        }
        return this.args;
      }
      _endsWith(e, t) {
        return e.endsWith(t);
      }
      _isCmdFile() {
        let e = this.toolPath.toUpperCase();
        return this._endsWith(e, '.CMD') || this._endsWith(e, '.BAT');
      }
      _windowsQuoteCmdArg(e) {
        if (!this._isCmdFile()) return this._uvQuoteCmdArg(e);
        if (!e) return '""';
        let t = [
            ' ',
            '	',
            '&',
            '(',
            ')',
            '[',
            ']',
            '{',
            '}',
            '^',
            '=',
            ';',
            '!',
            "'",
            '+',
            ',',
            '`',
            '~',
            '|',
            '<',
            '>',
            '"',
          ],
          r = !1;
        for (let n of e)
          if (t.some((i) => i === n)) {
            r = !0;
            break;
          }
        if (!r) return e;
        let o = '"',
          s = !0;
        for (let n = e.length; n > 0; n--)
          (o += e[n - 1]),
            s && e[n - 1] === '\\'
              ? (o += '\\')
              : e[n - 1] === '"'
                ? ((s = !0), (o += '"'))
                : (s = !1);
        return (o += '"'), o.split('').reverse().join('');
      }
      _uvQuoteCmdArg(e) {
        if (!e) return '""';
        if (!e.includes(' ') && !e.includes('	') && !e.includes('"')) return e;
        if (!e.includes('"') && !e.includes('\\')) return `"${e}"`;
        let t = '"',
          r = !0;
        for (let o = e.length; o > 0; o--)
          (t += e[o - 1]),
            r && e[o - 1] === '\\'
              ? (t += '\\')
              : e[o - 1] === '"'
                ? ((r = !0), (t += '\\'))
                : (r = !1);
        return (t += '"'), t.split('').reverse().join('');
      }
      _cloneExecOptions(e) {
        e = e || {};
        let t = {
          cwd: e.cwd || process.cwd(),
          env: e.env || process.env,
          silent: e.silent || !1,
          windowsVerbatimArguments: e.windowsVerbatimArguments || !1,
          failOnStdErr: e.failOnStdErr || !1,
          ignoreReturnCode: e.ignoreReturnCode || !1,
          delay: e.delay || 1e4,
        };
        return (
          (t.outStream = e.outStream || process.stdout),
          (t.errStream = e.errStream || process.stderr),
          t
        );
      }
      _getSpawnOptions(e, t) {
        e = e || {};
        let r = {};
        return (
          (r.cwd = e.cwd),
          (r.env = e.env),
          (r.windowsVerbatimArguments =
            e.windowsVerbatimArguments || this._isCmdFile()),
          e.windowsVerbatimArguments && (r.argv0 = `"${t}"`),
          r
        );
      }
      exec() {
        return xR(this, void 0, void 0, function* () {
          return (
            !vR.isRooted(this.toolPath) &&
              (this.toolPath.includes('/') ||
                (tE && this.toolPath.includes('\\'))) &&
              (this.toolPath = J_.resolve(
                process.cwd(),
                this.options.cwd || process.cwd(),
                this.toolPath,
              )),
            (this.toolPath = yield H_.which(this.toolPath, !0)),
            new Promise((e, t) =>
              xR(this, void 0, void 0, function* () {
                this._debug(`exec tool: ${this.toolPath}`),
                  this._debug('arguments:');
                for (let c of this.args) this._debug(`   ${c}`);
                let r = this._cloneExecOptions(this.options);
                !r.silent &&
                  r.outStream &&
                  r.outStream.write(this._getCommandString(r) + eE.EOL);
                let o = new ku(r, this.toolPath);
                if (
                  (o.on('debug', (c) => {
                    this._debug(c);
                  }),
                  this.options.cwd && !(yield vR.exists(this.options.cwd)))
                )
                  return t(
                    new Error(`The cwd: ${this.options.cwd} does not exist!`),
                  );
                let s = this._getSpawnFileName(),
                  n = Y_.spawn(
                    s,
                    this._getSpawnArgs(r),
                    this._getSpawnOptions(this.options, s),
                  ),
                  i = '';
                n.stdout &&
                  n.stdout.on('data', (c) => {
                    this.options.listeners &&
                      this.options.listeners.stdout &&
                      this.options.listeners.stdout(c),
                      !r.silent && r.outStream && r.outStream.write(c),
                      (i = this._processLineBuffer(c, i, (g) => {
                        this.options.listeners &&
                          this.options.listeners.stdline &&
                          this.options.listeners.stdline(g);
                      }));
                  });
                let a = '';
                if (
                  (n.stderr &&
                    n.stderr.on('data', (c) => {
                      (o.processStderr = !0),
                        this.options.listeners &&
                          this.options.listeners.stderr &&
                          this.options.listeners.stderr(c),
                        !r.silent &&
                          r.errStream &&
                          r.outStream &&
                          (r.failOnStdErr ? r.errStream : r.outStream).write(c),
                        (a = this._processLineBuffer(c, a, (g) => {
                          this.options.listeners &&
                            this.options.listeners.errline &&
                            this.options.listeners.errline(g);
                        }));
                    }),
                  n.on('error', (c) => {
                    (o.processError = c.message),
                      (o.processExited = !0),
                      (o.processClosed = !0),
                      o.CheckComplete();
                  }),
                  n.on('exit', (c) => {
                    (o.processExitCode = c),
                      (o.processExited = !0),
                      this._debug(
                        `Exit code ${c} received from tool '${this.toolPath}'`,
                      ),
                      o.CheckComplete();
                  }),
                  n.on('close', (c) => {
                    (o.processExitCode = c),
                      (o.processExited = !0),
                      (o.processClosed = !0),
                      this._debug(
                        `STDIO streams have closed for tool '${this.toolPath}'`,
                      ),
                      o.CheckComplete();
                  }),
                  o.on('done', (c, g) => {
                    i.length > 0 && this.emit('stdline', i),
                      a.length > 0 && this.emit('errline', a),
                      n.removeAllListeners(),
                      c ? t(c) : e(g);
                  }),
                  this.options.input)
                ) {
                  if (!n.stdin) throw new Error('child process missing stdin');
                  n.stdin.end(this.options.input);
                }
              }),
            )
          );
        });
      }
    };
  Ge.ToolRunner = mu;
  function q_(A) {
    let e = [],
      t = !1,
      r = !1,
      o = '';
    function s(n) {
      r && n !== '"' && (o += '\\'), (o += n), (r = !1);
    }
    for (let n = 0; n < A.length; n++) {
      let i = A.charAt(n);
      if (i === '"') {
        r ? s(i) : (t = !t);
        continue;
      }
      if (i === '\\' && r) {
        s(i);
        continue;
      }
      if (i === '\\' && t) {
        r = !0;
        continue;
      }
      if (i === ' ' && !t) {
        o.length > 0 && (e.push(o), (o = ''));
        continue;
      }
      s(i);
    }
    return o.length > 0 && e.push(o.trim()), e;
  }
  Ge.argStringToArray = q_;
  var ku = class A extends OR.EventEmitter {
    constructor(e, t) {
      if (
        (super(),
        (this.processClosed = !1),
        (this.processError = ''),
        (this.processExitCode = 0),
        (this.processExited = !1),
        (this.processStderr = !1),
        (this.delay = 1e4),
        (this.done = !1),
        (this.timeout = null),
        !t)
      )
        throw new Error('toolPath must not be empty');
      (this.options = e),
        (this.toolPath = t),
        e.delay && (this.delay = e.delay);
    }
    CheckComplete() {
      this.done ||
        (this.processClosed
          ? this._setResult()
          : this.processExited &&
            (this.timeout = V_.setTimeout(A.HandleTimeout, this.delay, this)));
    }
    _debug(e) {
      this.emit('debug', e);
    }
    _setResult() {
      let e;
      this.processExited &&
        (this.processError
          ? (e = new Error(
              `There was an error when attempting to execute the process '${this.toolPath}'. This may indicate the process failed to start. Error: ${this.processError}`,
            ))
          : this.processExitCode !== 0 && !this.options.ignoreReturnCode
            ? (e = new Error(
                `The process '${this.toolPath}' failed with exit code ${this.processExitCode}`,
              ))
            : this.processStderr &&
              this.options.failOnStdErr &&
              (e = new Error(
                `The process '${this.toolPath}' failed because one or more lines were written to the STDERR stream`,
              ))),
        this.timeout && (clearTimeout(this.timeout), (this.timeout = null)),
        (this.done = !0),
        this.emit('done', e, this.processExitCode);
    }
    static HandleTimeout(e) {
      if (!e.done) {
        if (!e.processClosed && e.processExited) {
          let t = `The STDIO streams did not close within ${e.delay / 1e3} seconds of the exit event from process '${e.toolPath}'. This may indicate a child process inherited the STDIO streams and has not yet exited.`;
          e._debug(t);
        }
        e._setResult();
      }
    }
  };
});
var PR = B((xe) => {
  'use strict';
  var P_ =
      (xe && xe.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t),
              Object.defineProperty(A, r, {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              });
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    W_ =
      (xe && xe.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    __ =
      (xe && xe.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' && Object.hasOwnProperty.call(A, t) && P_(e, A, t);
        return W_(e, A), e;
      },
    VR =
      (xe && xe.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(xe, '__esModule', { value: !0 });
  xe.getExecOutput = xe.exec = void 0;
  var JR = require('string_decoder'),
    HR = __(YR());
  function qR(A, e, t) {
    return VR(this, void 0, void 0, function* () {
      let r = HR.argStringToArray(A);
      if (r.length === 0)
        throw new Error("Parameter 'commandLine' cannot be null or empty.");
      let o = r[0];
      return (
        (e = r.slice(1).concat(e || [])), new HR.ToolRunner(o, e, t).exec()
      );
    });
  }
  xe.exec = qR;
  function j_(A, e, t) {
    var r, o;
    return VR(this, void 0, void 0, function* () {
      let s = '',
        n = '',
        i = new JR.StringDecoder('utf8'),
        a = new JR.StringDecoder('utf8'),
        c = (r = t?.listeners) === null || r === void 0 ? void 0 : r.stdout,
        g = (o = t?.listeners) === null || o === void 0 ? void 0 : o.stderr,
        E = (h) => {
          (n += a.write(h)), g && g(h);
        },
        l = (h) => {
          (s += i.write(h)), c && c(h);
        },
        C = Object.assign(Object.assign({}, t?.listeners), {
          stdout: l,
          stderr: E,
        }),
        Q = yield qR(
          A,
          e,
          Object.assign(Object.assign({}, t), { listeners: C }),
        );
      return (
        (s += i.end()), (n += a.end()), { exitCode: Q, stdout: s, stderr: n }
      );
    });
  }
  xe.getExecOutput = j_;
});
var _R = B((tA) => {
  'use strict';
  var Z_ =
      (tA && tA.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    K_ =
      (tA && tA.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    X_ =
      (tA && tA.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              Z_(e, A, t);
        return K_(e, A), e;
      },
    oE =
      (tA && tA.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      },
    z_ =
      (tA && tA.__importDefault) ||
      function (A) {
        return A && A.__esModule ? A : { default: A };
      };
  Object.defineProperty(tA, '__esModule', { value: !0 });
  tA.getDetails =
    tA.isLinux =
    tA.isMacOS =
    tA.isWindows =
    tA.arch =
    tA.platform =
      void 0;
  var WR = z_(require('os')),
    rE = X_(PR()),
    $_ = () =>
      oE(void 0, void 0, void 0, function* () {
        let { stdout: A } = yield rE.getExecOutput(
            'powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Version"',
            void 0,
            { silent: !0 },
          ),
          { stdout: e } = yield rE.getExecOutput(
            'powershell -command "(Get-CimInstance -ClassName Win32_OperatingSystem).Caption"',
            void 0,
            { silent: !0 },
          );
        return { name: e.trim(), version: A.trim() };
      }),
    A1 = () =>
      oE(void 0, void 0, void 0, function* () {
        var A, e, t, r;
        let { stdout: o } = yield rE.getExecOutput('sw_vers', void 0, {
            silent: !0,
          }),
          s =
            (e =
              (A = o.match(/ProductVersion:\s*(.+)/)) === null || A === void 0
                ? void 0
                : A[1]) !== null && e !== void 0
              ? e
              : '';
        return {
          name:
            (r =
              (t = o.match(/ProductName:\s*(.+)/)) === null || t === void 0
                ? void 0
                : t[1]) !== null && r !== void 0
              ? r
              : '',
          version: s,
        };
      }),
    e1 = () =>
      oE(void 0, void 0, void 0, function* () {
        let { stdout: A } = yield rE.getExecOutput(
            'lsb_release',
            ['-i', '-r', '-s'],
            { silent: !0 },
          ),
          [e, t] = A.trim().split(`
`);
        return { name: e, version: t };
      });
  tA.platform = WR.default.platform();
  tA.arch = WR.default.arch();
  tA.isWindows = tA.platform === 'win32';
  tA.isMacOS = tA.platform === 'darwin';
  tA.isLinux = tA.platform === 'linux';
  function t1() {
    return oE(this, void 0, void 0, function* () {
      return Object.assign(
        Object.assign({}, yield tA.isWindows ? $_() : tA.isMacOS ? A1() : e1()),
        {
          platform: tA.platform,
          arch: tA.arch,
          isWindows: tA.isWindows,
          isMacOS: tA.isMacOS,
          isLinux: tA.isLinux,
        },
      );
    });
  }
  tA.getDetails = t1;
});
var En = B((R) => {
  'use strict';
  var r1 =
      (R && R.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    o1 =
      (R && R.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    bu =
      (R && R.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              r1(e, A, t);
        return o1(e, A), e;
      },
    jR =
      (R && R.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(R, '__esModule', { value: !0 });
  R.platform =
    R.toPlatformPath =
    R.toWin32Path =
    R.toPosixPath =
    R.markdownSummary =
    R.summary =
    R.getIDToken =
    R.getState =
    R.saveState =
    R.group =
    R.endGroup =
    R.startGroup =
    R.info =
    R.notice =
    R.warning =
    R.error =
    R.debug =
    R.isDebug =
    R.setFailed =
    R.setCommandEcho =
    R.setOutput =
    R.getBooleanInput =
    R.getMultilineInput =
    R.getInput =
    R.addPath =
    R.setSecret =
    R.exportVariable =
    R.ExitCode =
      void 0;
  var It = mf(),
    Po = bf(),
    Qn = nc(),
    ZR = bu(require('os')),
    s1 = bu(require('path')),
    n1 = DR(),
    Ru;
  (function (A) {
    (A[(A.Success = 0)] = 'Success'), (A[(A.Failure = 1)] = 'Failure');
  })(Ru || (R.ExitCode = Ru = {}));
  function i1(A, e) {
    let t = (0, Qn.toCommandValue)(e);
    if (((process.env[A] = t), process.env.GITHUB_ENV || ''))
      return (0, Po.issueFileCommand)(
        'ENV',
        (0, Po.prepareKeyValueMessage)(A, e),
      );
    (0, It.issueCommand)('set-env', { name: A }, t);
  }
  R.exportVariable = i1;
  function a1(A) {
    (0, It.issueCommand)('add-mask', {}, A);
  }
  R.setSecret = a1;
  function c1(A) {
    process.env.GITHUB_PATH || ''
      ? (0, Po.issueFileCommand)('PATH', A)
      : (0, It.issueCommand)('add-path', {}, A),
      (process.env.PATH = `${A}${s1.delimiter}${process.env.PATH}`);
  }
  R.addPath = c1;
  function Fu(A, e) {
    let t = process.env[`INPUT_${A.replace(/ /g, '_').toUpperCase()}`] || '';
    if (e && e.required && !t)
      throw new Error(`Input required and not supplied: ${A}`);
    return e && e.trimWhitespace === !1 ? t : t.trim();
  }
  R.getInput = Fu;
  function g1(A, e) {
    let t = Fu(A, e)
      .split(`
`)
      .filter((r) => r !== '');
    return e && e.trimWhitespace === !1 ? t : t.map((r) => r.trim());
  }
  R.getMultilineInput = g1;
  function E1(A, e) {
    let t = ['true', 'True', 'TRUE'],
      r = ['false', 'False', 'FALSE'],
      o = Fu(A, e);
    if (t.includes(o)) return !0;
    if (r.includes(o)) return !1;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${A}
Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
  }
  R.getBooleanInput = E1;
  function l1(A, e) {
    if (process.env.GITHUB_OUTPUT || '')
      return (0, Po.issueFileCommand)(
        'OUTPUT',
        (0, Po.prepareKeyValueMessage)(A, e),
      );
    process.stdout.write(ZR.EOL),
      (0, It.issueCommand)(
        'set-output',
        { name: A },
        (0, Qn.toCommandValue)(e),
      );
  }
  R.setOutput = l1;
  function Q1(A) {
    (0, It.issue)('echo', A ? 'on' : 'off');
  }
  R.setCommandEcho = Q1;
  function C1(A) {
    (process.exitCode = Ru.Failure), KR(A);
  }
  R.setFailed = C1;
  function B1() {
    return process.env.RUNNER_DEBUG === '1';
  }
  R.isDebug = B1;
  function u1(A) {
    (0, It.issueCommand)('debug', {}, A);
  }
  R.debug = u1;
  function KR(A, e = {}) {
    (0, It.issueCommand)(
      'error',
      (0, Qn.toCommandProperties)(e),
      A instanceof Error ? A.toString() : A,
    );
  }
  R.error = KR;
  function h1(A, e = {}) {
    (0, It.issueCommand)(
      'warning',
      (0, Qn.toCommandProperties)(e),
      A instanceof Error ? A.toString() : A,
    );
  }
  R.warning = h1;
  function I1(A, e = {}) {
    (0, It.issueCommand)(
      'notice',
      (0, Qn.toCommandProperties)(e),
      A instanceof Error ? A.toString() : A,
    );
  }
  R.notice = I1;
  function d1(A) {
    process.stdout.write(A + ZR.EOL);
  }
  R.info = d1;
  function XR(A) {
    (0, It.issue)('group', A);
  }
  R.startGroup = XR;
  function zR() {
    (0, It.issue)('endgroup');
  }
  R.endGroup = zR;
  function f1(A, e) {
    return jR(this, void 0, void 0, function* () {
      XR(A);
      let t;
      try {
        t = yield e();
      } finally {
        zR();
      }
      return t;
    });
  }
  R.group = f1;
  function p1(A, e) {
    if (process.env.GITHUB_STATE || '')
      return (0, Po.issueFileCommand)(
        'STATE',
        (0, Po.prepareKeyValueMessage)(A, e),
      );
    (0, It.issueCommand)('save-state', { name: A }, (0, Qn.toCommandValue)(e));
  }
  R.saveState = p1;
  function w1(A) {
    return process.env[`STATE_${A}`] || '';
  }
  R.getState = w1;
  function y1(A) {
    return jR(this, void 0, void 0, function* () {
      return yield n1.OidcClient.getIDToken(A);
    });
  }
  R.getIDToken = y1;
  var D1 = pu();
  Object.defineProperty(R, 'summary', {
    enumerable: !0,
    get: function () {
      return D1.summary;
    },
  });
  var m1 = pu();
  Object.defineProperty(R, 'markdownSummary', {
    enumerable: !0,
    get: function () {
      return m1.markdownSummary;
    },
  });
  var Su = kR();
  Object.defineProperty(R, 'toPosixPath', {
    enumerable: !0,
    get: function () {
      return Su.toPosixPath;
    },
  });
  Object.defineProperty(R, 'toWin32Path', {
    enumerable: !0,
    get: function () {
      return Su.toWin32Path;
    },
  });
  Object.defineProperty(R, 'toPlatformPath', {
    enumerable: !0,
    get: function () {
      return Su.toPlatformPath;
    },
  });
  R.platform = bu(_R());
});
var Nu = B((sE) => {
  'use strict';
  Object.defineProperty(sE, '__esModule', { value: !0 });
  sE.Context = void 0;
  var $R = require('fs'),
    k1 = require('os'),
    Tu = class {
      constructor() {
        var e, t, r;
        if (((this.payload = {}), process.env.GITHUB_EVENT_PATH))
          if ((0, $R.existsSync)(process.env.GITHUB_EVENT_PATH))
            this.payload = JSON.parse(
              (0, $R.readFileSync)(process.env.GITHUB_EVENT_PATH, {
                encoding: 'utf8',
              }),
            );
          else {
            let o = process.env.GITHUB_EVENT_PATH;
            process.stdout.write(
              `GITHUB_EVENT_PATH ${o} does not exist${k1.EOL}`,
            );
          }
        (this.eventName = process.env.GITHUB_EVENT_NAME),
          (this.sha = process.env.GITHUB_SHA),
          (this.ref = process.env.GITHUB_REF),
          (this.workflow = process.env.GITHUB_WORKFLOW),
          (this.action = process.env.GITHUB_ACTION),
          (this.actor = process.env.GITHUB_ACTOR),
          (this.job = process.env.GITHUB_JOB),
          (this.runNumber = parseInt(process.env.GITHUB_RUN_NUMBER, 10)),
          (this.runId = parseInt(process.env.GITHUB_RUN_ID, 10)),
          (this.apiUrl =
            (e = process.env.GITHUB_API_URL) !== null && e !== void 0
              ? e
              : 'https://api.github.com'),
          (this.serverUrl =
            (t = process.env.GITHUB_SERVER_URL) !== null && t !== void 0
              ? t
              : 'https://github.com'),
          (this.graphqlUrl =
            (r = process.env.GITHUB_GRAPHQL_URL) !== null && r !== void 0
              ? r
              : 'https://api.github.com/graphql');
      }
      get issue() {
        let e = this.payload;
        return Object.assign(Object.assign({}, this.repo), {
          number: (e.issue || e.pull_request || e).number,
        });
      }
      get repo() {
        if (process.env.GITHUB_REPOSITORY) {
          let [e, t] = process.env.GITHUB_REPOSITORY.split('/');
          return { owner: e, repo: t };
        }
        if (this.payload.repository)
          return {
            owner: this.payload.repository.owner.login,
            repo: this.payload.repository.name,
          };
        throw new Error(
          "context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'",
        );
      }
    };
  sE.Context = Tu;
});
var FA = B((MoA, Ab) => {
  Ab.exports = {
    kClose: Symbol('close'),
    kDestroy: Symbol('destroy'),
    kDispatch: Symbol('dispatch'),
    kUrl: Symbol('url'),
    kWriting: Symbol('writing'),
    kResuming: Symbol('resuming'),
    kQueue: Symbol('queue'),
    kConnect: Symbol('connect'),
    kConnecting: Symbol('connecting'),
    kKeepAliveDefaultTimeout: Symbol('default keep alive timeout'),
    kKeepAliveMaxTimeout: Symbol('max keep alive timeout'),
    kKeepAliveTimeoutThreshold: Symbol('keep alive timeout threshold'),
    kKeepAliveTimeoutValue: Symbol('keep alive timeout'),
    kKeepAlive: Symbol('keep alive'),
    kHeadersTimeout: Symbol('headers timeout'),
    kBodyTimeout: Symbol('body timeout'),
    kServerName: Symbol('server name'),
    kLocalAddress: Symbol('local address'),
    kHost: Symbol('host'),
    kNoRef: Symbol('no ref'),
    kBodyUsed: Symbol('used'),
    kBody: Symbol('abstracted request body'),
    kRunning: Symbol('running'),
    kBlocking: Symbol('blocking'),
    kPending: Symbol('pending'),
    kSize: Symbol('size'),
    kBusy: Symbol('busy'),
    kQueued: Symbol('queued'),
    kFree: Symbol('free'),
    kConnected: Symbol('connected'),
    kClosed: Symbol('closed'),
    kNeedDrain: Symbol('need drain'),
    kReset: Symbol('reset'),
    kDestroyed: Symbol.for('nodejs.stream.destroyed'),
    kResume: Symbol('resume'),
    kOnError: Symbol('on error'),
    kMaxHeadersSize: Symbol('max headers size'),
    kRunningIdx: Symbol('running index'),
    kPendingIdx: Symbol('pending index'),
    kError: Symbol('error'),
    kClients: Symbol('clients'),
    kClient: Symbol('client'),
    kParser: Symbol('parser'),
    kOnDestroyed: Symbol('destroy callbacks'),
    kPipelining: Symbol('pipelining'),
    kSocket: Symbol('socket'),
    kHostHeader: Symbol('host header'),
    kConnector: Symbol('connector'),
    kStrictContentLength: Symbol('strict content length'),
    kMaxRedirections: Symbol('maxRedirections'),
    kMaxRequests: Symbol('maxRequestsPerClient'),
    kProxy: Symbol('proxy agent options'),
    kCounter: Symbol('socket request counter'),
    kInterceptors: Symbol('dispatch interceptors'),
    kMaxResponseSize: Symbol('max response size'),
    kHTTP2Session: Symbol('http2Session'),
    kHTTP2SessionState: Symbol('http2Session state'),
    kRetryHandlerDefaultRetry: Symbol('retry agent default retry'),
    kConstruct: Symbol('constructable'),
    kListeners: Symbol('listeners'),
    kHTTPContext: Symbol('http context'),
    kMaxConcurrentStreams: Symbol('max concurrent streams'),
    kNoProxyAgent: Symbol('no proxy agent'),
    kHttpProxyAgent: Symbol('http proxy agent'),
    kHttpsProxyAgent: Symbol('https proxy agent'),
  };
});
var aA = B((LoA, eb) => {
  'use strict';
  var TA = class extends Error {
      constructor(e) {
        super(e), (this.name = 'UndiciError'), (this.code = 'UND_ERR');
      }
    },
    Uu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'ConnectTimeoutError'),
          (this.message = e || 'Connect Timeout Error'),
          (this.code = 'UND_ERR_CONNECT_TIMEOUT');
      }
    },
    Mu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'HeadersTimeoutError'),
          (this.message = e || 'Headers Timeout Error'),
          (this.code = 'UND_ERR_HEADERS_TIMEOUT');
      }
    },
    Lu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'HeadersOverflowError'),
          (this.message = e || 'Headers Overflow Error'),
          (this.code = 'UND_ERR_HEADERS_OVERFLOW');
      }
    },
    Gu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'BodyTimeoutError'),
          (this.message = e || 'Body Timeout Error'),
          (this.code = 'UND_ERR_BODY_TIMEOUT');
      }
    },
    xu = class extends TA {
      constructor(e, t, r, o) {
        super(e),
          (this.name = 'ResponseStatusCodeError'),
          (this.message = e || 'Response Status Code Error'),
          (this.code = 'UND_ERR_RESPONSE_STATUS_CODE'),
          (this.body = o),
          (this.status = t),
          (this.statusCode = t),
          (this.headers = r);
      }
    },
    vu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'InvalidArgumentError'),
          (this.message = e || 'Invalid Argument Error'),
          (this.code = 'UND_ERR_INVALID_ARG');
      }
    },
    Ou = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'InvalidReturnValueError'),
          (this.message = e || 'Invalid Return Value Error'),
          (this.code = 'UND_ERR_INVALID_RETURN_VALUE');
      }
    },
    nE = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'AbortError'),
          (this.message = e || 'The operation was aborted');
      }
    },
    Yu = class extends nE {
      constructor(e) {
        super(e),
          (this.name = 'AbortError'),
          (this.message = e || 'Request aborted'),
          (this.code = 'UND_ERR_ABORTED');
      }
    },
    Ju = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'InformationalError'),
          (this.message = e || 'Request information'),
          (this.code = 'UND_ERR_INFO');
      }
    },
    Hu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'RequestContentLengthMismatchError'),
          (this.message =
            e || 'Request body length does not match content-length header'),
          (this.code = 'UND_ERR_REQ_CONTENT_LENGTH_MISMATCH');
      }
    },
    Vu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'ResponseContentLengthMismatchError'),
          (this.message =
            e || 'Response body length does not match content-length header'),
          (this.code = 'UND_ERR_RES_CONTENT_LENGTH_MISMATCH');
      }
    },
    qu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'ClientDestroyedError'),
          (this.message = e || 'The client is destroyed'),
          (this.code = 'UND_ERR_DESTROYED');
      }
    },
    Pu = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'ClientClosedError'),
          (this.message = e || 'The client is closed'),
          (this.code = 'UND_ERR_CLOSED');
      }
    },
    Wu = class extends TA {
      constructor(e, t) {
        super(e),
          (this.name = 'SocketError'),
          (this.message = e || 'Socket error'),
          (this.code = 'UND_ERR_SOCKET'),
          (this.socket = t);
      }
    },
    _u = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'NotSupportedError'),
          (this.message = e || 'Not supported error'),
          (this.code = 'UND_ERR_NOT_SUPPORTED');
      }
    },
    ju = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'MissingUpstreamError'),
          (this.message =
            e || 'No upstream has been added to the BalancedPool'),
          (this.code = 'UND_ERR_BPL_MISSING_UPSTREAM');
      }
    },
    Zu = class extends Error {
      constructor(e, t, r) {
        super(e),
          (this.name = 'HTTPParserError'),
          (this.code = t ? `HPE_${t}` : void 0),
          (this.data = r ? r.toString() : void 0);
      }
    },
    Ku = class extends TA {
      constructor(e) {
        super(e),
          (this.name = 'ResponseExceededMaxSizeError'),
          (this.message = e || 'Response content exceeded max size'),
          (this.code = 'UND_ERR_RES_EXCEEDED_MAX_SIZE');
      }
    },
    Xu = class extends TA {
      constructor(e, t, { headers: r, data: o }) {
        super(e),
          (this.name = 'RequestRetryError'),
          (this.message = e || 'Request retry error'),
          (this.code = 'UND_ERR_REQ_RETRY'),
          (this.statusCode = t),
          (this.data = o),
          (this.headers = r);
      }
    },
    zu = class extends TA {
      constructor(e, t, { headers: r, data: o }) {
        super(e),
          (this.name = 'ResponseError'),
          (this.message = e || 'Response error'),
          (this.code = 'UND_ERR_RESPONSE'),
          (this.statusCode = t),
          (this.data = o),
          (this.headers = r);
      }
    },
    $u = class extends TA {
      constructor(e, t, r) {
        super(t, { cause: e, ...(r ?? {}) }),
          (this.name = 'SecureProxyConnectionError'),
          (this.message = t || 'Secure Proxy Connection failed'),
          (this.code = 'UND_ERR_PRX_TLS'),
          (this.cause = e);
      }
    };
  eb.exports = {
    AbortError: nE,
    HTTPParserError: Zu,
    UndiciError: TA,
    HeadersTimeoutError: Mu,
    HeadersOverflowError: Lu,
    BodyTimeoutError: Gu,
    RequestContentLengthMismatchError: Hu,
    ConnectTimeoutError: Uu,
    ResponseStatusCodeError: xu,
    InvalidArgumentError: vu,
    InvalidReturnValueError: Ou,
    RequestAbortedError: Yu,
    ClientDestroyedError: qu,
    ClientClosedError: Pu,
    InformationalError: Ju,
    SocketError: Wu,
    NotSupportedError: _u,
    ResponseContentLengthMismatchError: Vu,
    BalancedPoolMissingUpstreamError: ju,
    ResponseExceededMaxSizeError: Ku,
    RequestRetryError: Xu,
    ResponseError: zu,
    SecureProxyConnectionError: $u,
  };
});
var aE = B((GoA, tb) => {
  'use strict';
  var iE = {},
    Ah = [
      'Accept',
      'Accept-Encoding',
      'Accept-Language',
      'Accept-Ranges',
      'Access-Control-Allow-Credentials',
      'Access-Control-Allow-Headers',
      'Access-Control-Allow-Methods',
      'Access-Control-Allow-Origin',
      'Access-Control-Expose-Headers',
      'Access-Control-Max-Age',
      'Access-Control-Request-Headers',
      'Access-Control-Request-Method',
      'Age',
      'Allow',
      'Alt-Svc',
      'Alt-Used',
      'Authorization',
      'Cache-Control',
      'Clear-Site-Data',
      'Connection',
      'Content-Disposition',
      'Content-Encoding',
      'Content-Language',
      'Content-Length',
      'Content-Location',
      'Content-Range',
      'Content-Security-Policy',
      'Content-Security-Policy-Report-Only',
      'Content-Type',
      'Cookie',
      'Cross-Origin-Embedder-Policy',
      'Cross-Origin-Opener-Policy',
      'Cross-Origin-Resource-Policy',
      'Date',
      'Device-Memory',
      'Downlink',
      'ECT',
      'ETag',
      'Expect',
      'Expect-CT',
      'Expires',
      'Forwarded',
      'From',
      'Host',
      'If-Match',
      'If-Modified-Since',
      'If-None-Match',
      'If-Range',
      'If-Unmodified-Since',
      'Keep-Alive',
      'Last-Modified',
      'Link',
      'Location',
      'Max-Forwards',
      'Origin',
      'Permissions-Policy',
      'Pragma',
      'Proxy-Authenticate',
      'Proxy-Authorization',
      'RTT',
      'Range',
      'Referer',
      'Referrer-Policy',
      'Refresh',
      'Retry-After',
      'Sec-WebSocket-Accept',
      'Sec-WebSocket-Extensions',
      'Sec-WebSocket-Key',
      'Sec-WebSocket-Protocol',
      'Sec-WebSocket-Version',
      'Server',
      'Server-Timing',
      'Service-Worker-Allowed',
      'Service-Worker-Navigation-Preload',
      'Set-Cookie',
      'SourceMap',
      'Strict-Transport-Security',
      'Supports-Loading-Mode',
      'TE',
      'Timing-Allow-Origin',
      'Trailer',
      'Transfer-Encoding',
      'Upgrade',
      'Upgrade-Insecure-Requests',
      'User-Agent',
      'Vary',
      'Via',
      'WWW-Authenticate',
      'X-Content-Type-Options',
      'X-DNS-Prefetch-Control',
      'X-Frame-Options',
      'X-Permitted-Cross-Domain-Policies',
      'X-Powered-By',
      'X-Requested-With',
      'X-XSS-Protection',
    ];
  for (let A = 0; A < Ah.length; ++A) {
    let e = Ah[A],
      t = e.toLowerCase();
    iE[e] = iE[t] = t;
  }
  Object.setPrototypeOf(iE, null);
  tb.exports = { wellknownHeaderNames: Ah, headerNameLowerCasedRecord: iE };
});
var nb = B((xoA, sb) => {
  'use strict';
  var { wellknownHeaderNames: rb, headerNameLowerCasedRecord: R1 } = aE(),
    eh = class A {
      value = null;
      left = null;
      middle = null;
      right = null;
      code;
      constructor(e, t, r) {
        if (r === void 0 || r >= e.length) throw new TypeError('Unreachable');
        if ((this.code = e.charCodeAt(r)) > 127)
          throw new TypeError('key must be ascii string');
        e.length !== ++r ? (this.middle = new A(e, t, r)) : (this.value = t);
      }
      add(e, t) {
        let r = e.length;
        if (r === 0) throw new TypeError('Unreachable');
        let o = 0,
          s = this;
        for (;;) {
          let n = e.charCodeAt(o);
          if (n > 127) throw new TypeError('key must be ascii string');
          if (s.code === n)
            if (r === ++o) {
              s.value = t;
              break;
            } else if (s.middle !== null) s = s.middle;
            else {
              s.middle = new A(e, t, o);
              break;
            }
          else if (s.code < n)
            if (s.left !== null) s = s.left;
            else {
              s.left = new A(e, t, o);
              break;
            }
          else if (s.right !== null) s = s.right;
          else {
            s.right = new A(e, t, o);
            break;
          }
        }
      }
      search(e) {
        let t = e.length,
          r = 0,
          o = this;
        for (; o !== null && r < t; ) {
          let s = e[r];
          for (s <= 90 && s >= 65 && (s |= 32); o !== null; ) {
            if (s === o.code) {
              if (t === ++r) return o;
              o = o.middle;
              break;
            }
            o = o.code < s ? o.left : o.right;
          }
        }
        return null;
      }
    },
    cE = class {
      node = null;
      insert(e, t) {
        this.node === null
          ? (this.node = new eh(e, t, 0))
          : this.node.add(e, t);
      }
      lookup(e) {
        return this.node?.search(e)?.value ?? null;
      }
    },
    ob = new cE();
  for (let A = 0; A < rb.length; ++A) {
    let e = R1[rb[A]];
    ob.insert(e, e);
  }
  sb.exports = { TernarySearchTree: cE, tree: ob };
});
var X = B((voA, wb) => {
  'use strict';
  var Xi = require('node:assert'),
    { kDestroyed: ab, kBodyUsed: Cn, kListeners: th, kBody: ib } = FA(),
    { IncomingMessage: b1 } = require('node:http'),
    lE = require('node:stream'),
    F1 = require('node:net'),
    { Blob: S1 } = require('node:buffer'),
    T1 = require('node:util'),
    { stringify: N1 } = require('node:querystring'),
    { EventEmitter: U1 } = require('node:events'),
    { InvalidArgumentError: ee } = aA(),
    { headerNameLowerCasedRecord: M1 } = aE(),
    { tree: cb } = nb(),
    [L1, G1] = process.versions.node.split('.').map((A) => Number(A)),
    EE = class {
      constructor(e) {
        (this[ib] = e), (this[Cn] = !1);
      }
      async *[Symbol.asyncIterator]() {
        Xi(!this[Cn], 'disturbed'), (this[Cn] = !0), yield* this[ib];
      }
    };
  function x1(A) {
    return QE(A)
      ? (Cb(A) === 0 &&
          A.on('data', function () {
            Xi(!1);
          }),
        typeof A.readableDidRead != 'boolean' &&
          ((A[Cn] = !1),
          U1.prototype.on.call(A, 'data', function () {
            this[Cn] = !0;
          })),
        A)
      : A && typeof A.pipeTo == 'function'
        ? new EE(A)
        : A && typeof A != 'string' && !ArrayBuffer.isView(A) && Qb(A)
          ? new EE(A)
          : A;
  }
  function v1() {}
  function QE(A) {
    return (
      A &&
      typeof A == 'object' &&
      typeof A.pipe == 'function' &&
      typeof A.on == 'function'
    );
  }
  function gb(A) {
    if (A === null) return !1;
    if (A instanceof S1) return !0;
    if (typeof A != 'object') return !1;
    {
      let e = A[Symbol.toStringTag];
      return (
        (e === 'Blob' || e === 'File') &&
        (('stream' in A && typeof A.stream == 'function') ||
          ('arrayBuffer' in A && typeof A.arrayBuffer == 'function'))
      );
    }
  }
  function O1(A, e) {
    if (A.includes('?') || A.includes('#'))
      throw new Error(
        'Query params cannot be passed when url already contains "?" or "#".',
      );
    let t = N1(e);
    return t && (A += '?' + t), A;
  }
  function Eb(A) {
    let e = parseInt(A, 10);
    return e === Number(A) && e >= 0 && e <= 65535;
  }
  function gE(A) {
    return (
      A != null &&
      A[0] === 'h' &&
      A[1] === 't' &&
      A[2] === 't' &&
      A[3] === 'p' &&
      (A[4] === ':' || (A[4] === 's' && A[5] === ':'))
    );
  }
  function lb(A) {
    if (typeof A == 'string') {
      if (((A = new URL(A)), !gE(A.origin || A.protocol)))
        throw new ee(
          'Invalid URL protocol: the URL must start with `http:` or `https:`.',
        );
      return A;
    }
    if (!A || typeof A != 'object')
      throw new ee('Invalid URL: The URL argument must be a non-null object.');
    if (!(A instanceof URL)) {
      if (A.port != null && A.port !== '' && Eb(A.port) === !1)
        throw new ee(
          'Invalid URL: port must be a valid integer or a string representation of an integer.',
        );
      if (A.path != null && typeof A.path != 'string')
        throw new ee(
          'Invalid URL path: the path must be a string or null/undefined.',
        );
      if (A.pathname != null && typeof A.pathname != 'string')
        throw new ee(
          'Invalid URL pathname: the pathname must be a string or null/undefined.',
        );
      if (A.hostname != null && typeof A.hostname != 'string')
        throw new ee(
          'Invalid URL hostname: the hostname must be a string or null/undefined.',
        );
      if (A.origin != null && typeof A.origin != 'string')
        throw new ee(
          'Invalid URL origin: the origin must be a string or null/undefined.',
        );
      if (!gE(A.origin || A.protocol))
        throw new ee(
          'Invalid URL protocol: the URL must start with `http:` or `https:`.',
        );
      let e = A.port != null ? A.port : A.protocol === 'https:' ? 443 : 80,
        t =
          A.origin != null
            ? A.origin
            : `${A.protocol || ''}//${A.hostname || ''}:${e}`,
        r = A.path != null ? A.path : `${A.pathname || ''}${A.search || ''}`;
      return (
        t[t.length - 1] === '/' && (t = t.slice(0, t.length - 1)),
        r && r[0] !== '/' && (r = `/${r}`),
        new URL(`${t}${r}`)
      );
    }
    if (!gE(A.origin || A.protocol))
      throw new ee(
        'Invalid URL protocol: the URL must start with `http:` or `https:`.',
      );
    return A;
  }
  function Y1(A) {
    if (((A = lb(A)), A.pathname !== '/' || A.search || A.hash))
      throw new ee('invalid url');
    return A;
  }
  function J1(A) {
    if (A[0] === '[') {
      let t = A.indexOf(']');
      return Xi(t !== -1), A.substring(1, t);
    }
    let e = A.indexOf(':');
    return e === -1 ? A : A.substring(0, e);
  }
  function H1(A) {
    if (!A) return null;
    Xi(typeof A == 'string');
    let e = J1(A);
    return F1.isIP(e) ? '' : e;
  }
  function V1(A) {
    return JSON.parse(JSON.stringify(A));
  }
  function q1(A) {
    return A != null && typeof A[Symbol.asyncIterator] == 'function';
  }
  function Qb(A) {
    return (
      A != null &&
      (typeof A[Symbol.iterator] == 'function' ||
        typeof A[Symbol.asyncIterator] == 'function')
    );
  }
  function Cb(A) {
    if (A == null) return 0;
    if (QE(A)) {
      let e = A._readableState;
      return e &&
        e.objectMode === !1 &&
        e.ended === !0 &&
        Number.isFinite(e.length)
        ? e.length
        : null;
    } else {
      if (gb(A)) return A.size != null ? A.size : null;
      if (hb(A)) return A.byteLength;
    }
    return null;
  }
  function Bb(A) {
    return A && !!(A.destroyed || A[ab] || lE.isDestroyed?.(A));
  }
  function P1(A, e) {
    A == null ||
      !QE(A) ||
      Bb(A) ||
      (typeof A.destroy == 'function'
        ? (Object.getPrototypeOf(A).constructor === b1 && (A.socket = null),
          A.destroy(e))
        : e &&
          queueMicrotask(() => {
            A.emit('error', e);
          }),
      A.destroyed !== !0 && (A[ab] = !0));
  }
  var W1 = /timeout=(\d+)/;
  function _1(A) {
    let e = A.toString().match(W1);
    return e ? parseInt(e[1], 10) * 1e3 : null;
  }
  function ub(A) {
    return typeof A == 'string'
      ? (M1[A] ?? A.toLowerCase())
      : (cb.lookup(A) ?? A.toString('latin1').toLowerCase());
  }
  function j1(A) {
    return cb.lookup(A) ?? A.toString('latin1').toLowerCase();
  }
  function Z1(A, e) {
    e === void 0 && (e = {});
    for (let t = 0; t < A.length; t += 2) {
      let r = ub(A[t]),
        o = e[r];
      if (o)
        typeof o == 'string' && ((o = [o]), (e[r] = o)),
          o.push(A[t + 1].toString('utf8'));
      else {
        let s = A[t + 1];
        typeof s == 'string'
          ? (e[r] = s)
          : (e[r] = Array.isArray(s)
              ? s.map((n) => n.toString('utf8'))
              : s.toString('utf8'));
      }
    }
    return (
      'content-length' in e &&
        'content-disposition' in e &&
        (e['content-disposition'] = Buffer.from(
          e['content-disposition'],
        ).toString('latin1')),
      e
    );
  }
  function K1(A) {
    let e = A.length,
      t = new Array(e),
      r = !1,
      o = -1,
      s,
      n,
      i = 0;
    for (let a = 0; a < A.length; a += 2)
      (s = A[a]),
        (n = A[a + 1]),
        typeof s != 'string' && (s = s.toString()),
        typeof n != 'string' && (n = n.toString('utf8')),
        (i = s.length),
        i === 14 &&
        s[7] === '-' &&
        (s === 'content-length' || s.toLowerCase() === 'content-length')
          ? (r = !0)
          : i === 19 &&
            s[7] === '-' &&
            (s === 'content-disposition' ||
              s.toLowerCase() === 'content-disposition') &&
            (o = a + 1),
        (t[a] = s),
        (t[a + 1] = n);
    return r && o !== -1 && (t[o] = Buffer.from(t[o]).toString('latin1')), t;
  }
  function hb(A) {
    return A instanceof Uint8Array || Buffer.isBuffer(A);
  }
  function X1(A, e, t) {
    if (!A || typeof A != 'object') throw new ee('handler must be an object');
    if (typeof A.onConnect != 'function')
      throw new ee('invalid onConnect method');
    if (typeof A.onError != 'function') throw new ee('invalid onError method');
    if (typeof A.onBodySent != 'function' && A.onBodySent !== void 0)
      throw new ee('invalid onBodySent method');
    if (t || e === 'CONNECT') {
      if (typeof A.onUpgrade != 'function')
        throw new ee('invalid onUpgrade method');
    } else {
      if (typeof A.onHeaders != 'function')
        throw new ee('invalid onHeaders method');
      if (typeof A.onData != 'function') throw new ee('invalid onData method');
      if (typeof A.onComplete != 'function')
        throw new ee('invalid onComplete method');
    }
  }
  function z1(A) {
    return !!(A && (lE.isDisturbed(A) || A[Cn]));
  }
  function $1(A) {
    return !!(A && lE.isErrored(A));
  }
  function A9(A) {
    return !!(A && lE.isReadable(A));
  }
  function e9(A) {
    return {
      localAddress: A.localAddress,
      localPort: A.localPort,
      remoteAddress: A.remoteAddress,
      remotePort: A.remotePort,
      remoteFamily: A.remoteFamily,
      timeout: A.timeout,
      bytesWritten: A.bytesWritten,
      bytesRead: A.bytesRead,
    };
  }
  function t9(A) {
    let e;
    return new ReadableStream({
      async start() {
        e = A[Symbol.asyncIterator]();
      },
      async pull(t) {
        let { done: r, value: o } = await e.next();
        if (r)
          queueMicrotask(() => {
            t.close(), t.byobRequest?.respond(0);
          });
        else {
          let s = Buffer.isBuffer(o) ? o : Buffer.from(o);
          s.byteLength && t.enqueue(new Uint8Array(s));
        }
        return t.desiredSize > 0;
      },
      async cancel(t) {
        await e.return();
      },
      type: 'bytes',
    });
  }
  function r9(A) {
    return (
      A &&
      typeof A == 'object' &&
      typeof A.append == 'function' &&
      typeof A.delete == 'function' &&
      typeof A.get == 'function' &&
      typeof A.getAll == 'function' &&
      typeof A.has == 'function' &&
      typeof A.set == 'function' &&
      A[Symbol.toStringTag] === 'FormData'
    );
  }
  function o9(A, e) {
    return 'addEventListener' in A
      ? (A.addEventListener('abort', e, { once: !0 }),
        () => A.removeEventListener('abort', e))
      : (A.addListener('abort', e), () => A.removeListener('abort', e));
  }
  var s9 = typeof String.prototype.toWellFormed == 'function',
    n9 = typeof String.prototype.isWellFormed == 'function';
  function Ib(A) {
    return s9 ? `${A}`.toWellFormed() : T1.toUSVString(A);
  }
  function i9(A) {
    return n9 ? `${A}`.isWellFormed() : Ib(A) === `${A}`;
  }
  function db(A) {
    switch (A) {
      case 34:
      case 40:
      case 41:
      case 44:
      case 47:
      case 58:
      case 59:
      case 60:
      case 61:
      case 62:
      case 63:
      case 64:
      case 91:
      case 92:
      case 93:
      case 123:
      case 125:
        return !1;
      default:
        return A >= 33 && A <= 126;
    }
  }
  function a9(A) {
    if (A.length === 0) return !1;
    for (let e = 0; e < A.length; ++e) if (!db(A.charCodeAt(e))) return !1;
    return !0;
  }
  var c9 = /[^\t\x20-\x7e\x80-\xff]/;
  function g9(A) {
    return !c9.test(A);
  }
  function E9(A) {
    if (A == null || A === '') return { start: 0, end: null, size: null };
    let e = A ? A.match(/^bytes (\d+)-(\d+)\/(\d+)?$/) : null;
    return e
      ? {
          start: parseInt(e[1]),
          end: e[2] ? parseInt(e[2]) : null,
          size: e[3] ? parseInt(e[3]) : null,
        }
      : null;
  }
  function l9(A, e, t) {
    return (A[th] ??= []).push([e, t]), A.on(e, t), A;
  }
  function Q9(A) {
    for (let [e, t] of A[th] ?? []) A.removeListener(e, t);
    A[th] = null;
  }
  function C9(A, e, t) {
    try {
      e.onError(t), Xi(e.aborted);
    } catch (r) {
      A.emit('error', r);
    }
  }
  var fb = Object.create(null);
  fb.enumerable = !0;
  var rh = {
      delete: 'DELETE',
      DELETE: 'DELETE',
      get: 'GET',
      GET: 'GET',
      head: 'HEAD',
      HEAD: 'HEAD',
      options: 'OPTIONS',
      OPTIONS: 'OPTIONS',
      post: 'POST',
      POST: 'POST',
      put: 'PUT',
      PUT: 'PUT',
    },
    pb = { ...rh, patch: 'patch', PATCH: 'PATCH' };
  Object.setPrototypeOf(rh, null);
  Object.setPrototypeOf(pb, null);
  wb.exports = {
    kEnumerableProperty: fb,
    nop: v1,
    isDisturbed: z1,
    isErrored: $1,
    isReadable: A9,
    toUSVString: Ib,
    isUSVString: i9,
    isBlobLike: gb,
    parseOrigin: Y1,
    parseURL: lb,
    getServerName: H1,
    isStream: QE,
    isIterable: Qb,
    isAsyncIterable: q1,
    isDestroyed: Bb,
    headerNameToString: ub,
    bufferToLowerCasedHeaderName: j1,
    addListener: l9,
    removeAllListeners: Q9,
    errorRequest: C9,
    parseRawHeaders: K1,
    parseHeaders: Z1,
    parseKeepAliveTimeout: _1,
    destroy: P1,
    bodyLength: Cb,
    deepClone: V1,
    ReadableStreamFrom: t9,
    isBuffer: hb,
    validateHandler: X1,
    getSocketInfo: e9,
    isFormDataLike: r9,
    buildURL: O1,
    addAbortListener: o9,
    isValidHTTPToken: a9,
    isValidHeaderValue: g9,
    isTokenCharCode: db,
    parseRangeHeader: E9,
    normalizedMethodRecordsBase: rh,
    normalizedMethodRecords: pb,
    isValidPort: Eb,
    isHttpOrHttpsPrefixed: gE,
    nodeMajor: L1,
    nodeMinor: G1,
    safeHTTPMethods: ['GET', 'HEAD', 'OPTIONS', 'TRACE'],
    wrapRequestBody: x1,
  };
});
var Bn = B((OoA, Db) => {
  'use strict';
  var cA = require('node:diagnostics_channel'),
    sh = require('node:util'),
    CE = sh.debuglog('undici'),
    oh = sh.debuglog('fetch'),
    Wo = sh.debuglog('websocket'),
    yb = !1,
    B9 = {
      beforeConnect: cA.channel('undici:client:beforeConnect'),
      connected: cA.channel('undici:client:connected'),
      connectError: cA.channel('undici:client:connectError'),
      sendHeaders: cA.channel('undici:client:sendHeaders'),
      create: cA.channel('undici:request:create'),
      bodySent: cA.channel('undici:request:bodySent'),
      headers: cA.channel('undici:request:headers'),
      trailers: cA.channel('undici:request:trailers'),
      error: cA.channel('undici:request:error'),
      open: cA.channel('undici:websocket:open'),
      close: cA.channel('undici:websocket:close'),
      socketError: cA.channel('undici:websocket:socket_error'),
      ping: cA.channel('undici:websocket:ping'),
      pong: cA.channel('undici:websocket:pong'),
    };
  if (CE.enabled || oh.enabled) {
    let A = oh.enabled ? oh : CE;
    cA.channel('undici:client:beforeConnect').subscribe((e) => {
      let {
        connectParams: { version: t, protocol: r, port: o, host: s },
      } = e;
      A('connecting to %s using %s%s', `${s}${o ? `:${o}` : ''}`, r, t);
    }),
      cA.channel('undici:client:connected').subscribe((e) => {
        let {
          connectParams: { version: t, protocol: r, port: o, host: s },
        } = e;
        A('connected to %s using %s%s', `${s}${o ? `:${o}` : ''}`, r, t);
      }),
      cA.channel('undici:client:connectError').subscribe((e) => {
        let {
          connectParams: { version: t, protocol: r, port: o, host: s },
          error: n,
        } = e;
        A(
          'connection to %s using %s%s errored - %s',
          `${s}${o ? `:${o}` : ''}`,
          r,
          t,
          n.message,
        );
      }),
      cA.channel('undici:client:sendHeaders').subscribe((e) => {
        let {
          request: { method: t, path: r, origin: o },
        } = e;
        A('sending request to %s %s/%s', t, o, r);
      }),
      cA.channel('undici:request:headers').subscribe((e) => {
        let {
          request: { method: t, path: r, origin: o },
          response: { statusCode: s },
        } = e;
        A('received response to %s %s/%s - HTTP %d', t, o, r, s);
      }),
      cA.channel('undici:request:trailers').subscribe((e) => {
        let {
          request: { method: t, path: r, origin: o },
        } = e;
        A('trailers received from %s %s/%s', t, o, r);
      }),
      cA.channel('undici:request:error').subscribe((e) => {
        let {
          request: { method: t, path: r, origin: o },
          error: s,
        } = e;
        A('request to %s %s/%s errored - %s', t, o, r, s.message);
      }),
      (yb = !0);
  }
  if (Wo.enabled) {
    if (!yb) {
      let A = CE.enabled ? CE : Wo;
      cA.channel('undici:client:beforeConnect').subscribe((e) => {
        let {
          connectParams: { version: t, protocol: r, port: o, host: s },
        } = e;
        A('connecting to %s%s using %s%s', s, o ? `:${o}` : '', r, t);
      }),
        cA.channel('undici:client:connected').subscribe((e) => {
          let {
            connectParams: { version: t, protocol: r, port: o, host: s },
          } = e;
          A('connected to %s%s using %s%s', s, o ? `:${o}` : '', r, t);
        }),
        cA.channel('undici:client:connectError').subscribe((e) => {
          let {
            connectParams: { version: t, protocol: r, port: o, host: s },
            error: n,
          } = e;
          A(
            'connection to %s%s using %s%s errored - %s',
            s,
            o ? `:${o}` : '',
            r,
            t,
            n.message,
          );
        }),
        cA.channel('undici:client:sendHeaders').subscribe((e) => {
          let {
            request: { method: t, path: r, origin: o },
          } = e;
          A('sending request to %s %s/%s', t, o, r);
        });
    }
    cA.channel('undici:websocket:open').subscribe((A) => {
      let {
        address: { address: e, port: t },
      } = A;
      Wo('connection opened %s%s', e, t ? `:${t}` : '');
    }),
      cA.channel('undici:websocket:close').subscribe((A) => {
        let { websocket: e, code: t, reason: r } = A;
        Wo('closed connection to %s - %s %s', e.url, t, r);
      }),
      cA.channel('undici:websocket:socket_error').subscribe((A) => {
        Wo('connection errored - %s', A.message);
      }),
      cA.channel('undici:websocket:ping').subscribe((A) => {
        Wo('ping received');
      }),
      cA.channel('undici:websocket:pong').subscribe((A) => {
        Wo('pong received');
      });
  }
  Db.exports = { channels: B9 };
});
var Fb = B((YoA, bb) => {
  'use strict';
  var { InvalidArgumentError: NA, NotSupportedError: u9 } = aA(),
    Ur = require('node:assert'),
    {
      isValidHTTPToken: Rb,
      isValidHeaderValue: mb,
      isStream: h9,
      destroy: I9,
      isBuffer: d9,
      isFormDataLike: f9,
      isIterable: p9,
      isBlobLike: w9,
      buildURL: y9,
      validateHandler: D9,
      getServerName: m9,
      normalizedMethodRecords: k9,
    } = X(),
    { channels: nr } = Bn(),
    { headerNameLowerCasedRecord: kb } = aE(),
    R9 = /[^\u0021-\u00ff]/,
    dt = Symbol('handler'),
    nh = class {
      constructor(
        e,
        {
          path: t,
          method: r,
          body: o,
          headers: s,
          query: n,
          idempotent: i,
          blocking: a,
          upgrade: c,
          headersTimeout: g,
          bodyTimeout: E,
          reset: l,
          throwOnError: C,
          expectContinue: Q,
          servername: h,
        },
        I,
      ) {
        if (typeof t != 'string') throw new NA('path must be a string');
        if (
          t[0] !== '/' &&
          !(t.startsWith('http://') || t.startsWith('https://')) &&
          r !== 'CONNECT'
        )
          throw new NA('path must be an absolute URL or start with a slash');
        if (R9.test(t)) throw new NA('invalid request path');
        if (typeof r != 'string') throw new NA('method must be a string');
        if (k9[r] === void 0 && !Rb(r)) throw new NA('invalid request method');
        if (c && typeof c != 'string') throw new NA('upgrade must be a string');
        if (g != null && (!Number.isFinite(g) || g < 0))
          throw new NA('invalid headersTimeout');
        if (E != null && (!Number.isFinite(E) || E < 0))
          throw new NA('invalid bodyTimeout');
        if (l != null && typeof l != 'boolean') throw new NA('invalid reset');
        if (Q != null && typeof Q != 'boolean')
          throw new NA('invalid expectContinue');
        if (
          ((this.headersTimeout = g),
          (this.bodyTimeout = E),
          (this.throwOnError = C === !0),
          (this.method = r),
          (this.abort = null),
          o == null)
        )
          this.body = null;
        else if (h9(o)) {
          this.body = o;
          let u = this.body._readableState;
          (!u || !u.autoDestroy) &&
            ((this.endHandler = function () {
              I9(this);
            }),
            this.body.on('end', this.endHandler)),
            (this.errorHandler = (d) => {
              this.abort ? this.abort(d) : (this.error = d);
            }),
            this.body.on('error', this.errorHandler);
        } else if (d9(o)) this.body = o.byteLength ? o : null;
        else if (ArrayBuffer.isView(o))
          this.body = o.buffer.byteLength
            ? Buffer.from(o.buffer, o.byteOffset, o.byteLength)
            : null;
        else if (o instanceof ArrayBuffer)
          this.body = o.byteLength ? Buffer.from(o) : null;
        else if (typeof o == 'string')
          this.body = o.length ? Buffer.from(o) : null;
        else if (f9(o) || p9(o) || w9(o)) this.body = o;
        else
          throw new NA(
            'body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable',
          );
        if (
          ((this.completed = !1),
          (this.aborted = !1),
          (this.upgrade = c || null),
          (this.path = n ? y9(t, n) : t),
          (this.origin = e),
          (this.idempotent = i ?? (r === 'HEAD' || r === 'GET')),
          (this.blocking = a ?? !1),
          (this.reset = l ?? null),
          (this.host = null),
          (this.contentLength = null),
          (this.contentType = null),
          (this.headers = []),
          (this.expectContinue = Q ?? !1),
          Array.isArray(s))
        ) {
          if (s.length % 2 !== 0) throw new NA('headers array must be even');
          for (let u = 0; u < s.length; u += 2) BE(this, s[u], s[u + 1]);
        } else if (s && typeof s == 'object')
          if (s[Symbol.iterator])
            for (let u of s) {
              if (!Array.isArray(u) || u.length !== 2)
                throw new NA('headers must be in key-value pair format');
              BE(this, u[0], u[1]);
            }
          else {
            let u = Object.keys(s);
            for (let d = 0; d < u.length; ++d) BE(this, u[d], s[u[d]]);
          }
        else if (s != null)
          throw new NA('headers must be an object or an array');
        D9(I, r, c),
          (this.servername = h || m9(this.host)),
          (this[dt] = I),
          nr.create.hasSubscribers && nr.create.publish({ request: this });
      }
      onBodySent(e) {
        if (this[dt].onBodySent)
          try {
            return this[dt].onBodySent(e);
          } catch (t) {
            this.abort(t);
          }
      }
      onRequestSent() {
        if (
          (nr.bodySent.hasSubscribers && nr.bodySent.publish({ request: this }),
          this[dt].onRequestSent)
        )
          try {
            return this[dt].onRequestSent();
          } catch (e) {
            this.abort(e);
          }
      }
      onConnect(e) {
        if ((Ur(!this.aborted), Ur(!this.completed), this.error)) e(this.error);
        else return (this.abort = e), this[dt].onConnect(e);
      }
      onResponseStarted() {
        return this[dt].onResponseStarted?.();
      }
      onHeaders(e, t, r, o) {
        Ur(!this.aborted),
          Ur(!this.completed),
          nr.headers.hasSubscribers &&
            nr.headers.publish({
              request: this,
              response: { statusCode: e, headers: t, statusText: o },
            });
        try {
          return this[dt].onHeaders(e, t, r, o);
        } catch (s) {
          this.abort(s);
        }
      }
      onData(e) {
        Ur(!this.aborted), Ur(!this.completed);
        try {
          return this[dt].onData(e);
        } catch (t) {
          return this.abort(t), !1;
        }
      }
      onUpgrade(e, t, r) {
        return (
          Ur(!this.aborted), Ur(!this.completed), this[dt].onUpgrade(e, t, r)
        );
      }
      onComplete(e) {
        this.onFinally(),
          Ur(!this.aborted),
          (this.completed = !0),
          nr.trailers.hasSubscribers &&
            nr.trailers.publish({ request: this, trailers: e });
        try {
          return this[dt].onComplete(e);
        } catch (t) {
          this.onError(t);
        }
      }
      onError(e) {
        if (
          (this.onFinally(),
          nr.error.hasSubscribers &&
            nr.error.publish({ request: this, error: e }),
          !this.aborted)
        )
          return (this.aborted = !0), this[dt].onError(e);
      }
      onFinally() {
        this.errorHandler &&
          (this.body.off('error', this.errorHandler),
          (this.errorHandler = null)),
          this.endHandler &&
            (this.body.off('end', this.endHandler), (this.endHandler = null));
      }
      addHeader(e, t) {
        return BE(this, e, t), this;
      }
    };
  function BE(A, e, t) {
    if (t && typeof t == 'object' && !Array.isArray(t))
      throw new NA(`invalid ${e} header`);
    if (t === void 0) return;
    let r = kb[e];
    if (r === void 0 && ((r = e.toLowerCase()), kb[r] === void 0 && !Rb(r)))
      throw new NA('invalid header key');
    if (Array.isArray(t)) {
      let o = [];
      for (let s = 0; s < t.length; s++)
        if (typeof t[s] == 'string') {
          if (!mb(t[s])) throw new NA(`invalid ${e} header`);
          o.push(t[s]);
        } else if (t[s] === null) o.push('');
        else {
          if (typeof t[s] == 'object') throw new NA(`invalid ${e} header`);
          o.push(`${t[s]}`);
        }
      t = o;
    } else if (typeof t == 'string') {
      if (!mb(t)) throw new NA(`invalid ${e} header`);
    } else t === null ? (t = '') : (t = `${t}`);
    if (A.host === null && r === 'host') {
      if (typeof t != 'string') throw new NA('invalid host header');
      A.host = t;
    } else if (A.contentLength === null && r === 'content-length') {
      if (
        ((A.contentLength = parseInt(t, 10)), !Number.isFinite(A.contentLength))
      )
        throw new NA('invalid content-length header');
    } else if (A.contentType === null && r === 'content-type')
      (A.contentType = t), A.headers.push(e, t);
    else {
      if (r === 'transfer-encoding' || r === 'keep-alive' || r === 'upgrade')
        throw new NA(`invalid ${r} header`);
      if (r === 'connection') {
        let o = typeof t == 'string' ? t.toLowerCase() : null;
        if (o !== 'close' && o !== 'keep-alive')
          throw new NA('invalid connection header');
        o === 'close' && (A.reset = !0);
      } else {
        if (r === 'expect') throw new u9('expect header not supported');
        A.headers.push(e, t);
      }
    }
  }
  bb.exports = nh;
});
var zi = B((JoA, Sb) => {
  'use strict';
  var b9 = require('node:events'),
    uE = class extends b9 {
      dispatch() {
        throw new Error('not implemented');
      }
      close() {
        throw new Error('not implemented');
      }
      destroy() {
        throw new Error('not implemented');
      }
      compose(...e) {
        let t = Array.isArray(e[0]) ? e[0] : e,
          r = this.dispatch.bind(this);
        for (let o of t)
          if (o != null) {
            if (typeof o != 'function')
              throw new TypeError(
                `invalid interceptor, expected function received ${typeof o}`,
              );
            if (
              ((r = o(r)),
              r == null || typeof r != 'function' || r.length !== 2)
            )
              throw new TypeError('invalid interceptor');
          }
        return new ih(this, r);
      }
    },
    ih = class extends uE {
      #A = null;
      #e = null;
      constructor(e, t) {
        super(), (this.#A = e), (this.#e = t);
      }
      dispatch(...e) {
        this.#e(...e);
      }
      close(...e) {
        return this.#A.close(...e);
      }
      destroy(...e) {
        return this.#A.destroy(...e);
      }
    };
  Sb.exports = uE;
});
var dn = B((HoA, Tb) => {
  'use strict';
  var F9 = zi(),
    {
      ClientDestroyedError: ah,
      ClientClosedError: S9,
      InvalidArgumentError: un,
    } = aA(),
    {
      kDestroy: T9,
      kClose: N9,
      kClosed: $i,
      kDestroyed: hn,
      kDispatch: ch,
      kInterceptors: _o,
    } = FA(),
    Mr = Symbol('onDestroyed'),
    In = Symbol('onClosed'),
    hE = Symbol('Intercepted Dispatch'),
    gh = class extends F9 {
      constructor() {
        super(),
          (this[hn] = !1),
          (this[Mr] = null),
          (this[$i] = !1),
          (this[In] = []);
      }
      get destroyed() {
        return this[hn];
      }
      get closed() {
        return this[$i];
      }
      get interceptors() {
        return this[_o];
      }
      set interceptors(e) {
        if (e) {
          for (let t = e.length - 1; t >= 0; t--)
            if (typeof this[_o][t] != 'function')
              throw new un('interceptor must be an function');
        }
        this[_o] = e;
      }
      close(e) {
        if (e === void 0)
          return new Promise((r, o) => {
            this.close((s, n) => (s ? o(s) : r(n)));
          });
        if (typeof e != 'function') throw new un('invalid callback');
        if (this[hn]) {
          queueMicrotask(() => e(new ah(), null));
          return;
        }
        if (this[$i]) {
          this[In] ? this[In].push(e) : queueMicrotask(() => e(null, null));
          return;
        }
        (this[$i] = !0), this[In].push(e);
        let t = () => {
          let r = this[In];
          this[In] = null;
          for (let o = 0; o < r.length; o++) r[o](null, null);
        };
        this[N9]()
          .then(() => this.destroy())
          .then(() => {
            queueMicrotask(t);
          });
      }
      destroy(e, t) {
        if ((typeof e == 'function' && ((t = e), (e = null)), t === void 0))
          return new Promise((o, s) => {
            this.destroy(e, (n, i) => (n ? s(n) : o(i)));
          });
        if (typeof t != 'function') throw new un('invalid callback');
        if (this[hn]) {
          this[Mr] ? this[Mr].push(t) : queueMicrotask(() => t(null, null));
          return;
        }
        e || (e = new ah()),
          (this[hn] = !0),
          (this[Mr] = this[Mr] || []),
          this[Mr].push(t);
        let r = () => {
          let o = this[Mr];
          this[Mr] = null;
          for (let s = 0; s < o.length; s++) o[s](null, null);
        };
        this[T9](e).then(() => {
          queueMicrotask(r);
        });
      }
      [hE](e, t) {
        if (!this[_o] || this[_o].length === 0)
          return (this[hE] = this[ch]), this[ch](e, t);
        let r = this[ch].bind(this);
        for (let o = this[_o].length - 1; o >= 0; o--) r = this[_o][o](r);
        return (this[hE] = r), r(e, t);
      }
      dispatch(e, t) {
        if (!t || typeof t != 'object')
          throw new un('handler must be an object');
        try {
          if (!e || typeof e != 'object')
            throw new un('opts must be an object.');
          if (this[hn] || this[Mr]) throw new ah();
          if (this[$i]) throw new S9();
          return this[hE](e, t);
        } catch (r) {
          if (typeof t.onError != 'function')
            throw new un('invalid onError method');
          return t.onError(r), !1;
        }
      }
    };
  Tb.exports = gh;
});
var hh = B((VoA, Lb) => {
  'use strict';
  var fn = 0,
    Eh = 1e3,
    lh = (Eh >> 1) - 1,
    Lr,
    Qh = Symbol('kFastTimer'),
    Gr = [],
    Ch = -2,
    Bh = -1,
    Ub = 0,
    Nb = 1;
  function uh() {
    fn += lh;
    let A = 0,
      e = Gr.length;
    for (; A < e; ) {
      let t = Gr[A];
      t._state === Ub
        ? ((t._idleStart = fn - lh), (t._state = Nb))
        : t._state === Nb &&
          fn >= t._idleStart + t._idleTimeout &&
          ((t._state = Bh), (t._idleStart = -1), t._onTimeout(t._timerArg)),
        t._state === Bh ? ((t._state = Ch), --e !== 0 && (Gr[A] = Gr[e])) : ++A;
    }
    (Gr.length = e), Gr.length !== 0 && Mb();
  }
  function Mb() {
    Lr
      ? Lr.refresh()
      : (clearTimeout(Lr), (Lr = setTimeout(uh, lh)), Lr.unref && Lr.unref());
  }
  var IE = class {
    [Qh] = !0;
    _state = Ch;
    _idleTimeout = -1;
    _idleStart = -1;
    _onTimeout;
    _timerArg;
    constructor(e, t, r) {
      (this._onTimeout = e),
        (this._idleTimeout = t),
        (this._timerArg = r),
        this.refresh();
    }
    refresh() {
      this._state === Ch && Gr.push(this),
        (!Lr || Gr.length === 1) && Mb(),
        (this._state = Ub);
    }
    clear() {
      (this._state = Bh), (this._idleStart = -1);
    }
  };
  Lb.exports = {
    setTimeout(A, e, t) {
      return e <= Eh ? setTimeout(A, e, t) : new IE(A, e, t);
    },
    clearTimeout(A) {
      A[Qh] ? A.clear() : clearTimeout(A);
    },
    setFastTimeout(A, e, t) {
      return new IE(A, e, t);
    },
    clearFastTimeout(A) {
      A.clear();
    },
    now() {
      return fn;
    },
    tick(A = 0) {
      (fn += A - Eh + 1), uh(), uh();
    },
    reset() {
      (fn = 0), (Gr.length = 0), clearTimeout(Lr), (Lr = null);
    },
    kFastTimer: Qh,
  };
});
var Aa = B((WoA, Yb) => {
  'use strict';
  var U9 = require('node:net'),
    Gb = require('node:assert'),
    Ob = X(),
    { InvalidArgumentError: M9, ConnectTimeoutError: L9 } = aA(),
    dE = hh();
  function xb() {}
  var Ih, dh;
  global.FinalizationRegistry &&
  !(process.env.NODE_V8_COVERAGE || process.env.UNDICI_NO_FG)
    ? (dh = class {
        constructor(e) {
          (this._maxCachedSessions = e),
            (this._sessionCache = new Map()),
            (this._sessionRegistry = new global.FinalizationRegistry((t) => {
              if (this._sessionCache.size < this._maxCachedSessions) return;
              let r = this._sessionCache.get(t);
              r !== void 0 &&
                r.deref() === void 0 &&
                this._sessionCache.delete(t);
            }));
        }
        get(e) {
          let t = this._sessionCache.get(e);
          return t ? t.deref() : null;
        }
        set(e, t) {
          this._maxCachedSessions !== 0 &&
            (this._sessionCache.set(e, new WeakRef(t)),
            this._sessionRegistry.register(t, e));
        }
      })
    : (dh = class {
        constructor(e) {
          (this._maxCachedSessions = e), (this._sessionCache = new Map());
        }
        get(e) {
          return this._sessionCache.get(e);
        }
        set(e, t) {
          if (this._maxCachedSessions !== 0) {
            if (this._sessionCache.size >= this._maxCachedSessions) {
              let { value: r } = this._sessionCache.keys().next();
              this._sessionCache.delete(r);
            }
            this._sessionCache.set(e, t);
          }
        }
      });
  function G9({
    allowH2: A,
    maxCachedSessions: e,
    socketPath: t,
    timeout: r,
    session: o,
    ...s
  }) {
    if (e != null && (!Number.isInteger(e) || e < 0))
      throw new M9('maxCachedSessions must be a positive integer or zero');
    let n = { path: t, ...s },
      i = new dh(e ?? 100);
    return (
      (r = r ?? 1e4),
      (A = A ?? !1),
      function (
        {
          hostname: c,
          host: g,
          protocol: E,
          port: l,
          servername: C,
          localAddress: Q,
          httpSocket: h,
        },
        I,
      ) {
        let u;
        if (E === 'https:') {
          Ih || (Ih = require('node:tls')),
            (C = C || n.servername || Ob.getServerName(g) || null);
          let f = C || c;
          Gb(f);
          let D = o || i.get(f) || null;
          (l = l || 443),
            (u = Ih.connect({
              highWaterMark: 16384,
              ...n,
              servername: C,
              session: D,
              localAddress: Q,
              ALPNProtocols: A ? ['http/1.1', 'h2'] : ['http/1.1'],
              socket: h,
              port: l,
              host: c,
            })),
            u.on('session', function (q) {
              i.set(f, q);
            });
        } else
          Gb(!h, 'httpSocket can only be sent on TLS update'),
            (l = l || 80),
            (u = U9.connect({
              highWaterMark: 64 * 1024,
              ...n,
              localAddress: Q,
              port: l,
              host: c,
            }));
        if (n.keepAlive == null || n.keepAlive) {
          let f =
            n.keepAliveInitialDelay === void 0 ? 6e4 : n.keepAliveInitialDelay;
          u.setKeepAlive(!0, f);
        }
        let d = x9(new WeakRef(u), { timeout: r, hostname: c, port: l });
        return (
          u
            .setNoDelay(!0)
            .once(E === 'https:' ? 'secureConnect' : 'connect', function () {
              if ((queueMicrotask(d), I)) {
                let f = I;
                (I = null), f(null, this);
              }
            })
            .on('error', function (f) {
              if ((queueMicrotask(d), I)) {
                let D = I;
                (I = null), D(f);
              }
            }),
          u
        );
      }
    );
  }
  var x9 =
    process.platform === 'win32'
      ? (A, e) => {
          if (!e.timeout) return xb;
          let t = null,
            r = null,
            o = dE.setFastTimeout(() => {
              t = setImmediate(() => {
                r = setImmediate(() => vb(A.deref(), e));
              });
            }, e.timeout);
          return () => {
            dE.clearFastTimeout(o), clearImmediate(t), clearImmediate(r);
          };
        }
      : (A, e) => {
          if (!e.timeout) return xb;
          let t = null,
            r = dE.setFastTimeout(() => {
              t = setImmediate(() => {
                vb(A.deref(), e);
              });
            }, e.timeout);
          return () => {
            dE.clearFastTimeout(r), clearImmediate(t);
          };
        };
  function vb(A, e) {
    if (A == null) return;
    let t = 'Connect Timeout Error';
    Array.isArray(A.autoSelectFamilyAttemptedAddresses)
      ? (t += ` (attempted addresses: ${A.autoSelectFamilyAttemptedAddresses.join(', ')},`)
      : (t += ` (attempted address: ${e.hostname}:${e.port},`),
      (t += ` timeout: ${e.timeout}ms)`),
      Ob.destroy(A, new L9(t));
  }
  Yb.exports = G9;
});
var Jb = B((fE) => {
  'use strict';
  Object.defineProperty(fE, '__esModule', { value: !0 });
  fE.enumToMap = void 0;
  function v9(A) {
    let e = {};
    return (
      Object.keys(A).forEach((t) => {
        let r = A[t];
        typeof r == 'number' && (e[t] = r);
      }),
      e
    );
  }
  fE.enumToMap = v9;
});
var Hb = B((y) => {
  'use strict';
  Object.defineProperty(y, '__esModule', { value: !0 });
  y.SPECIAL_HEADERS =
    y.HEADER_STATE =
    y.MINOR =
    y.MAJOR =
    y.CONNECTION_TOKEN_CHARS =
    y.HEADER_CHARS =
    y.TOKEN =
    y.STRICT_TOKEN =
    y.HEX =
    y.URL_CHAR =
    y.STRICT_URL_CHAR =
    y.USERINFO_CHARS =
    y.MARK =
    y.ALPHANUM =
    y.NUM =
    y.HEX_MAP =
    y.NUM_MAP =
    y.ALPHA =
    y.FINISH =
    y.H_METHOD_MAP =
    y.METHOD_MAP =
    y.METHODS_RTSP =
    y.METHODS_ICE =
    y.METHODS_HTTP =
    y.METHODS =
    y.LENIENT_FLAGS =
    y.FLAGS =
    y.TYPE =
    y.ERROR =
      void 0;
  var O9 = Jb(),
    Y9;
  (function (A) {
    (A[(A.OK = 0)] = 'OK'),
      (A[(A.INTERNAL = 1)] = 'INTERNAL'),
      (A[(A.STRICT = 2)] = 'STRICT'),
      (A[(A.LF_EXPECTED = 3)] = 'LF_EXPECTED'),
      (A[(A.UNEXPECTED_CONTENT_LENGTH = 4)] = 'UNEXPECTED_CONTENT_LENGTH'),
      (A[(A.CLOSED_CONNECTION = 5)] = 'CLOSED_CONNECTION'),
      (A[(A.INVALID_METHOD = 6)] = 'INVALID_METHOD'),
      (A[(A.INVALID_URL = 7)] = 'INVALID_URL'),
      (A[(A.INVALID_CONSTANT = 8)] = 'INVALID_CONSTANT'),
      (A[(A.INVALID_VERSION = 9)] = 'INVALID_VERSION'),
      (A[(A.INVALID_HEADER_TOKEN = 10)] = 'INVALID_HEADER_TOKEN'),
      (A[(A.INVALID_CONTENT_LENGTH = 11)] = 'INVALID_CONTENT_LENGTH'),
      (A[(A.INVALID_CHUNK_SIZE = 12)] = 'INVALID_CHUNK_SIZE'),
      (A[(A.INVALID_STATUS = 13)] = 'INVALID_STATUS'),
      (A[(A.INVALID_EOF_STATE = 14)] = 'INVALID_EOF_STATE'),
      (A[(A.INVALID_TRANSFER_ENCODING = 15)] = 'INVALID_TRANSFER_ENCODING'),
      (A[(A.CB_MESSAGE_BEGIN = 16)] = 'CB_MESSAGE_BEGIN'),
      (A[(A.CB_HEADERS_COMPLETE = 17)] = 'CB_HEADERS_COMPLETE'),
      (A[(A.CB_MESSAGE_COMPLETE = 18)] = 'CB_MESSAGE_COMPLETE'),
      (A[(A.CB_CHUNK_HEADER = 19)] = 'CB_CHUNK_HEADER'),
      (A[(A.CB_CHUNK_COMPLETE = 20)] = 'CB_CHUNK_COMPLETE'),
      (A[(A.PAUSED = 21)] = 'PAUSED'),
      (A[(A.PAUSED_UPGRADE = 22)] = 'PAUSED_UPGRADE'),
      (A[(A.PAUSED_H2_UPGRADE = 23)] = 'PAUSED_H2_UPGRADE'),
      (A[(A.USER = 24)] = 'USER');
  })((Y9 = y.ERROR || (y.ERROR = {})));
  var J9;
  (function (A) {
    (A[(A.BOTH = 0)] = 'BOTH'),
      (A[(A.REQUEST = 1)] = 'REQUEST'),
      (A[(A.RESPONSE = 2)] = 'RESPONSE');
  })((J9 = y.TYPE || (y.TYPE = {})));
  var H9;
  (function (A) {
    (A[(A.CONNECTION_KEEP_ALIVE = 1)] = 'CONNECTION_KEEP_ALIVE'),
      (A[(A.CONNECTION_CLOSE = 2)] = 'CONNECTION_CLOSE'),
      (A[(A.CONNECTION_UPGRADE = 4)] = 'CONNECTION_UPGRADE'),
      (A[(A.CHUNKED = 8)] = 'CHUNKED'),
      (A[(A.UPGRADE = 16)] = 'UPGRADE'),
      (A[(A.CONTENT_LENGTH = 32)] = 'CONTENT_LENGTH'),
      (A[(A.SKIPBODY = 64)] = 'SKIPBODY'),
      (A[(A.TRAILING = 128)] = 'TRAILING'),
      (A[(A.TRANSFER_ENCODING = 512)] = 'TRANSFER_ENCODING');
  })((H9 = y.FLAGS || (y.FLAGS = {})));
  var V9;
  (function (A) {
    (A[(A.HEADERS = 1)] = 'HEADERS'),
      (A[(A.CHUNKED_LENGTH = 2)] = 'CHUNKED_LENGTH'),
      (A[(A.KEEP_ALIVE = 4)] = 'KEEP_ALIVE');
  })((V9 = y.LENIENT_FLAGS || (y.LENIENT_FLAGS = {})));
  var L;
  (function (A) {
    (A[(A.DELETE = 0)] = 'DELETE'),
      (A[(A.GET = 1)] = 'GET'),
      (A[(A.HEAD = 2)] = 'HEAD'),
      (A[(A.POST = 3)] = 'POST'),
      (A[(A.PUT = 4)] = 'PUT'),
      (A[(A.CONNECT = 5)] = 'CONNECT'),
      (A[(A.OPTIONS = 6)] = 'OPTIONS'),
      (A[(A.TRACE = 7)] = 'TRACE'),
      (A[(A.COPY = 8)] = 'COPY'),
      (A[(A.LOCK = 9)] = 'LOCK'),
      (A[(A.MKCOL = 10)] = 'MKCOL'),
      (A[(A.MOVE = 11)] = 'MOVE'),
      (A[(A.PROPFIND = 12)] = 'PROPFIND'),
      (A[(A.PROPPATCH = 13)] = 'PROPPATCH'),
      (A[(A.SEARCH = 14)] = 'SEARCH'),
      (A[(A.UNLOCK = 15)] = 'UNLOCK'),
      (A[(A.BIND = 16)] = 'BIND'),
      (A[(A.REBIND = 17)] = 'REBIND'),
      (A[(A.UNBIND = 18)] = 'UNBIND'),
      (A[(A.ACL = 19)] = 'ACL'),
      (A[(A.REPORT = 20)] = 'REPORT'),
      (A[(A.MKACTIVITY = 21)] = 'MKACTIVITY'),
      (A[(A.CHECKOUT = 22)] = 'CHECKOUT'),
      (A[(A.MERGE = 23)] = 'MERGE'),
      (A[(A['M-SEARCH'] = 24)] = 'M-SEARCH'),
      (A[(A.NOTIFY = 25)] = 'NOTIFY'),
      (A[(A.SUBSCRIBE = 26)] = 'SUBSCRIBE'),
      (A[(A.UNSUBSCRIBE = 27)] = 'UNSUBSCRIBE'),
      (A[(A.PATCH = 28)] = 'PATCH'),
      (A[(A.PURGE = 29)] = 'PURGE'),
      (A[(A.MKCALENDAR = 30)] = 'MKCALENDAR'),
      (A[(A.LINK = 31)] = 'LINK'),
      (A[(A.UNLINK = 32)] = 'UNLINK'),
      (A[(A.SOURCE = 33)] = 'SOURCE'),
      (A[(A.PRI = 34)] = 'PRI'),
      (A[(A.DESCRIBE = 35)] = 'DESCRIBE'),
      (A[(A.ANNOUNCE = 36)] = 'ANNOUNCE'),
      (A[(A.SETUP = 37)] = 'SETUP'),
      (A[(A.PLAY = 38)] = 'PLAY'),
      (A[(A.PAUSE = 39)] = 'PAUSE'),
      (A[(A.TEARDOWN = 40)] = 'TEARDOWN'),
      (A[(A.GET_PARAMETER = 41)] = 'GET_PARAMETER'),
      (A[(A.SET_PARAMETER = 42)] = 'SET_PARAMETER'),
      (A[(A.REDIRECT = 43)] = 'REDIRECT'),
      (A[(A.RECORD = 44)] = 'RECORD'),
      (A[(A.FLUSH = 45)] = 'FLUSH');
  })((L = y.METHODS || (y.METHODS = {})));
  y.METHODS_HTTP = [
    L.DELETE,
    L.GET,
    L.HEAD,
    L.POST,
    L.PUT,
    L.CONNECT,
    L.OPTIONS,
    L.TRACE,
    L.COPY,
    L.LOCK,
    L.MKCOL,
    L.MOVE,
    L.PROPFIND,
    L.PROPPATCH,
    L.SEARCH,
    L.UNLOCK,
    L.BIND,
    L.REBIND,
    L.UNBIND,
    L.ACL,
    L.REPORT,
    L.MKACTIVITY,
    L.CHECKOUT,
    L.MERGE,
    L['M-SEARCH'],
    L.NOTIFY,
    L.SUBSCRIBE,
    L.UNSUBSCRIBE,
    L.PATCH,
    L.PURGE,
    L.MKCALENDAR,
    L.LINK,
    L.UNLINK,
    L.PRI,
    L.SOURCE,
  ];
  y.METHODS_ICE = [L.SOURCE];
  y.METHODS_RTSP = [
    L.OPTIONS,
    L.DESCRIBE,
    L.ANNOUNCE,
    L.SETUP,
    L.PLAY,
    L.PAUSE,
    L.TEARDOWN,
    L.GET_PARAMETER,
    L.SET_PARAMETER,
    L.REDIRECT,
    L.RECORD,
    L.FLUSH,
    L.GET,
    L.POST,
  ];
  y.METHOD_MAP = O9.enumToMap(L);
  y.H_METHOD_MAP = {};
  Object.keys(y.METHOD_MAP).forEach((A) => {
    /^H/.test(A) && (y.H_METHOD_MAP[A] = y.METHOD_MAP[A]);
  });
  var q9;
  (function (A) {
    (A[(A.SAFE = 0)] = 'SAFE'),
      (A[(A.SAFE_WITH_CB = 1)] = 'SAFE_WITH_CB'),
      (A[(A.UNSAFE = 2)] = 'UNSAFE');
  })((q9 = y.FINISH || (y.FINISH = {})));
  y.ALPHA = [];
  for (let A = 65; A <= 90; A++)
    y.ALPHA.push(String.fromCharCode(A)),
      y.ALPHA.push(String.fromCharCode(A + 32));
  y.NUM_MAP = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9 };
  y.HEX_MAP = {
    0: 0,
    1: 1,
    2: 2,
    3: 3,
    4: 4,
    5: 5,
    6: 6,
    7: 7,
    8: 8,
    9: 9,
    A: 10,
    B: 11,
    C: 12,
    D: 13,
    E: 14,
    F: 15,
    a: 10,
    b: 11,
    c: 12,
    d: 13,
    e: 14,
    f: 15,
  };
  y.NUM = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];
  y.ALPHANUM = y.ALPHA.concat(y.NUM);
  y.MARK = ['-', '_', '.', '!', '~', '*', "'", '(', ')'];
  y.USERINFO_CHARS = y.ALPHANUM.concat(y.MARK).concat([
    '%',
    ';',
    ':',
    '&',
    '=',
    '+',
    '$',
    ',',
  ]);
  y.STRICT_URL_CHAR = [
    '!',
    '"',
    '$',
    '%',
    '&',
    "'",
    '(',
    ')',
    '*',
    '+',
    ',',
    '-',
    '.',
    '/',
    ':',
    ';',
    '<',
    '=',
    '>',
    '@',
    '[',
    '\\',
    ']',
    '^',
    '_',
    '`',
    '{',
    '|',
    '}',
    '~',
  ].concat(y.ALPHANUM);
  y.URL_CHAR = y.STRICT_URL_CHAR.concat(['	', '\f']);
  for (let A = 128; A <= 255; A++) y.URL_CHAR.push(A);
  y.HEX = y.NUM.concat([
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
  ]);
  y.STRICT_TOKEN = [
    '!',
    '#',
    '$',
    '%',
    '&',
    "'",
    '*',
    '+',
    '-',
    '.',
    '^',
    '_',
    '`',
    '|',
    '~',
  ].concat(y.ALPHANUM);
  y.TOKEN = y.STRICT_TOKEN.concat([' ']);
  y.HEADER_CHARS = ['	'];
  for (let A = 32; A <= 255; A++) A !== 127 && y.HEADER_CHARS.push(A);
  y.CONNECTION_TOKEN_CHARS = y.HEADER_CHARS.filter((A) => A !== 44);
  y.MAJOR = y.NUM_MAP;
  y.MINOR = y.MAJOR;
  var pn;
  (function (A) {
    (A[(A.GENERAL = 0)] = 'GENERAL'),
      (A[(A.CONNECTION = 1)] = 'CONNECTION'),
      (A[(A.CONTENT_LENGTH = 2)] = 'CONTENT_LENGTH'),
      (A[(A.TRANSFER_ENCODING = 3)] = 'TRANSFER_ENCODING'),
      (A[(A.UPGRADE = 4)] = 'UPGRADE'),
      (A[(A.CONNECTION_KEEP_ALIVE = 5)] = 'CONNECTION_KEEP_ALIVE'),
      (A[(A.CONNECTION_CLOSE = 6)] = 'CONNECTION_CLOSE'),
      (A[(A.CONNECTION_UPGRADE = 7)] = 'CONNECTION_UPGRADE'),
      (A[(A.TRANSFER_ENCODING_CHUNKED = 8)] = 'TRANSFER_ENCODING_CHUNKED');
  })((pn = y.HEADER_STATE || (y.HEADER_STATE = {})));
  y.SPECIAL_HEADERS = {
    connection: pn.CONNECTION,
    'content-length': pn.CONTENT_LENGTH,
    'proxy-connection': pn.CONNECTION,
    'transfer-encoding': pn.TRANSFER_ENCODING,
    upgrade: pn.UPGRADE,
  };
});
var fh = B((ZoA, Vb) => {
  'use strict';
  var { Buffer: P9 } = require('node:buffer');
  Vb.exports = P9.from(
    '',
    'base64',
  );
});
var Pb = B((KoA, qb) => {
  'use strict';
  var { Buffer: W9 } = require('node:buffer');
  qb.exports = W9.from(
    '',
    'base64',
  );
});
var ea = B((XoA, $b) => {
  'use strict';
  var Wb = ['GET', 'HEAD', 'POST'],
    _9 = new Set(Wb),
    j9 = [101, 204, 205, 304],
    _b = [301, 302, 303, 307, 308],
    Z9 = new Set(_b),
    jb = [
      '1',
      '7',
      '9',
      '11',
      '13',
      '15',
      '17',
      '19',
      '20',
      '21',
      '22',
      '23',
      '25',
      '37',
      '42',
      '43',
      '53',
      '69',
      '77',
      '79',
      '87',
      '95',
      '101',
      '102',
      '103',
      '104',
      '109',
      '110',
      '111',
      '113',
      '115',
      '117',
      '119',
      '123',
      '135',
      '137',
      '139',
      '143',
      '161',
      '179',
      '389',
      '427',
      '465',
      '512',
      '513',
      '514',
      '515',
      '526',
      '530',
      '531',
      '532',
      '540',
      '548',
      '554',
      '556',
      '563',
      '587',
      '601',
      '636',
      '989',
      '990',
      '993',
      '995',
      '1719',
      '1720',
      '1723',
      '2049',
      '3659',
      '4045',
      '4190',
      '5060',
      '5061',
      '6000',
      '6566',
      '6665',
      '6666',
      '6667',
      '6668',
      '6669',
      '6679',
      '6697',
      '10080',
    ],
    K9 = new Set(jb),
    Zb = [
      '',
      'no-referrer',
      'no-referrer-when-downgrade',
      'same-origin',
      'origin',
      'strict-origin',
      'origin-when-cross-origin',
      'strict-origin-when-cross-origin',
      'unsafe-url',
    ],
    X9 = new Set(Zb),
    z9 = ['follow', 'manual', 'error'],
    Kb = ['GET', 'HEAD', 'OPTIONS', 'TRACE'],
    $9 = new Set(Kb),
    A8 = ['navigate', 'same-origin', 'no-cors', 'cors'],
    e8 = ['omit', 'same-origin', 'include'],
    t8 = [
      'default',
      'no-store',
      'reload',
      'no-cache',
      'force-cache',
      'only-if-cached',
    ],
    r8 = [
      'content-encoding',
      'content-language',
      'content-location',
      'content-type',
      'content-length',
    ],
    o8 = ['half'],
    Xb = ['CONNECT', 'TRACE', 'TRACK'],
    s8 = new Set(Xb),
    zb = [
      'audio',
      'audioworklet',
      'font',
      'image',
      'manifest',
      'paintworklet',
      'script',
      'style',
      'track',
      'video',
      'xslt',
      '',
    ],
    n8 = new Set(zb);
  $b.exports = {
    subresource: zb,
    forbiddenMethods: Xb,
    requestBodyHeader: r8,
    referrerPolicy: Zb,
    requestRedirect: z9,
    requestMode: A8,
    requestCredentials: e8,
    requestCache: t8,
    redirectStatus: _b,
    corsSafeListedMethods: Wb,
    nullBodyStatus: j9,
    safeMethods: Kb,
    badPorts: jb,
    requestDuplex: o8,
    subresourceSet: n8,
    badPortsSet: K9,
    redirectStatusSet: Z9,
    corsSafeListedMethodsSet: _9,
    safeMethodsSet: $9,
    forbiddenMethodsSet: s8,
    referrerPolicySet: X9,
  };
});
var wh = B((zoA, A0) => {
  'use strict';
  var ph = Symbol.for('undici.globalOrigin.1');
  function i8() {
    return globalThis[ph];
  }
  function a8(A) {
    if (A === void 0) {
      Object.defineProperty(globalThis, ph, {
        value: void 0,
        writable: !0,
        enumerable: !1,
        configurable: !1,
      });
      return;
    }
    let e = new URL(A);
    if (e.protocol !== 'http:' && e.protocol !== 'https:')
      throw new TypeError(
        `Only http & https urls are allowed, received ${e.protocol}`,
      );
    Object.defineProperty(globalThis, ph, {
      value: e,
      writable: !0,
      enumerable: !1,
      configurable: !1,
    });
  }
  A0.exports = { getGlobalOrigin: i8, setGlobalOrigin: a8 };
});
var ve = B(($oA, i0) => {
  'use strict';
  var wE = require('node:assert'),
    c8 = new TextEncoder(),
    ta = /^[!#$%&'*+\-.^_|~A-Za-z0-9]+$/,
    g8 = /[\u000A\u000D\u0009\u0020]/,
    E8 = /[\u0009\u000A\u000C\u000D\u0020]/g,
    l8 = /^[\u0009\u0020-\u007E\u0080-\u00FF]+$/;
  function Q8(A) {
    wE(A.protocol === 'data:');
    let e = r0(A, !0);
    e = e.slice(5);
    let t = { position: 0 },
      r = wn(',', e, t),
      o = r.length;
    if (((r = d8(r, !0, !0)), t.position >= e.length)) return 'failure';
    t.position++;
    let s = e.slice(o + 1),
      n = o0(s);
    if (/;(\u0020){0,}base64$/i.test(r)) {
      let a = n0(n);
      if (((n = B8(a)), n === 'failure')) return 'failure';
      (r = r.slice(0, -6)),
        (r = r.replace(/(\u0020)+$/, '')),
        (r = r.slice(0, -1));
    }
    r.startsWith(';') && (r = 'text/plain' + r);
    let i = yh(r);
    return (
      i === 'failure' && (i = yh('text/plain;charset=US-ASCII')),
      { mimeType: i, body: n }
    );
  }
  function r0(A, e = !1) {
    if (!e) return A.href;
    let t = A.href,
      r = A.hash.length,
      o = r === 0 ? t : t.substring(0, t.length - r);
    return !r && t.endsWith('#') ? o.slice(0, -1) : o;
  }
  function yE(A, e, t) {
    let r = '';
    for (; t.position < e.length && A(e[t.position]); )
      (r += e[t.position]), t.position++;
    return r;
  }
  function wn(A, e, t) {
    let r = e.indexOf(A, t.position),
      o = t.position;
    return r === -1
      ? ((t.position = e.length), e.slice(o))
      : ((t.position = r), e.slice(o, t.position));
  }
  function o0(A) {
    let e = c8.encode(A);
    return C8(e);
  }
  function e0(A) {
    return (
      (A >= 48 && A <= 57) || (A >= 65 && A <= 70) || (A >= 97 && A <= 102)
    );
  }
  function t0(A) {
    return A >= 48 && A <= 57 ? A - 48 : (A & 223) - 55;
  }
  function C8(A) {
    let e = A.length,
      t = new Uint8Array(e),
      r = 0;
    for (let o = 0; o < e; ++o) {
      let s = A[o];
      s !== 37
        ? (t[r++] = s)
        : s === 37 && !(e0(A[o + 1]) && e0(A[o + 2]))
          ? (t[r++] = 37)
          : ((t[r++] = (t0(A[o + 1]) << 4) | t0(A[o + 2])), (o += 2));
    }
    return e === r ? t : t.subarray(0, r);
  }
  function yh(A) {
    A = pE(A, !0, !0);
    let e = { position: 0 },
      t = wn('/', A, e);
    if (t.length === 0 || !ta.test(t) || e.position > A.length)
      return 'failure';
    e.position++;
    let r = wn(';', A, e);
    if (((r = pE(r, !1, !0)), r.length === 0 || !ta.test(r))) return 'failure';
    let o = t.toLowerCase(),
      s = r.toLowerCase(),
      n = { type: o, subtype: s, parameters: new Map(), essence: `${o}/${s}` };
    for (; e.position < A.length; ) {
      e.position++, yE((c) => g8.test(c), A, e);
      let i = yE((c) => c !== ';' && c !== '=', A, e);
      if (((i = i.toLowerCase()), e.position < A.length)) {
        if (A[e.position] === ';') continue;
        e.position++;
      }
      if (e.position > A.length) break;
      let a = null;
      if (A[e.position] === '"') (a = s0(A, e, !0)), wn(';', A, e);
      else if (((a = wn(';', A, e)), (a = pE(a, !1, !0)), a.length === 0))
        continue;
      i.length !== 0 &&
        ta.test(i) &&
        (a.length === 0 || l8.test(a)) &&
        !n.parameters.has(i) &&
        n.parameters.set(i, a);
    }
    return n;
  }
  function B8(A) {
    A = A.replace(E8, '');
    let e = A.length;
    if (
      (e % 4 === 0 &&
        A.charCodeAt(e - 1) === 61 &&
        (--e, A.charCodeAt(e - 1) === 61 && --e),
      e % 4 === 1 ||
        /[^+/0-9A-Za-z]/.test(A.length === e ? A : A.substring(0, e)))
    )
      return 'failure';
    let t = Buffer.from(A, 'base64');
    return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
  }
  function s0(A, e, t) {
    let r = e.position,
      o = '';
    for (
      wE(A[e.position] === '"'), e.position++;
      (o += yE((n) => n !== '"' && n !== '\\', A, e)),
        !(e.position >= A.length);
    ) {
      let s = A[e.position];
      if ((e.position++, s === '\\')) {
        if (e.position >= A.length) {
          o += '\\';
          break;
        }
        (o += A[e.position]), e.position++;
      } else {
        wE(s === '"');
        break;
      }
    }
    return t ? o : A.slice(r, e.position);
  }
  function u8(A) {
    wE(A !== 'failure');
    let { parameters: e, essence: t } = A,
      r = t;
    for (let [o, s] of e.entries())
      (r += ';'),
        (r += o),
        (r += '='),
        ta.test(s) ||
          ((s = s.replace(/(\\|")/g, '\\$1')), (s = '"' + s), (s += '"')),
        (r += s);
    return r;
  }
  function h8(A) {
    return A === 13 || A === 10 || A === 9 || A === 32;
  }
  function pE(A, e = !0, t = !0) {
    return Dh(A, e, t, h8);
  }
  function I8(A) {
    return A === 13 || A === 10 || A === 9 || A === 12 || A === 32;
  }
  function d8(A, e = !0, t = !0) {
    return Dh(A, e, t, I8);
  }
  function Dh(A, e, t, r) {
    let o = 0,
      s = A.length - 1;
    if (e) for (; o < A.length && r(A.charCodeAt(o)); ) o++;
    if (t) for (; s > 0 && r(A.charCodeAt(s)); ) s--;
    return o === 0 && s === A.length - 1 ? A : A.slice(o, s + 1);
  }
  function n0(A) {
    let e = A.length;
    if (65535 > e) return String.fromCharCode.apply(null, A);
    let t = '',
      r = 0,
      o = 65535;
    for (; r < e; )
      r + o > e && (o = e - r),
        (t += String.fromCharCode.apply(null, A.subarray(r, (r += o))));
    return t;
  }
  function f8(A) {
    switch (A.essence) {
      case 'application/ecmascript':
      case 'application/javascript':
      case 'application/x-ecmascript':
      case 'application/x-javascript':
      case 'text/ecmascript':
      case 'text/javascript':
      case 'text/javascript1.0':
      case 'text/javascript1.1':
      case 'text/javascript1.2':
      case 'text/javascript1.3':
      case 'text/javascript1.4':
      case 'text/javascript1.5':
      case 'text/jscript':
      case 'text/livescript':
      case 'text/x-ecmascript':
      case 'text/x-javascript':
        return 'text/javascript';
      case 'application/json':
      case 'text/json':
        return 'application/json';
      case 'image/svg+xml':
        return 'image/svg+xml';
      case 'text/xml':
      case 'application/xml':
        return 'application/xml';
    }
    return A.subtype.endsWith('+json')
      ? 'application/json'
      : A.subtype.endsWith('+xml')
        ? 'application/xml'
        : '';
  }
  i0.exports = {
    dataURLProcessor: Q8,
    URLSerializer: r0,
    collectASequenceOfCodePoints: yE,
    collectASequenceOfCodePointsFast: wn,
    stringPercentDecode: o0,
    parseMIMEType: yh,
    collectAnHTTPQuotedString: s0,
    serializeAMimeType: u8,
    removeChars: Dh,
    removeHTTPWhitespace: pE,
    minimizeSupportedMimeType: f8,
    HTTP_TOKEN_CODEPOINTS: ta,
    isomorphicDecode: n0,
  };
});
var ie = B((AsA, a0) => {
  'use strict';
  var { types: ir, inspect: p8 } = require('node:util'),
    { markAsUncloneable: w8 } = require('node:worker_threads'),
    { toUSVString: y8 } = X(),
    p = {};
  p.converters = {};
  p.util = {};
  p.errors = {};
  p.errors.exception = function (A) {
    return new TypeError(`${A.header}: ${A.message}`);
  };
  p.errors.conversionFailed = function (A) {
    let e = A.types.length === 1 ? '' : ' one of',
      t = `${A.argument} could not be converted to${e}: ${A.types.join(', ')}.`;
    return p.errors.exception({ header: A.prefix, message: t });
  };
  p.errors.invalidArgument = function (A) {
    return p.errors.exception({
      header: A.prefix,
      message: `"${A.value}" is an invalid ${A.type}.`,
    });
  };
  p.brandCheck = function (A, e, t) {
    if (t?.strict !== !1) {
      if (!(A instanceof e)) {
        let r = new TypeError('Illegal invocation');
        throw ((r.code = 'ERR_INVALID_THIS'), r);
      }
    } else if (A?.[Symbol.toStringTag] !== e.prototype[Symbol.toStringTag]) {
      let r = new TypeError('Illegal invocation');
      throw ((r.code = 'ERR_INVALID_THIS'), r);
    }
  };
  p.argumentLengthCheck = function ({ length: A }, e, t) {
    if (A < e)
      throw p.errors.exception({
        message: `${e} argument${e !== 1 ? 's' : ''} required, but${A ? ' only' : ''} ${A} found.`,
        header: t,
      });
  };
  p.illegalConstructor = function () {
    throw p.errors.exception({
      header: 'TypeError',
      message: 'Illegal constructor',
    });
  };
  p.util.Type = function (A) {
    switch (typeof A) {
      case 'undefined':
        return 'Undefined';
      case 'boolean':
        return 'Boolean';
      case 'string':
        return 'String';
      case 'symbol':
        return 'Symbol';
      case 'number':
        return 'Number';
      case 'bigint':
        return 'BigInt';
      case 'function':
      case 'object':
        return A === null ? 'Null' : 'Object';
    }
  };
  p.util.markAsUncloneable = w8 || (() => {});
  p.util.ConvertToInt = function (A, e, t, r) {
    let o, s;
    e === 64
      ? ((o = Math.pow(2, 53) - 1),
        t === 'unsigned' ? (s = 0) : (s = Math.pow(-2, 53) + 1))
      : t === 'unsigned'
        ? ((s = 0), (o = Math.pow(2, e) - 1))
        : ((s = Math.pow(-2, e) - 1), (o = Math.pow(2, e - 1) - 1));
    let n = Number(A);
    if ((n === 0 && (n = 0), r?.enforceRange === !0)) {
      if (
        Number.isNaN(n) ||
        n === Number.POSITIVE_INFINITY ||
        n === Number.NEGATIVE_INFINITY
      )
        throw p.errors.exception({
          header: 'Integer conversion',
          message: `Could not convert ${p.util.Stringify(A)} to an integer.`,
        });
      if (((n = p.util.IntegerPart(n)), n < s || n > o))
        throw p.errors.exception({
          header: 'Integer conversion',
          message: `Value must be between ${s}-${o}, got ${n}.`,
        });
      return n;
    }
    return !Number.isNaN(n) && r?.clamp === !0
      ? ((n = Math.min(Math.max(n, s), o)),
        Math.floor(n) % 2 === 0 ? (n = Math.floor(n)) : (n = Math.ceil(n)),
        n)
      : Number.isNaN(n) ||
          (n === 0 && Object.is(0, n)) ||
          n === Number.POSITIVE_INFINITY ||
          n === Number.NEGATIVE_INFINITY
        ? 0
        : ((n = p.util.IntegerPart(n)),
          (n = n % Math.pow(2, e)),
          t === 'signed' && n >= Math.pow(2, e) - 1 ? n - Math.pow(2, e) : n);
  };
  p.util.IntegerPart = function (A) {
    let e = Math.floor(Math.abs(A));
    return A < 0 ? -1 * e : e;
  };
  p.util.Stringify = function (A) {
    switch (p.util.Type(A)) {
      case 'Symbol':
        return `Symbol(${A.description})`;
      case 'Object':
        return p8(A);
      case 'String':
        return `"${A}"`;
      default:
        return `${A}`;
    }
  };
  p.sequenceConverter = function (A) {
    return (e, t, r, o) => {
      if (p.util.Type(e) !== 'Object')
        throw p.errors.exception({
          header: t,
          message: `${r} (${p.util.Stringify(e)}) is not iterable.`,
        });
      let s = typeof o == 'function' ? o() : e?.[Symbol.iterator]?.(),
        n = [],
        i = 0;
      if (s === void 0 || typeof s.next != 'function')
        throw p.errors.exception({
          header: t,
          message: `${r} is not iterable.`,
        });
      for (;;) {
        let { done: a, value: c } = s.next();
        if (a) break;
        n.push(A(c, t, `${r}[${i++}]`));
      }
      return n;
    };
  };
  p.recordConverter = function (A, e) {
    return (t, r, o) => {
      if (p.util.Type(t) !== 'Object')
        throw p.errors.exception({
          header: r,
          message: `${o} ("${p.util.Type(t)}") is not an Object.`,
        });
      let s = {};
      if (!ir.isProxy(t)) {
        let i = [
          ...Object.getOwnPropertyNames(t),
          ...Object.getOwnPropertySymbols(t),
        ];
        for (let a of i) {
          let c = A(a, r, o),
            g = e(t[a], r, o);
          s[c] = g;
        }
        return s;
      }
      let n = Reflect.ownKeys(t);
      for (let i of n)
        if (Reflect.getOwnPropertyDescriptor(t, i)?.enumerable) {
          let c = A(i, r, o),
            g = e(t[i], r, o);
          s[c] = g;
        }
      return s;
    };
  };
  p.interfaceConverter = function (A) {
    return (e, t, r, o) => {
      if (o?.strict !== !1 && !(e instanceof A))
        throw p.errors.exception({
          header: t,
          message: `Expected ${r} ("${p.util.Stringify(e)}") to be an instance of ${A.name}.`,
        });
      return e;
    };
  };
  p.dictionaryConverter = function (A) {
    return (e, t, r) => {
      let o = p.util.Type(e),
        s = {};
      if (o === 'Null' || o === 'Undefined') return s;
      if (o !== 'Object')
        throw p.errors.exception({
          header: t,
          message: `Expected ${e} to be one of: Null, Undefined, Object.`,
        });
      for (let n of A) {
        let { key: i, defaultValue: a, required: c, converter: g } = n;
        if (c === !0 && !Object.hasOwn(e, i))
          throw p.errors.exception({
            header: t,
            message: `Missing required key "${i}".`,
          });
        let E = e[i],
          l = Object.hasOwn(n, 'defaultValue');
        if ((l && E !== null && (E ??= a()), c || l || E !== void 0)) {
          if (
            ((E = g(E, t, `${r}.${i}`)),
            n.allowedValues && !n.allowedValues.includes(E))
          )
            throw p.errors.exception({
              header: t,
              message: `${E} is not an accepted type. Expected one of ${n.allowedValues.join(', ')}.`,
            });
          s[i] = E;
        }
      }
      return s;
    };
  };
  p.nullableConverter = function (A) {
    return (e, t, r) => (e === null ? e : A(e, t, r));
  };
  p.converters.DOMString = function (A, e, t, r) {
    if (A === null && r?.legacyNullToEmptyString) return '';
    if (typeof A == 'symbol')
      throw p.errors.exception({
        header: e,
        message: `${t} is a symbol, which cannot be converted to a DOMString.`,
      });
    return String(A);
  };
  p.converters.ByteString = function (A, e, t) {
    let r = p.converters.DOMString(A, e, t);
    for (let o = 0; o < r.length; o++)
      if (r.charCodeAt(o) > 255)
        throw new TypeError(
          `Cannot convert argument to a ByteString because the character at index ${o} has a value of ${r.charCodeAt(o)} which is greater than 255.`,
        );
    return r;
  };
  p.converters.USVString = y8;
  p.converters.boolean = function (A) {
    return !!A;
  };
  p.converters.any = function (A) {
    return A;
  };
  p.converters['long long'] = function (A, e, t) {
    return p.util.ConvertToInt(A, 64, 'signed', void 0, e, t);
  };
  p.converters['unsigned long long'] = function (A, e, t) {
    return p.util.ConvertToInt(A, 64, 'unsigned', void 0, e, t);
  };
  p.converters['unsigned long'] = function (A, e, t) {
    return p.util.ConvertToInt(A, 32, 'unsigned', void 0, e, t);
  };
  p.converters['unsigned short'] = function (A, e, t, r) {
    return p.util.ConvertToInt(A, 16, 'unsigned', r, e, t);
  };
  p.converters.ArrayBuffer = function (A, e, t, r) {
    if (p.util.Type(A) !== 'Object' || !ir.isAnyArrayBuffer(A))
      throw p.errors.conversionFailed({
        prefix: e,
        argument: `${t} ("${p.util.Stringify(A)}")`,
        types: ['ArrayBuffer'],
      });
    if (r?.allowShared === !1 && ir.isSharedArrayBuffer(A))
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    if (A.resizable || A.growable)
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'Received a resizable ArrayBuffer.',
      });
    return A;
  };
  p.converters.TypedArray = function (A, e, t, r, o) {
    if (
      p.util.Type(A) !== 'Object' ||
      !ir.isTypedArray(A) ||
      A.constructor.name !== e.name
    )
      throw p.errors.conversionFailed({
        prefix: t,
        argument: `${r} ("${p.util.Stringify(A)}")`,
        types: [e.name],
      });
    if (o?.allowShared === !1 && ir.isSharedArrayBuffer(A.buffer))
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    if (A.buffer.resizable || A.buffer.growable)
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'Received a resizable ArrayBuffer.',
      });
    return A;
  };
  p.converters.DataView = function (A, e, t, r) {
    if (p.util.Type(A) !== 'Object' || !ir.isDataView(A))
      throw p.errors.exception({
        header: e,
        message: `${t} is not a DataView.`,
      });
    if (r?.allowShared === !1 && ir.isSharedArrayBuffer(A.buffer))
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'SharedArrayBuffer is not allowed.',
      });
    if (A.buffer.resizable || A.buffer.growable)
      throw p.errors.exception({
        header: 'ArrayBuffer',
        message: 'Received a resizable ArrayBuffer.',
      });
    return A;
  };
  p.converters.BufferSource = function (A, e, t, r) {
    if (ir.isAnyArrayBuffer(A))
      return p.converters.ArrayBuffer(A, e, t, { ...r, allowShared: !1 });
    if (ir.isTypedArray(A))
      return p.converters.TypedArray(A, A.constructor, e, t, {
        ...r,
        allowShared: !1,
      });
    if (ir.isDataView(A))
      return p.converters.DataView(A, e, t, { ...r, allowShared: !1 });
    throw p.errors.conversionFailed({
      prefix: e,
      argument: `${t} ("${p.util.Stringify(A)}")`,
      types: ['BufferSource'],
    });
  };
  p.converters['sequence<ByteString>'] = p.sequenceConverter(
    p.converters.ByteString,
  );
  p.converters['sequence<sequence<ByteString>>'] = p.sequenceConverter(
    p.converters['sequence<ByteString>'],
  );
  p.converters['record<ByteString, ByteString>'] = p.recordConverter(
    p.converters.ByteString,
    p.converters.ByteString,
  );
  a0.exports = { webidl: p };
});
var tt = B((esA, w0) => {
  'use strict';
  var { Transform: D8 } = require('node:stream'),
    c0 = require('node:zlib'),
    { redirectStatusSet: m8, referrerPolicySet: k8, badPortsSet: R8 } = ea(),
    { getGlobalOrigin: g0 } = wh(),
    {
      collectASequenceOfCodePoints: jo,
      collectAnHTTPQuotedString: b8,
      removeChars: F8,
      parseMIMEType: S8,
    } = ve(),
    { performance: T8 } = require('node:perf_hooks'),
    {
      isBlobLike: N8,
      ReadableStreamFrom: U8,
      isValidHTTPToken: E0,
      normalizedMethodRecordsBase: M8,
    } = X(),
    Zo = require('node:assert'),
    { isUint8Array: L8 } = require('node:util/types'),
    { webidl: ra } = ie(),
    l0 = [],
    mE;
  try {
    mE = require('node:crypto');
    let A = ['sha256', 'sha384', 'sha512'];
    l0 = mE.getHashes().filter((e) => A.includes(e));
  } catch {}
  function Q0(A) {
    let e = A.urlList,
      t = e.length;
    return t === 0 ? null : e[t - 1].toString();
  }
  function G8(A, e) {
    if (!m8.has(A.status)) return null;
    let t = A.headersList.get('location', !0);
    return (
      t !== null && B0(t) && (C0(t) || (t = x8(t)), (t = new URL(t, Q0(A)))),
      t && !t.hash && (t.hash = e),
      t
    );
  }
  function C0(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (t > 126 || t < 32) return !1;
    }
    return !0;
  }
  function x8(A) {
    return Buffer.from(A, 'binary').toString('utf8');
  }
  function sa(A) {
    return A.urlList[A.urlList.length - 1];
  }
  function v8(A) {
    let e = sa(A);
    return f0(e) && R8.has(e.port) ? 'blocked' : 'allowed';
  }
  function O8(A) {
    return (
      A instanceof Error ||
      A?.constructor?.name === 'Error' ||
      A?.constructor?.name === 'DOMException'
    );
  }
  function Y8(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (!(t === 9 || (t >= 32 && t <= 126) || (t >= 128 && t <= 255)))
        return !1;
    }
    return !0;
  }
  var J8 = E0;
  function B0(A) {
    return (
      (A[0] === '	' ||
        A[0] === ' ' ||
        A[A.length - 1] === '	' ||
        A[A.length - 1] === ' ' ||
        A.includes(`
`) ||
        A.includes('\r') ||
        A.includes('\0')) === !1
    );
  }
  function H8(A, e) {
    let { headersList: t } = e,
      r = (t.get('referrer-policy', !0) ?? '').split(','),
      o = '';
    if (r.length > 0)
      for (let s = r.length; s !== 0; s--) {
        let n = r[s - 1].trim();
        if (k8.has(n)) {
          o = n;
          break;
        }
      }
    o !== '' && (A.referrerPolicy = o);
  }
  function V8() {
    return 'allowed';
  }
  function q8() {
    return 'success';
  }
  function P8() {
    return 'success';
  }
  function W8(A) {
    let e = null;
    (e = A.mode), A.headersList.set('sec-fetch-mode', e, !0);
  }
  function _8(A) {
    let e = A.origin;
    if (!(e === 'client' || e === void 0)) {
      if (A.responseTainting === 'cors' || A.mode === 'websocket')
        A.headersList.append('origin', e, !0);
      else if (A.method !== 'GET' && A.method !== 'HEAD') {
        switch (A.referrerPolicy) {
          case 'no-referrer':
            e = null;
            break;
          case 'no-referrer-when-downgrade':
          case 'strict-origin':
          case 'strict-origin-when-cross-origin':
            A.origin && kh(A.origin) && !kh(sa(A)) && (e = null);
            break;
          case 'same-origin':
            kE(A, sa(A)) || (e = null);
            break;
          default:
        }
        A.headersList.append('origin', e, !0);
      }
    }
  }
  function yn(A, e) {
    return A;
  }
  function j8(A, e, t) {
    return !A?.startTime || A.startTime < e
      ? {
          domainLookupStartTime: e,
          domainLookupEndTime: e,
          connectionStartTime: e,
          connectionEndTime: e,
          secureConnectionStartTime: e,
          ALPNNegotiatedProtocol: A?.ALPNNegotiatedProtocol,
        }
      : {
          domainLookupStartTime: yn(A.domainLookupStartTime, t),
          domainLookupEndTime: yn(A.domainLookupEndTime, t),
          connectionStartTime: yn(A.connectionStartTime, t),
          connectionEndTime: yn(A.connectionEndTime, t),
          secureConnectionStartTime: yn(A.secureConnectionStartTime, t),
          ALPNNegotiatedProtocol: A.ALPNNegotiatedProtocol,
        };
  }
  function Z8(A) {
    return yn(T8.now(), A);
  }
  function K8(A) {
    return {
      startTime: A.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: A.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null,
    };
  }
  function u0() {
    return { referrerPolicy: 'strict-origin-when-cross-origin' };
  }
  function X8(A) {
    return { referrerPolicy: A.referrerPolicy };
  }
  function z8(A) {
    let e = A.referrerPolicy;
    Zo(e);
    let t = null;
    if (A.referrer === 'client') {
      let i = g0();
      if (!i || i.origin === 'null') return 'no-referrer';
      t = new URL(i);
    } else A.referrer instanceof URL && (t = A.referrer);
    let r = mh(t),
      o = mh(t, !0);
    r.toString().length > 4096 && (r = o);
    let s = kE(A, r),
      n = oa(r) && !oa(A.url);
    switch (e) {
      case 'origin':
        return o ?? mh(t, !0);
      case 'unsafe-url':
        return r;
      case 'same-origin':
        return s ? o : 'no-referrer';
      case 'origin-when-cross-origin':
        return s ? r : o;
      case 'strict-origin-when-cross-origin': {
        let i = sa(A);
        return kE(r, i) ? r : oa(r) && !oa(i) ? 'no-referrer' : o;
      }
      case 'strict-origin':
      case 'no-referrer-when-downgrade':
      default:
        return n ? 'no-referrer' : o;
    }
  }
  function mh(A, e) {
    return (
      Zo(A instanceof URL),
      (A = new URL(A)),
      A.protocol === 'file:' ||
      A.protocol === 'about:' ||
      A.protocol === 'blank:'
        ? 'no-referrer'
        : ((A.username = ''),
          (A.password = ''),
          (A.hash = ''),
          e && ((A.pathname = ''), (A.search = '')),
          A)
    );
  }
  function oa(A) {
    if (!(A instanceof URL)) return !1;
    if (
      A.href === 'about:blank' ||
      A.href === 'about:srcdoc' ||
      A.protocol === 'data:' ||
      A.protocol === 'file:'
    )
      return !0;
    return e(A.origin);
    function e(t) {
      if (t == null || t === 'null') return !1;
      let r = new URL(t);
      return !!(
        r.protocol === 'https:' ||
        r.protocol === 'wss:' ||
        /^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(
          r.hostname,
        ) ||
        r.hostname === 'localhost' ||
        r.hostname.includes('localhost.') ||
        r.hostname.endsWith('.localhost')
      );
    }
  }
  function $8(A, e) {
    if (mE === void 0) return !0;
    let t = h0(e);
    if (t === 'no metadata' || t.length === 0) return !0;
    let r = ej(t),
      o = tj(t, r);
    for (let s of o) {
      let n = s.algo,
        i = s.hash,
        a = mE.createHash(n).update(A).digest('base64');
      if (
        (a[a.length - 1] === '=' &&
          (a[a.length - 2] === '='
            ? (a = a.slice(0, -2))
            : (a = a.slice(0, -1))),
        rj(a, i))
      )
        return !0;
    }
    return !1;
  }
  var Aj =
    /(?<algo>sha256|sha384|sha512)-((?<hash>[A-Za-z0-9+/]+|[A-Za-z0-9_-]+)={0,2}(?:\s|$)( +[!-~]*)?)?/i;
  function h0(A) {
    let e = [],
      t = !0;
    for (let r of A.split(' ')) {
      t = !1;
      let o = Aj.exec(r);
      if (o === null || o.groups === void 0 || o.groups.algo === void 0)
        continue;
      let s = o.groups.algo.toLowerCase();
      l0.includes(s) && e.push(o.groups);
    }
    return t === !0 ? 'no metadata' : e;
  }
  function ej(A) {
    let e = A[0].algo;
    if (e[3] === '5') return e;
    for (let t = 1; t < A.length; ++t) {
      let r = A[t];
      if (r.algo[3] === '5') {
        e = 'sha512';
        break;
      } else {
        if (e[3] === '3') continue;
        r.algo[3] === '3' && (e = 'sha384');
      }
    }
    return e;
  }
  function tj(A, e) {
    if (A.length === 1) return A;
    let t = 0;
    for (let r = 0; r < A.length; ++r) A[r].algo === e && (A[t++] = A[r]);
    return (A.length = t), A;
  }
  function rj(A, e) {
    if (A.length !== e.length) return !1;
    for (let t = 0; t < A.length; ++t)
      if (A[t] !== e[t]) {
        if ((A[t] === '+' && e[t] === '-') || (A[t] === '/' && e[t] === '_'))
          continue;
        return !1;
      }
    return !0;
  }
  function oj(A) {}
  function kE(A, e) {
    return (
      (A.origin === e.origin && A.origin === 'null') ||
      (A.protocol === e.protocol &&
        A.hostname === e.hostname &&
        A.port === e.port)
    );
  }
  function sj() {
    let A, e;
    return {
      promise: new Promise((r, o) => {
        (A = r), (e = o);
      }),
      resolve: A,
      reject: e,
    };
  }
  function nj(A) {
    return A.controller.state === 'aborted';
  }
  function ij(A) {
    return (
      A.controller.state === 'aborted' || A.controller.state === 'terminated'
    );
  }
  function aj(A) {
    return M8[A.toLowerCase()] ?? A;
  }
  function cj(A) {
    let e = JSON.stringify(A);
    if (e === void 0) throw new TypeError('Value is not JSON serializable');
    return Zo(typeof e == 'string'), e;
  }
  var gj = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
  function I0(A, e, t = 0, r = 1) {
    class o {
      #A;
      #e;
      #r;
      constructor(n, i) {
        (this.#A = n), (this.#e = i), (this.#r = 0);
      }
      next() {
        if (typeof this != 'object' || this === null || !(#A in this))
          throw new TypeError(
            `'next' called on an object that does not implement interface ${A} Iterator.`,
          );
        let n = this.#r,
          i = this.#A[e],
          a = i.length;
        if (n >= a) return { value: void 0, done: !0 };
        let { [t]: c, [r]: g } = i[n];
        this.#r = n + 1;
        let E;
        switch (this.#e) {
          case 'key':
            E = c;
            break;
          case 'value':
            E = g;
            break;
          case 'key+value':
            E = [c, g];
            break;
        }
        return { value: E, done: !1 };
      }
    }
    return (
      delete o.prototype.constructor,
      Object.setPrototypeOf(o.prototype, gj),
      Object.defineProperties(o.prototype, {
        [Symbol.toStringTag]: {
          writable: !1,
          enumerable: !1,
          configurable: !0,
          value: `${A} Iterator`,
        },
        next: { writable: !0, enumerable: !0, configurable: !0 },
      }),
      function (s, n) {
        return new o(s, n);
      }
    );
  }
  function Ej(A, e, t, r = 0, o = 1) {
    let s = I0(A, t, r, o),
      n = {
        keys: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function () {
            return ra.brandCheck(this, e), s(this, 'key');
          },
        },
        values: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function () {
            return ra.brandCheck(this, e), s(this, 'value');
          },
        },
        entries: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function () {
            return ra.brandCheck(this, e), s(this, 'key+value');
          },
        },
        forEach: {
          writable: !0,
          enumerable: !0,
          configurable: !0,
          value: function (a, c = globalThis) {
            if (
              (ra.brandCheck(this, e),
              ra.argumentLengthCheck(arguments, 1, `${A}.forEach`),
              typeof a != 'function')
            )
              throw new TypeError(
                `Failed to execute 'forEach' on '${A}': parameter 1 is not of type 'Function'.`,
              );
            for (let { 0: g, 1: E } of s(this, 'key+value'))
              a.call(c, E, g, this);
          },
        },
      };
    return Object.defineProperties(e.prototype, {
      ...n,
      [Symbol.iterator]: {
        writable: !0,
        enumerable: !1,
        configurable: !0,
        value: n.entries.value,
      },
    });
  }
  async function lj(A, e, t) {
    let r = e,
      o = t,
      s;
    try {
      s = A.stream.getReader();
    } catch (n) {
      o(n);
      return;
    }
    try {
      r(await d0(s));
    } catch (n) {
      o(n);
    }
  }
  function Qj(A) {
    return (
      A instanceof ReadableStream ||
      (A[Symbol.toStringTag] === 'ReadableStream' && typeof A.tee == 'function')
    );
  }
  function Cj(A) {
    try {
      A.close(), A.byobRequest?.respond(0);
    } catch (e) {
      if (
        !e.message.includes('Controller is already closed') &&
        !e.message.includes('ReadableStream is already closed')
      )
        throw e;
    }
  }
  var Bj = /[^\x00-\xFF]/;
  function DE(A) {
    return Zo(!Bj.test(A)), A;
  }
  async function d0(A) {
    let e = [],
      t = 0;
    for (;;) {
      let { done: r, value: o } = await A.read();
      if (r) return Buffer.concat(e, t);
      if (!L8(o)) throw new TypeError('Received non-Uint8Array chunk');
      e.push(o), (t += o.length);
    }
  }
  function uj(A) {
    Zo('protocol' in A);
    let e = A.protocol;
    return e === 'about:' || e === 'blob:' || e === 'data:';
  }
  function kh(A) {
    return (
      (typeof A == 'string' &&
        A[5] === ':' &&
        A[0] === 'h' &&
        A[1] === 't' &&
        A[2] === 't' &&
        A[3] === 'p' &&
        A[4] === 's') ||
      A.protocol === 'https:'
    );
  }
  function f0(A) {
    Zo('protocol' in A);
    let e = A.protocol;
    return e === 'http:' || e === 'https:';
  }
  function hj(A, e) {
    let t = A;
    if (!t.startsWith('bytes')) return 'failure';
    let r = { position: 5 };
    if (
      (e && jo((a) => a === '	' || a === ' ', t, r),
      t.charCodeAt(r.position) !== 61)
    )
      return 'failure';
    r.position++, e && jo((a) => a === '	' || a === ' ', t, r);
    let o = jo(
        (a) => {
          let c = a.charCodeAt(0);
          return c >= 48 && c <= 57;
        },
        t,
        r,
      ),
      s = o.length ? Number(o) : null;
    if (
      (e && jo((a) => a === '	' || a === ' ', t, r),
      t.charCodeAt(r.position) !== 45)
    )
      return 'failure';
    r.position++, e && jo((a) => a === '	' || a === ' ', t, r);
    let n = jo(
        (a) => {
          let c = a.charCodeAt(0);
          return c >= 48 && c <= 57;
        },
        t,
        r,
      ),
      i = n.length ? Number(n) : null;
    return r.position < t.length || (i === null && s === null) || s > i
      ? 'failure'
      : { rangeStartValue: s, rangeEndValue: i };
  }
  function Ij(A, e, t) {
    let r = 'bytes ';
    return (
      (r += DE(`${A}`)),
      (r += '-'),
      (r += DE(`${e}`)),
      (r += '/'),
      (r += DE(`${t}`)),
      r
    );
  }
  var Rh = class extends D8 {
    #A;
    constructor(e) {
      super(), (this.#A = e);
    }
    _transform(e, t, r) {
      if (!this._inflateStream) {
        if (e.length === 0) {
          r();
          return;
        }
        (this._inflateStream =
          (e[0] & 15) === 8
            ? c0.createInflate(this.#A)
            : c0.createInflateRaw(this.#A)),
          this._inflateStream.on('data', this.push.bind(this)),
          this._inflateStream.on('end', () => this.push(null)),
          this._inflateStream.on('error', (o) => this.destroy(o));
      }
      this._inflateStream.write(e, t, r);
    }
    _final(e) {
      this._inflateStream &&
        (this._inflateStream.end(), (this._inflateStream = null)),
        e();
    }
  };
  function dj(A) {
    return new Rh(A);
  }
  function fj(A) {
    let e = null,
      t = null,
      r = null,
      o = p0('content-type', A);
    if (o === null) return 'failure';
    for (let s of o) {
      let n = S8(s);
      n === 'failure' ||
        n.essence === '*/*' ||
        ((r = n),
        r.essence !== t
          ? ((e = null),
            r.parameters.has('charset') && (e = r.parameters.get('charset')),
            (t = r.essence))
          : !r.parameters.has('charset') &&
            e !== null &&
            r.parameters.set('charset', e));
    }
    return r ?? 'failure';
  }
  function pj(A) {
    let e = A,
      t = { position: 0 },
      r = [],
      o = '';
    for (; t.position < e.length; ) {
      if (
        ((o += jo((s) => s !== '"' && s !== ',', e, t)), t.position < e.length)
      )
        if (e.charCodeAt(t.position) === 34) {
          if (((o += b8(e, t)), t.position < e.length)) continue;
        } else Zo(e.charCodeAt(t.position) === 44), t.position++;
      (o = F8(o, !0, !0, (s) => s === 9 || s === 32)), r.push(o), (o = '');
    }
    return r;
  }
  function p0(A, e) {
    let t = e.get(A, !0);
    return t === null ? null : pj(t);
  }
  var wj = new TextDecoder();
  function yj(A) {
    return A.length === 0
      ? ''
      : (A[0] === 239 && A[1] === 187 && A[2] === 191 && (A = A.subarray(3)),
        wj.decode(A));
  }
  var bh = class {
      get baseUrl() {
        return g0();
      }
      get origin() {
        return this.baseUrl?.origin;
      }
      policyContainer = u0();
    },
    Fh = class {
      settingsObject = new bh();
    },
    Dj = new Fh();
  w0.exports = {
    isAborted: nj,
    isCancelled: ij,
    isValidEncodedURL: C0,
    createDeferredPromise: sj,
    ReadableStreamFrom: U8,
    tryUpgradeRequestToAPotentiallyTrustworthyURL: oj,
    clampAndCoarsenConnectionTimingInfo: j8,
    coarsenedSharedCurrentTime: Z8,
    determineRequestsReferrer: z8,
    makePolicyContainer: u0,
    clonePolicyContainer: X8,
    appendFetchMetadata: W8,
    appendRequestOriginHeader: _8,
    TAOCheck: P8,
    corsCheck: q8,
    crossOriginResourcePolicyCheck: V8,
    createOpaqueTimingInfo: K8,
    setRequestReferrerPolicyOnRedirect: H8,
    isValidHTTPToken: E0,
    requestBadPort: v8,
    requestCurrentURL: sa,
    responseURL: Q0,
    responseLocationURL: G8,
    isBlobLike: N8,
    isURLPotentiallyTrustworthy: oa,
    isValidReasonPhrase: Y8,
    sameOrigin: kE,
    normalizeMethod: aj,
    serializeJavascriptValueToJSONString: cj,
    iteratorMixin: Ej,
    createIterator: I0,
    isValidHeaderName: J8,
    isValidHeaderValue: B0,
    isErrorLike: O8,
    fullyReadBody: lj,
    bytesMatch: $8,
    isReadableStreamLike: Qj,
    readableStreamClose: Cj,
    isomorphicEncode: DE,
    urlIsLocal: uj,
    urlHasHttpsScheme: kh,
    urlIsHttpHttpsScheme: f0,
    readAllBytes: d0,
    simpleRangeHeaderValue: hj,
    buildContentRange: Ij,
    parseMetadata: h0,
    createInflate: dj,
    extractMimeType: fj,
    getDecodeSplit: p0,
    utf8DecodeBytes: yj,
    environmentSettingsObject: Dj,
  };
});
var ao = B((tsA, y0) => {
  'use strict';
  y0.exports = {
    kUrl: Symbol('url'),
    kHeaders: Symbol('headers'),
    kSignal: Symbol('signal'),
    kState: Symbol('state'),
    kDispatcher: Symbol('dispatcher'),
  };
});
var Th = B((rsA, D0) => {
  'use strict';
  var { Blob: mj, File: kj } = require('node:buffer'),
    { kState: xr } = ao(),
    { webidl: ar } = ie(),
    Sh = class A {
      constructor(e, t, r = {}) {
        let o = t,
          s = r.type,
          n = r.lastModified ?? Date.now();
        this[xr] = { blobLike: e, name: o, type: s, lastModified: n };
      }
      stream(...e) {
        return ar.brandCheck(this, A), this[xr].blobLike.stream(...e);
      }
      arrayBuffer(...e) {
        return ar.brandCheck(this, A), this[xr].blobLike.arrayBuffer(...e);
      }
      slice(...e) {
        return ar.brandCheck(this, A), this[xr].blobLike.slice(...e);
      }
      text(...e) {
        return ar.brandCheck(this, A), this[xr].blobLike.text(...e);
      }
      get size() {
        return ar.brandCheck(this, A), this[xr].blobLike.size;
      }
      get type() {
        return ar.brandCheck(this, A), this[xr].blobLike.type;
      }
      get name() {
        return ar.brandCheck(this, A), this[xr].name;
      }
      get lastModified() {
        return ar.brandCheck(this, A), this[xr].lastModified;
      }
      get [Symbol.toStringTag]() {
        return 'File';
      }
    };
  ar.converters.Blob = ar.interfaceConverter(mj);
  function Rj(A) {
    return (
      A instanceof kj ||
      (A &&
        (typeof A.stream == 'function' || typeof A.arrayBuffer == 'function') &&
        A[Symbol.toStringTag] === 'File')
    );
  }
  D0.exports = { FileLike: Sh, isFileLike: Rj };
});
var ia = B((osA, F0) => {
  'use strict';
  var { isBlobLike: RE, iteratorMixin: bj } = tt(),
    { kState: me } = ao(),
    { kEnumerableProperty: Dn } = X(),
    { FileLike: m0, isFileLike: Fj } = Th(),
    { webidl: wA } = ie(),
    { File: b0 } = require('node:buffer'),
    k0 = require('node:util'),
    R0 = globalThis.File ?? b0,
    na = class A {
      constructor(e) {
        if ((wA.util.markAsUncloneable(this), e !== void 0))
          throw wA.errors.conversionFailed({
            prefix: 'FormData constructor',
            argument: 'Argument 1',
            types: ['undefined'],
          });
        this[me] = [];
      }
      append(e, t, r = void 0) {
        wA.brandCheck(this, A);
        let o = 'FormData.append';
        if (
          (wA.argumentLengthCheck(arguments, 2, o),
          arguments.length === 3 && !RE(t))
        )
          throw new TypeError(
            "Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'",
          );
        (e = wA.converters.USVString(e, o, 'name')),
          (t = RE(t)
            ? wA.converters.Blob(t, o, 'value', { strict: !1 })
            : wA.converters.USVString(t, o, 'value')),
          (r =
            arguments.length === 3
              ? wA.converters.USVString(r, o, 'filename')
              : void 0);
        let s = Nh(e, t, r);
        this[me].push(s);
      }
      delete(e) {
        wA.brandCheck(this, A);
        let t = 'FormData.delete';
        wA.argumentLengthCheck(arguments, 1, t),
          (e = wA.converters.USVString(e, t, 'name')),
          (this[me] = this[me].filter((r) => r.name !== e));
      }
      get(e) {
        wA.brandCheck(this, A);
        let t = 'FormData.get';
        wA.argumentLengthCheck(arguments, 1, t),
          (e = wA.converters.USVString(e, t, 'name'));
        let r = this[me].findIndex((o) => o.name === e);
        return r === -1 ? null : this[me][r].value;
      }
      getAll(e) {
        wA.brandCheck(this, A);
        let t = 'FormData.getAll';
        return (
          wA.argumentLengthCheck(arguments, 1, t),
          (e = wA.converters.USVString(e, t, 'name')),
          this[me].filter((r) => r.name === e).map((r) => r.value)
        );
      }
      has(e) {
        wA.brandCheck(this, A);
        let t = 'FormData.has';
        return (
          wA.argumentLengthCheck(arguments, 1, t),
          (e = wA.converters.USVString(e, t, 'name')),
          this[me].findIndex((r) => r.name === e) !== -1
        );
      }
      set(e, t, r = void 0) {
        wA.brandCheck(this, A);
        let o = 'FormData.set';
        if (
          (wA.argumentLengthCheck(arguments, 2, o),
          arguments.length === 3 && !RE(t))
        )
          throw new TypeError(
            "Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'",
          );
        (e = wA.converters.USVString(e, o, 'name')),
          (t = RE(t)
            ? wA.converters.Blob(t, o, 'name', { strict: !1 })
            : wA.converters.USVString(t, o, 'name')),
          (r =
            arguments.length === 3
              ? wA.converters.USVString(r, o, 'name')
              : void 0);
        let s = Nh(e, t, r),
          n = this[me].findIndex((i) => i.name === e);
        n !== -1
          ? (this[me] = [
              ...this[me].slice(0, n),
              s,
              ...this[me].slice(n + 1).filter((i) => i.name !== e),
            ])
          : this[me].push(s);
      }
      [k0.inspect.custom](e, t) {
        let r = this[me].reduce(
          (s, n) => (
            s[n.name]
              ? Array.isArray(s[n.name])
                ? s[n.name].push(n.value)
                : (s[n.name] = [s[n.name], n.value])
              : (s[n.name] = n.value),
            s
          ),
          { __proto__: null },
        );
        (t.depth ??= e), (t.colors ??= !0);
        let o = k0.formatWithOptions(t, r);
        return `FormData ${o.slice(o.indexOf(']') + 2)}`;
      }
    };
  bj('FormData', na, me, 'name', 'value');
  Object.defineProperties(na.prototype, {
    append: Dn,
    delete: Dn,
    get: Dn,
    getAll: Dn,
    has: Dn,
    set: Dn,
    [Symbol.toStringTag]: { value: 'FormData', configurable: !0 },
  });
  function Nh(A, e, t) {
    if (typeof e != 'string') {
      if (
        (Fj(e) ||
          (e =
            e instanceof Blob
              ? new R0([e], 'blob', { type: e.type })
              : new m0(e, 'blob', { type: e.type })),
        t !== void 0)
      ) {
        let r = { type: e.type, lastModified: e.lastModified };
        e = e instanceof b0 ? new R0([e], t, r) : new m0(e, t, r);
      }
    }
    return { name: A, value: e };
  }
  F0.exports = { FormData: na, makeEntry: Nh };
});
var L0 = B((ssA, M0) => {
  'use strict';
  var { isUSVString: S0, bufferToLowerCasedHeaderName: Sj } = X(),
    { utf8DecodeBytes: Tj } = tt(),
    { HTTP_TOKEN_CODEPOINTS: Nj, isomorphicDecode: T0 } = ve(),
    { isFileLike: Uj } = Th(),
    { makeEntry: Mj } = ia(),
    bE = require('node:assert'),
    { File: Lj } = require('node:buffer'),
    Gj = globalThis.File ?? Lj,
    xj = Buffer.from('form-data; name="'),
    N0 = Buffer.from('; filename'),
    vj = Buffer.from('--'),
    Oj = Buffer.from(`--\r
`);
  function Yj(A) {
    for (let e = 0; e < A.length; ++e) if (A.charCodeAt(e) & -128) return !1;
    return !0;
  }
  function Jj(A) {
    let e = A.length;
    if (e < 27 || e > 70) return !1;
    for (let t = 0; t < e; ++t) {
      let r = A.charCodeAt(t);
      if (
        !(
          (r >= 48 && r <= 57) ||
          (r >= 65 && r <= 90) ||
          (r >= 97 && r <= 122) ||
          r === 39 ||
          r === 45 ||
          r === 95
        )
      )
        return !1;
    }
    return !0;
  }
  function Hj(A, e) {
    bE(e !== 'failure' && e.essence === 'multipart/form-data');
    let t = e.parameters.get('boundary');
    if (t === void 0) return 'failure';
    let r = Buffer.from(`--${t}`, 'utf8'),
      o = [],
      s = { position: 0 };
    for (; A[s.position] === 13 && A[s.position + 1] === 10; ) s.position += 2;
    let n = A.length;
    for (; A[n - 1] === 10 && A[n - 2] === 13; ) n -= 2;
    for (n !== A.length && (A = A.subarray(0, n)); ; ) {
      if (A.subarray(s.position, s.position + r.length).equals(r))
        s.position += r.length;
      else return 'failure';
      if (
        (s.position === A.length - 2 && FE(A, vj, s)) ||
        (s.position === A.length - 4 && FE(A, Oj, s))
      )
        return o;
      if (A[s.position] !== 13 || A[s.position + 1] !== 10) return 'failure';
      s.position += 2;
      let i = Vj(A, s);
      if (i === 'failure') return 'failure';
      let { name: a, filename: c, contentType: g, encoding: E } = i;
      s.position += 2;
      let l;
      {
        let Q = A.indexOf(r.subarray(2), s.position);
        if (Q === -1) return 'failure';
        (l = A.subarray(s.position, Q - 4)),
          (s.position += l.length),
          E === 'base64' && (l = Buffer.from(l.toString(), 'base64'));
      }
      if (A[s.position] !== 13 || A[s.position + 1] !== 10) return 'failure';
      s.position += 2;
      let C;
      c !== null
        ? ((g ??= 'text/plain'),
          Yj(g) || (g = ''),
          (C = new Gj([l], c, { type: g })))
        : (C = Tj(Buffer.from(l))),
        bE(S0(a)),
        bE((typeof C == 'string' && S0(C)) || Uj(C)),
        o.push(Mj(a, C, c));
    }
  }
  function Vj(A, e) {
    let t = null,
      r = null,
      o = null,
      s = null;
    for (;;) {
      if (A[e.position] === 13 && A[e.position + 1] === 10)
        return t === null
          ? 'failure'
          : { name: t, filename: r, contentType: o, encoding: s };
      let n = mn((i) => i !== 10 && i !== 13 && i !== 58, A, e);
      if (
        ((n = Uh(n, !0, !0, (i) => i === 9 || i === 32)),
        !Nj.test(n.toString()) || A[e.position] !== 58)
      )
        return 'failure';
      switch ((e.position++, mn((i) => i === 32 || i === 9, A, e), Sj(n))) {
        case 'content-disposition': {
          if (
            ((t = r = null),
            !FE(A, xj, e) || ((e.position += 17), (t = U0(A, e)), t === null))
          )
            return 'failure';
          if (FE(A, N0, e)) {
            let i = e.position + N0.length;
            if (
              (A[i] === 42 && ((e.position += 1), (i += 1)),
              A[i] !== 61 ||
                A[i + 1] !== 34 ||
                ((e.position += 12), (r = U0(A, e)), r === null))
            )
              return 'failure';
          }
          break;
        }
        case 'content-type': {
          let i = mn((a) => a !== 10 && a !== 13, A, e);
          (i = Uh(i, !1, !0, (a) => a === 9 || a === 32)), (o = T0(i));
          break;
        }
        case 'content-transfer-encoding': {
          let i = mn((a) => a !== 10 && a !== 13, A, e);
          (i = Uh(i, !1, !0, (a) => a === 9 || a === 32)), (s = T0(i));
          break;
        }
        default:
          mn((i) => i !== 10 && i !== 13, A, e);
      }
      if (A[e.position] !== 13 && A[e.position + 1] !== 10) return 'failure';
      e.position += 2;
    }
  }
  function U0(A, e) {
    bE(A[e.position - 1] === 34);
    let t = mn((r) => r !== 10 && r !== 13 && r !== 34, A, e);
    return A[e.position] !== 34
      ? null
      : (e.position++,
        (t = new TextDecoder()
          .decode(t)
          .replace(
            /%0A/gi,
            `
`,
          )
          .replace(/%0D/gi, '\r')
          .replace(/%22/g, '"')),
        t);
  }
  function mn(A, e, t) {
    let r = t.position;
    for (; r < e.length && A(e[r]); ) ++r;
    return e.subarray(t.position, (t.position = r));
  }
  function Uh(A, e, t, r) {
    let o = 0,
      s = A.length - 1;
    if (e) for (; o < A.length && r(A[o]); ) o++;
    if (t) for (; s > 0 && r(A[s]); ) s--;
    return o === 0 && s === A.length - 1 ? A : A.subarray(o, s + 1);
  }
  function FE(A, e, t) {
    if (A.length < e.length) return !1;
    for (let r = 0; r < e.length; r++)
      if (e[r] !== A[t.position + r]) return !1;
    return !0;
  }
  M0.exports = { multipartFormDataParser: Hj, validateBoundary: Jj };
});
var ca = B((nsA, V0) => {
  'use strict';
  var aa = X(),
    {
      ReadableStreamFrom: qj,
      isBlobLike: G0,
      isReadableStreamLike: Pj,
      readableStreamClose: Wj,
      createDeferredPromise: _j,
      fullyReadBody: jj,
      extractMimeType: Zj,
      utf8DecodeBytes: O0,
    } = tt(),
    { FormData: x0 } = ia(),
    { kState: Rn } = ao(),
    { webidl: Kj } = ie(),
    { Blob: Xj } = require('node:buffer'),
    Mh = require('node:assert'),
    { isErrored: Y0, isDisturbed: zj } = require('node:stream'),
    { isArrayBuffer: $j } = require('node:util/types'),
    { serializeAMimeType: AZ } = ve(),
    { multipartFormDataParser: eZ } = L0(),
    SE = new TextEncoder();
  function tZ() {}
  var Lh =
      globalThis.FinalizationRegistry && process.version.indexOf('v18') !== 0,
    Gh;
  Lh &&
    (Gh = new FinalizationRegistry((A) => {
      let e = A.deref();
      e &&
        !e.locked &&
        !zj(e) &&
        !Y0(e) &&
        e.cancel('Response object has been garbage collected').catch(tZ);
    }));
  function J0(A, e = !1) {
    let t = null;
    A instanceof ReadableStream
      ? (t = A)
      : G0(A)
        ? (t = A.stream())
        : (t = new ReadableStream({
            async pull(a) {
              let c = typeof o == 'string' ? SE.encode(o) : o;
              c.byteLength && a.enqueue(c), queueMicrotask(() => Wj(a));
            },
            start() {},
            type: 'bytes',
          })),
      Mh(Pj(t));
    let r = null,
      o = null,
      s = null,
      n = null;
    if (typeof A == 'string') (o = A), (n = 'text/plain;charset=UTF-8');
    else if (A instanceof URLSearchParams)
      (o = A.toString()),
        (n = 'application/x-www-form-urlencoded;charset=UTF-8');
    else if ($j(A)) o = new Uint8Array(A.slice());
    else if (ArrayBuffer.isView(A))
      o = new Uint8Array(
        A.buffer.slice(A.byteOffset, A.byteOffset + A.byteLength),
      );
    else if (aa.isFormDataLike(A)) {
      let a = `----formdata-undici-0${`${Math.floor(Math.random() * 1e11)}`.padStart(11, '0')}`,
        c = `--${a}\r
Content-Disposition: form-data`;
      let g = (I) =>
          I.replace(/\n/g, '%0A').replace(/\r/g, '%0D').replace(/"/g, '%22'),
        E = (I) =>
          I.replace(
            /\r?\n|\r/g,
            `\r
`,
          ),
        l = [],
        C = new Uint8Array([13, 10]);
      s = 0;
      let Q = !1;
      for (let [I, u] of A)
        if (typeof u == 'string') {
          let d = SE.encode(
            c +
              `; name="${g(E(I))}"\r
\r
${E(u)}\r
`,
          );
          l.push(d), (s += d.byteLength);
        } else {
          let d = SE.encode(
            `${c}; name="${g(E(I))}"` +
              (u.name ? `; filename="${g(u.name)}"` : '') +
              `\r
Content-Type: ${u.type || 'application/octet-stream'}\r
\r
`,
          );
          l.push(d, u, C),
            typeof u.size == 'number'
              ? (s += d.byteLength + u.size + C.byteLength)
              : (Q = !0);
        }
      let h = SE.encode(`--${a}--`);
      l.push(h),
        (s += h.byteLength),
        Q && (s = null),
        (o = A),
        (r = async function* () {
          for (let I of l) I.stream ? yield* I.stream() : yield I;
        }),
        (n = `multipart/form-data; boundary=${a}`);
    } else if (G0(A)) (o = A), (s = A.size), A.type && (n = A.type);
    else if (typeof A[Symbol.asyncIterator] == 'function') {
      if (e) throw new TypeError('keepalive');
      if (aa.isDisturbed(A) || A.locked)
        throw new TypeError(
          'Response body object should not be disturbed or locked',
        );
      t = A instanceof ReadableStream ? A : qj(A);
    }
    if (
      ((typeof o == 'string' || aa.isBuffer(o)) && (s = Buffer.byteLength(o)),
      r != null)
    ) {
      let a;
      t = new ReadableStream({
        async start() {
          a = r(A)[Symbol.asyncIterator]();
        },
        async pull(c) {
          let { value: g, done: E } = await a.next();
          if (E)
            queueMicrotask(() => {
              c.close(), c.byobRequest?.respond(0);
            });
          else if (!Y0(t)) {
            let l = new Uint8Array(g);
            l.byteLength && c.enqueue(l);
          }
          return c.desiredSize > 0;
        },
        async cancel(c) {
          await a.return();
        },
        type: 'bytes',
      });
    }
    return [{ stream: t, source: o, length: s }, n];
  }
  function rZ(A, e = !1) {
    return (
      A instanceof ReadableStream &&
        (Mh(!aa.isDisturbed(A), 'The body has already been consumed.'),
        Mh(!A.locked, 'The stream is locked.')),
      J0(A, e)
    );
  }
  function oZ(A, e) {
    let [t, r] = e.stream.tee();
    return (
      Lh && Gh.register(A, new WeakRef(t)),
      (e.stream = t),
      { stream: r, length: e.length, source: e.source }
    );
  }
  function sZ(A) {
    if (A.aborted)
      throw new DOMException('The operation was aborted.', 'AbortError');
  }
  function nZ(A) {
    return {
      blob() {
        return kn(
          this,
          (t) => {
            let r = v0(this);
            return (
              r === null ? (r = '') : r && (r = AZ(r)), new Xj([t], { type: r })
            );
          },
          A,
        );
      },
      arrayBuffer() {
        return kn(this, (t) => new Uint8Array(t).buffer, A);
      },
      text() {
        return kn(this, O0, A);
      },
      json() {
        return kn(this, aZ, A);
      },
      formData() {
        return kn(
          this,
          (t) => {
            let r = v0(this);
            if (r !== null)
              switch (r.essence) {
                case 'multipart/form-data': {
                  let o = eZ(t, r);
                  if (o === 'failure')
                    throw new TypeError('Failed to parse body as FormData.');
                  let s = new x0();
                  return (s[Rn] = o), s;
                }
                case 'application/x-www-form-urlencoded': {
                  let o = new URLSearchParams(t.toString()),
                    s = new x0();
                  for (let [n, i] of o) s.append(n, i);
                  return s;
                }
              }
            throw new TypeError(
              'Content-Type was not one of "multipart/form-data" or "application/x-www-form-urlencoded".',
            );
          },
          A,
        );
      },
      bytes() {
        return kn(this, (t) => new Uint8Array(t), A);
      },
    };
  }
  function iZ(A) {
    Object.assign(A.prototype, nZ(A));
  }
  async function kn(A, e, t) {
    if ((Kj.brandCheck(A, t), H0(A)))
      throw new TypeError('Body is unusable: Body has already been read');
    sZ(A[Rn]);
    let r = _j(),
      o = (n) => r.reject(n),
      s = (n) => {
        try {
          r.resolve(e(n));
        } catch (i) {
          o(i);
        }
      };
    return A[Rn].body == null
      ? (s(Buffer.allocUnsafe(0)), r.promise)
      : (await jj(A[Rn].body, s, o), r.promise);
  }
  function H0(A) {
    let e = A[Rn].body;
    return e != null && (e.stream.locked || aa.isDisturbed(e.stream));
  }
  function aZ(A) {
    return JSON.parse(O0(A));
  }
  function v0(A) {
    let e = A[Rn].headersList,
      t = Zj(e);
    return t === 'failure' ? null : t;
  }
  V0.exports = {
    extractBody: J0,
    safelyExtractBody: rZ,
    cloneBody: oZ,
    mixinBody: iZ,
    streamRegistry: Gh,
    hasFinalizationRegistry: Lh,
    bodyUnusable: H0,
  };
});
var AF = B((isA, $0) => {
  'use strict';
  var G = require('node:assert'),
    V = X(),
    { channels: q0 } = Bn(),
    xh = hh(),
    {
      RequestContentLengthMismatchError: Ko,
      ResponseContentLengthMismatchError: cZ,
      RequestAbortedError: K0,
      HeadersTimeoutError: gZ,
      HeadersOverflowError: EZ,
      SocketError: GE,
      InformationalError: bn,
      BodyTimeoutError: lZ,
      HTTPParserError: QZ,
      ResponseExceededMaxSizeError: CZ,
    } = aA(),
    {
      kUrl: X0,
      kReset: Oe,
      kClient: Jh,
      kParser: GA,
      kBlocking: la,
      kRunning: Qe,
      kPending: BZ,
      kSize: P0,
      kWriting: go,
      kQueue: Gt,
      kNoRef: ga,
      kKeepAliveDefaultTimeout: uZ,
      kHostHeader: hZ,
      kPendingIdx: IZ,
      kRunningIdx: ft,
      kError: pt,
      kPipelining: ME,
      kSocket: Fn,
      kKeepAliveTimeoutValue: xE,
      kMaxHeadersSize: vh,
      kKeepAliveMaxTimeout: dZ,
      kKeepAliveTimeoutThreshold: fZ,
      kHeadersTimeout: pZ,
      kBodyTimeout: wZ,
      kStrictContentLength: Hh,
      kMaxRequests: W0,
      kCounter: yZ,
      kMaxResponseSize: DZ,
      kOnError: mZ,
      kResume: co,
      kHTTPContext: z0,
    } = FA(),
    cr = Hb(),
    kZ = Buffer.alloc(0),
    TE = Buffer[Symbol.species],
    NE = V.addListener,
    RZ = V.removeAllListeners,
    Oh;
  async function bZ() {
    let A = process.env.JEST_WORKER_ID ? fh() : void 0,
      e;
    try {
      e = await WebAssembly.compile(Pb());
    } catch {
      e = await WebAssembly.compile(A || fh());
    }
    return await WebAssembly.instantiate(e, {
      env: {
        wasm_on_url: (t, r, o) => 0,
        wasm_on_status: (t, r, o) => {
          G(XA.ptr === t);
          let s = r - Er + gr.byteOffset;
          return XA.onStatus(new TE(gr.buffer, s, o)) || 0;
        },
        wasm_on_message_begin: (t) => (
          G(XA.ptr === t), XA.onMessageBegin() || 0
        ),
        wasm_on_header_field: (t, r, o) => {
          G(XA.ptr === t);
          let s = r - Er + gr.byteOffset;
          return XA.onHeaderField(new TE(gr.buffer, s, o)) || 0;
        },
        wasm_on_header_value: (t, r, o) => {
          G(XA.ptr === t);
          let s = r - Er + gr.byteOffset;
          return XA.onHeaderValue(new TE(gr.buffer, s, o)) || 0;
        },
        wasm_on_headers_complete: (t, r, o, s) => (
          G(XA.ptr === t), XA.onHeadersComplete(r, !!o, !!s) || 0
        ),
        wasm_on_body: (t, r, o) => {
          G(XA.ptr === t);
          let s = r - Er + gr.byteOffset;
          return XA.onBody(new TE(gr.buffer, s, o)) || 0;
        },
        wasm_on_message_complete: (t) => (
          G(XA.ptr === t), XA.onMessageComplete() || 0
        ),
      },
    });
  }
  var Yh = null,
    Vh = bZ();
  Vh.catch();
  var XA = null,
    gr = null,
    UE = 0,
    Er = null,
    FZ = 0,
    Ea = 1,
    Sn = 2 | Ea,
    LE = 4 | Ea,
    qh = 8 | FZ,
    Ph = class {
      constructor(e, t, { exports: r }) {
        G(Number.isFinite(e[vh]) && e[vh] > 0),
          (this.llhttp = r),
          (this.ptr = this.llhttp.llhttp_alloc(cr.TYPE.RESPONSE)),
          (this.client = e),
          (this.socket = t),
          (this.timeout = null),
          (this.timeoutValue = null),
          (this.timeoutType = null),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.upgrade = !1),
          (this.headers = []),
          (this.headersSize = 0),
          (this.headersMaxSize = e[vh]),
          (this.shouldKeepAlive = !1),
          (this.paused = !1),
          (this.resume = this.resume.bind(this)),
          (this.bytesRead = 0),
          (this.keepAlive = ''),
          (this.contentLength = ''),
          (this.connection = ''),
          (this.maxResponseSize = e[DZ]);
      }
      setTimeout(e, t) {
        e !== this.timeoutValue || (t & Ea) ^ (this.timeoutType & Ea)
          ? (this.timeout &&
              (xh.clearTimeout(this.timeout), (this.timeout = null)),
            e &&
              (t & Ea
                ? (this.timeout = xh.setFastTimeout(_0, e, new WeakRef(this)))
                : ((this.timeout = setTimeout(_0, e, new WeakRef(this))),
                  this.timeout.unref())),
            (this.timeoutValue = e))
          : this.timeout && this.timeout.refresh && this.timeout.refresh(),
          (this.timeoutType = t);
      }
      resume() {
        this.socket.destroyed ||
          !this.paused ||
          (G(this.ptr != null),
          G(XA == null),
          this.llhttp.llhttp_resume(this.ptr),
          G(this.timeoutType === LE),
          this.timeout && this.timeout.refresh && this.timeout.refresh(),
          (this.paused = !1),
          this.execute(this.socket.read() || kZ),
          this.readMore());
      }
      readMore() {
        for (; !this.paused && this.ptr; ) {
          let e = this.socket.read();
          if (e === null) break;
          this.execute(e);
        }
      }
      execute(e) {
        G(this.ptr != null), G(XA == null), G(!this.paused);
        let { socket: t, llhttp: r } = this;
        e.length > UE &&
          (Er && r.free(Er),
          (UE = Math.ceil(e.length / 4096) * 4096),
          (Er = r.malloc(UE))),
          new Uint8Array(r.memory.buffer, Er, UE).set(e);
        try {
          let o;
          try {
            (gr = e),
              (XA = this),
              (o = r.llhttp_execute(this.ptr, Er, e.length));
          } catch (n) {
            throw n;
          } finally {
            (XA = null), (gr = null);
          }
          let s = r.llhttp_get_error_pos(this.ptr) - Er;
          if (o === cr.ERROR.PAUSED_UPGRADE) this.onUpgrade(e.slice(s));
          else if (o === cr.ERROR.PAUSED)
            (this.paused = !0), t.unshift(e.slice(s));
          else if (o !== cr.ERROR.OK) {
            let n = r.llhttp_get_error_reason(this.ptr),
              i = '';
            if (n) {
              let a = new Uint8Array(r.memory.buffer, n).indexOf(0);
              i =
                'Response does not match the HTTP/1.1 protocol (' +
                Buffer.from(r.memory.buffer, n, a).toString() +
                ')';
            }
            throw new QZ(i, cr.ERROR[o], e.slice(s));
          }
        } catch (o) {
          V.destroy(t, o);
        }
      }
      destroy() {
        G(this.ptr != null),
          G(XA == null),
          this.llhttp.llhttp_free(this.ptr),
          (this.ptr = null),
          this.timeout && xh.clearTimeout(this.timeout),
          (this.timeout = null),
          (this.timeoutValue = null),
          (this.timeoutType = null),
          (this.paused = !1);
      }
      onStatus(e) {
        this.statusText = e.toString();
      }
      onMessageBegin() {
        let { socket: e, client: t } = this;
        if (e.destroyed) return -1;
        let r = t[Gt][t[ft]];
        if (!r) return -1;
        r.onResponseStarted();
      }
      onHeaderField(e) {
        let t = this.headers.length;
        t & 1
          ? (this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]))
          : this.headers.push(e),
          this.trackHeader(e.length);
      }
      onHeaderValue(e) {
        let t = this.headers.length;
        (t & 1) === 1
          ? (this.headers.push(e), (t += 1))
          : (this.headers[t - 1] = Buffer.concat([this.headers[t - 1], e]));
        let r = this.headers[t - 2];
        if (r.length === 10) {
          let o = V.bufferToLowerCasedHeaderName(r);
          o === 'keep-alive'
            ? (this.keepAlive += e.toString())
            : o === 'connection' && (this.connection += e.toString());
        } else
          r.length === 14 &&
            V.bufferToLowerCasedHeaderName(r) === 'content-length' &&
            (this.contentLength += e.toString());
        this.trackHeader(e.length);
      }
      trackHeader(e) {
        (this.headersSize += e),
          this.headersSize >= this.headersMaxSize &&
            V.destroy(this.socket, new EZ());
      }
      onUpgrade(e) {
        let {
          upgrade: t,
          client: r,
          socket: o,
          headers: s,
          statusCode: n,
        } = this;
        G(t),
          G(r[Fn] === o),
          G(!o.destroyed),
          G(!this.paused),
          G((s.length & 1) === 0);
        let i = r[Gt][r[ft]];
        G(i),
          G(i.upgrade || i.method === 'CONNECT'),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.shouldKeepAlive = null),
          (this.headers = []),
          (this.headersSize = 0),
          o.unshift(e),
          o[GA].destroy(),
          (o[GA] = null),
          (o[Jh] = null),
          (o[pt] = null),
          RZ(o),
          (r[Fn] = null),
          (r[z0] = null),
          (r[Gt][r[ft]++] = null),
          r.emit('disconnect', r[X0], [r], new bn('upgrade'));
        try {
          i.onUpgrade(n, s, o);
        } catch (a) {
          V.destroy(o, a);
        }
        r[co]();
      }
      onHeadersComplete(e, t, r) {
        let { client: o, socket: s, headers: n, statusText: i } = this;
        if (s.destroyed) return -1;
        let a = o[Gt][o[ft]];
        if (!a) return -1;
        if ((G(!this.upgrade), G(this.statusCode < 200), e === 100))
          return V.destroy(s, new GE('bad response', V.getSocketInfo(s))), -1;
        if (t && !a.upgrade)
          return V.destroy(s, new GE('bad upgrade', V.getSocketInfo(s))), -1;
        if (
          (G(this.timeoutType === Sn),
          (this.statusCode = e),
          (this.shouldKeepAlive =
            r ||
            (a.method === 'HEAD' &&
              !s[Oe] &&
              this.connection.toLowerCase() === 'keep-alive')),
          this.statusCode >= 200)
        ) {
          let g = a.bodyTimeout != null ? a.bodyTimeout : o[wZ];
          this.setTimeout(g, LE);
        } else this.timeout && this.timeout.refresh && this.timeout.refresh();
        if (a.method === 'CONNECT')
          return G(o[Qe] === 1), (this.upgrade = !0), 2;
        if (t) return G(o[Qe] === 1), (this.upgrade = !0), 2;
        if (
          (G((this.headers.length & 1) === 0),
          (this.headers = []),
          (this.headersSize = 0),
          this.shouldKeepAlive && o[ME])
        ) {
          let g = this.keepAlive
            ? V.parseKeepAliveTimeout(this.keepAlive)
            : null;
          if (g != null) {
            let E = Math.min(g - o[fZ], o[dZ]);
            E <= 0 ? (s[Oe] = !0) : (o[xE] = E);
          } else o[xE] = o[uZ];
        } else s[Oe] = !0;
        let c = a.onHeaders(e, n, this.resume, i) === !1;
        return a.aborted
          ? -1
          : a.method === 'HEAD' || e < 200
            ? 1
            : (s[la] && ((s[la] = !1), o[co]()), c ? cr.ERROR.PAUSED : 0);
      }
      onBody(e) {
        let { client: t, socket: r, statusCode: o, maxResponseSize: s } = this;
        if (r.destroyed) return -1;
        let n = t[Gt][t[ft]];
        if (
          (G(n),
          G(this.timeoutType === LE),
          this.timeout && this.timeout.refresh && this.timeout.refresh(),
          G(o >= 200),
          s > -1 && this.bytesRead + e.length > s)
        )
          return V.destroy(r, new CZ()), -1;
        if (((this.bytesRead += e.length), n.onData(e) === !1))
          return cr.ERROR.PAUSED;
      }
      onMessageComplete() {
        let {
          client: e,
          socket: t,
          statusCode: r,
          upgrade: o,
          headers: s,
          contentLength: n,
          bytesRead: i,
          shouldKeepAlive: a,
        } = this;
        if (t.destroyed && (!r || a)) return -1;
        if (o) return;
        G(r >= 100), G((this.headers.length & 1) === 0);
        let c = e[Gt][e[ft]];
        if (
          (G(c),
          (this.statusCode = null),
          (this.statusText = ''),
          (this.bytesRead = 0),
          (this.contentLength = ''),
          (this.keepAlive = ''),
          (this.connection = ''),
          (this.headers = []),
          (this.headersSize = 0),
          !(r < 200))
        ) {
          if (c.method !== 'HEAD' && n && i !== parseInt(n, 10))
            return V.destroy(t, new cZ()), -1;
          if ((c.onComplete(s), (e[Gt][e[ft]++] = null), t[go]))
            return (
              G(e[Qe] === 0), V.destroy(t, new bn('reset')), cr.ERROR.PAUSED
            );
          if (a) {
            if (t[Oe] && e[Qe] === 0)
              return V.destroy(t, new bn('reset')), cr.ERROR.PAUSED;
            e[ME] == null || e[ME] === 1
              ? setImmediate(() => e[co]())
              : e[co]();
          } else return V.destroy(t, new bn('reset')), cr.ERROR.PAUSED;
        }
      }
    };
  function _0(A) {
    let { socket: e, timeoutType: t, client: r, paused: o } = A.deref();
    t === Sn
      ? (!e[go] || e.writableNeedDrain || r[Qe] > 1) &&
        (G(!o, 'cannot be paused while waiting for headers'),
        V.destroy(e, new gZ()))
      : t === LE
        ? o || V.destroy(e, new lZ())
        : t === qh &&
          (G(r[Qe] === 0 && r[xE]),
          V.destroy(e, new bn('socket idle timeout')));
  }
  async function SZ(A, e) {
    (A[Fn] = e),
      Yh || ((Yh = await Vh), (Vh = null)),
      (e[ga] = !1),
      (e[go] = !1),
      (e[Oe] = !1),
      (e[la] = !1),
      (e[GA] = new Ph(A, e, Yh)),
      NE(e, 'error', function (r) {
        G(r.code !== 'ERR_TLS_CERT_ALTNAME_INVALID');
        let o = this[GA];
        if (r.code === 'ECONNRESET' && o.statusCode && !o.shouldKeepAlive) {
          o.onMessageComplete();
          return;
        }
        (this[pt] = r), this[Jh][mZ](r);
      }),
      NE(e, 'readable', function () {
        let r = this[GA];
        r && r.readMore();
      }),
      NE(e, 'end', function () {
        let r = this[GA];
        if (r.statusCode && !r.shouldKeepAlive) {
          r.onMessageComplete();
          return;
        }
        V.destroy(this, new GE('other side closed', V.getSocketInfo(this)));
      }),
      NE(e, 'close', function () {
        let r = this[Jh],
          o = this[GA];
        o &&
          (!this[pt] &&
            o.statusCode &&
            !o.shouldKeepAlive &&
            o.onMessageComplete(),
          this[GA].destroy(),
          (this[GA] = null));
        let s = this[pt] || new GE('closed', V.getSocketInfo(this));
        if (((r[Fn] = null), (r[z0] = null), r.destroyed)) {
          G(r[BZ] === 0);
          let n = r[Gt].splice(r[ft]);
          for (let i = 0; i < n.length; i++) {
            let a = n[i];
            V.errorRequest(r, a, s);
          }
        } else if (r[Qe] > 0 && s.code !== 'UND_ERR_INFO') {
          let n = r[Gt][r[ft]];
          (r[Gt][r[ft]++] = null), V.errorRequest(r, n, s);
        }
        (r[IZ] = r[ft]),
          G(r[Qe] === 0),
          r.emit('disconnect', r[X0], [r], s),
          r[co]();
      });
    let t = !1;
    return (
      e.on('close', () => {
        t = !0;
      }),
      {
        version: 'h1',
        defaultPipelining: 1,
        write(...r) {
          return UZ(A, ...r);
        },
        resume() {
          TZ(A);
        },
        destroy(r, o) {
          t ? queueMicrotask(o) : e.destroy(r).on('close', o);
        },
        get destroyed() {
          return e.destroyed;
        },
        busy(r) {
          return !!(
            e[go] ||
            e[Oe] ||
            e[la] ||
            (r &&
              ((A[Qe] > 0 && !r.idempotent) ||
                (A[Qe] > 0 && (r.upgrade || r.method === 'CONNECT')) ||
                (A[Qe] > 0 &&
                  V.bodyLength(r.body) !== 0 &&
                  (V.isStream(r.body) ||
                    V.isAsyncIterable(r.body) ||
                    V.isFormDataLike(r.body)))))
          );
        },
      }
    );
  }
  function TZ(A) {
    let e = A[Fn];
    if (e && !e.destroyed) {
      if (
        (A[P0] === 0
          ? !e[ga] && e.unref && (e.unref(), (e[ga] = !0))
          : e[ga] && e.ref && (e.ref(), (e[ga] = !1)),
        A[P0] === 0)
      )
        e[GA].timeoutType !== qh && e[GA].setTimeout(A[xE], qh);
      else if (
        A[Qe] > 0 &&
        e[GA].statusCode < 200 &&
        e[GA].timeoutType !== Sn
      ) {
        let t = A[Gt][A[ft]],
          r = t.headersTimeout != null ? t.headersTimeout : A[pZ];
        e[GA].setTimeout(r, Sn);
      }
    }
  }
  function NZ(A) {
    return (
      A !== 'GET' &&
      A !== 'HEAD' &&
      A !== 'OPTIONS' &&
      A !== 'TRACE' &&
      A !== 'CONNECT'
    );
  }
  function UZ(A, e) {
    let { method: t, path: r, host: o, upgrade: s, blocking: n, reset: i } = e,
      { body: a, headers: c, contentLength: g } = e,
      E =
        t === 'PUT' ||
        t === 'POST' ||
        t === 'PATCH' ||
        t === 'QUERY' ||
        t === 'PROPFIND' ||
        t === 'PROPPATCH';
    if (V.isFormDataLike(a)) {
      Oh || (Oh = ca().extractBody);
      let [I, u] = Oh(a);
      e.contentType == null && c.push('content-type', u),
        (a = I.stream),
        (g = I.length);
    } else
      V.isBlobLike(a) &&
        e.contentType == null &&
        a.type &&
        c.push('content-type', a.type);
    a && typeof a.read == 'function' && a.read(0);
    let l = V.bodyLength(a);
    if (
      ((g = l ?? g),
      g === null && (g = e.contentLength),
      g === 0 && !E && (g = null),
      NZ(t) && g > 0 && e.contentLength !== null && e.contentLength !== g)
    ) {
      if (A[Hh]) return V.errorRequest(A, e, new Ko()), !1;
      process.emitWarning(new Ko());
    }
    let C = A[Fn],
      Q = (I) => {
        e.aborted ||
          e.completed ||
          (V.errorRequest(A, e, I || new K0()),
          V.destroy(a),
          V.destroy(C, new bn('aborted')));
      };
    try {
      e.onConnect(Q);
    } catch (I) {
      V.errorRequest(A, e, I);
    }
    if (e.aborted) return !1;
    t === 'HEAD' && (C[Oe] = !0),
      (s || t === 'CONNECT') && (C[Oe] = !0),
      i != null && (C[Oe] = i),
      A[W0] && C[yZ]++ >= A[W0] && (C[Oe] = !0),
      n && (C[la] = !0);
    let h = `${t} ${r} HTTP/1.1\r
`;
    if (
      (typeof o == 'string'
        ? (h += `host: ${o}\r
`)
        : (h += A[hZ]),
      s
        ? (h += `connection: upgrade\r
upgrade: ${s}\r
`)
        : A[ME] && !C[Oe]
          ? (h += `connection: keep-alive\r
`)
          : (h += `connection: close\r
`),
      Array.isArray(c))
    )
      for (let I = 0; I < c.length; I += 2) {
        let u = c[I + 0],
          d = c[I + 1];
        if (Array.isArray(d))
          for (let f = 0; f < d.length; f++)
            h += `${u}: ${d[f]}\r
`;
        else
          h += `${u}: ${d}\r
`;
      }
    return (
      q0.sendHeaders.hasSubscribers &&
        q0.sendHeaders.publish({ request: e, headers: h, socket: C }),
      !a || l === 0
        ? j0(Q, null, A, e, C, g, h, E)
        : V.isBuffer(a)
          ? j0(Q, a, A, e, C, g, h, E)
          : V.isBlobLike(a)
            ? typeof a.stream == 'function'
              ? Z0(Q, a.stream(), A, e, C, g, h, E)
              : LZ(Q, a, A, e, C, g, h, E)
            : V.isStream(a)
              ? MZ(Q, a, A, e, C, g, h, E)
              : V.isIterable(a)
                ? Z0(Q, a, A, e, C, g, h, E)
                : G(!1),
      !0
    );
  }
  function MZ(A, e, t, r, o, s, n, i) {
    G(s !== 0 || t[Qe] === 0, 'stream body cannot be pipelined');
    let a = !1,
      c = new vE({
        abort: A,
        socket: o,
        request: r,
        contentLength: s,
        client: t,
        expectsPayload: i,
        header: n,
      }),
      g = function (Q) {
        if (!a)
          try {
            !c.write(Q) && this.pause && this.pause();
          } catch (h) {
            V.destroy(this, h);
          }
      },
      E = function () {
        a || (e.resume && e.resume());
      },
      l = function () {
        if (
          (queueMicrotask(() => {
            e.removeListener('error', C);
          }),
          !a)
        ) {
          let Q = new K0();
          queueMicrotask(() => C(Q));
        }
      },
      C = function (Q) {
        if (!a) {
          if (
            ((a = !0),
            G(o.destroyed || (o[go] && t[Qe] <= 1)),
            o.off('drain', E).off('error', C),
            e
              .removeListener('data', g)
              .removeListener('end', C)
              .removeListener('close', l),
            !Q)
          )
            try {
              c.end();
            } catch (h) {
              Q = h;
            }
          c.destroy(Q),
            Q && (Q.code !== 'UND_ERR_INFO' || Q.message !== 'reset')
              ? V.destroy(e, Q)
              : V.destroy(e);
        }
      };
    e.on('data', g).on('end', C).on('error', C).on('close', l),
      e.resume && e.resume(),
      o.on('drain', E).on('error', C),
      (e.errorEmitted ?? e.errored)
        ? setImmediate(() => C(e.errored))
        : (e.endEmitted ?? e.readableEnded) && setImmediate(() => C(null)),
      (e.closeEmitted ?? e.closed) && setImmediate(l);
  }
  function j0(A, e, t, r, o, s, n, i) {
    try {
      e
        ? V.isBuffer(e) &&
          (G(s === e.byteLength, 'buffer body must have content length'),
          o.cork(),
          o.write(
            `${n}content-length: ${s}\r
\r
`,
            'latin1',
          ),
          o.write(e),
          o.uncork(),
          r.onBodySent(e),
          !i && r.reset !== !1 && (o[Oe] = !0))
        : s === 0
          ? o.write(
              `${n}content-length: 0\r
\r
`,
              'latin1',
            )
          : (G(s === null, 'no body must not have content length'),
            o.write(
              `${n}\r
`,
              'latin1',
            )),
        r.onRequestSent(),
        t[co]();
    } catch (a) {
      A(a);
    }
  }
  async function LZ(A, e, t, r, o, s, n, i) {
    G(s === e.size, 'blob body must have content length');
    try {
      if (s != null && s !== e.size) throw new Ko();
      let a = Buffer.from(await e.arrayBuffer());
      o.cork(),
        o.write(
          `${n}content-length: ${s}\r
\r
`,
          'latin1',
        ),
        o.write(a),
        o.uncork(),
        r.onBodySent(a),
        r.onRequestSent(),
        !i && r.reset !== !1 && (o[Oe] = !0),
        t[co]();
    } catch (a) {
      A(a);
    }
  }
  async function Z0(A, e, t, r, o, s, n, i) {
    G(s !== 0 || t[Qe] === 0, 'iterator body cannot be pipelined');
    let a = null;
    function c() {
      if (a) {
        let l = a;
        (a = null), l();
      }
    }
    let g = () =>
      new Promise((l, C) => {
        G(a === null), o[pt] ? C(o[pt]) : (a = l);
      });
    o.on('close', c).on('drain', c);
    let E = new vE({
      abort: A,
      socket: o,
      request: r,
      contentLength: s,
      client: t,
      expectsPayload: i,
      header: n,
    });
    try {
      for await (let l of e) {
        if (o[pt]) throw o[pt];
        E.write(l) || (await g());
      }
      E.end();
    } catch (l) {
      E.destroy(l);
    } finally {
      o.off('close', c).off('drain', c);
    }
  }
  var vE = class {
    constructor({
      abort: e,
      socket: t,
      request: r,
      contentLength: o,
      client: s,
      expectsPayload: n,
      header: i,
    }) {
      (this.socket = t),
        (this.request = r),
        (this.contentLength = o),
        (this.client = s),
        (this.bytesWritten = 0),
        (this.expectsPayload = n),
        (this.header = i),
        (this.abort = e),
        (t[go] = !0);
    }
    write(e) {
      let {
        socket: t,
        request: r,
        contentLength: o,
        client: s,
        bytesWritten: n,
        expectsPayload: i,
        header: a,
      } = this;
      if (t[pt]) throw t[pt];
      if (t.destroyed) return !1;
      let c = Buffer.byteLength(e);
      if (!c) return !0;
      if (o !== null && n + c > o) {
        if (s[Hh]) throw new Ko();
        process.emitWarning(new Ko());
      }
      t.cork(),
        n === 0 &&
          (!i && r.reset !== !1 && (t[Oe] = !0),
          o === null
            ? t.write(
                `${a}transfer-encoding: chunked\r
`,
                'latin1',
              )
            : t.write(
                `${a}content-length: ${o}\r
\r
`,
                'latin1',
              )),
        o === null &&
          t.write(
            `\r
${c.toString(16)}\r
`,
            'latin1',
          ),
        (this.bytesWritten += c);
      let g = t.write(e);
      return (
        t.uncork(),
        r.onBodySent(e),
        g ||
          (t[GA].timeout &&
            t[GA].timeoutType === Sn &&
            t[GA].timeout.refresh &&
            t[GA].timeout.refresh()),
        g
      );
    }
    end() {
      let {
        socket: e,
        contentLength: t,
        client: r,
        bytesWritten: o,
        expectsPayload: s,
        header: n,
        request: i,
      } = this;
      if ((i.onRequestSent(), (e[go] = !1), e[pt])) throw e[pt];
      if (!e.destroyed) {
        if (
          (o === 0
            ? s
              ? e.write(
                  `${n}content-length: 0\r
\r
`,
                  'latin1',
                )
              : e.write(
                  `${n}\r
`,
                  'latin1',
                )
            : t === null &&
              e.write(
                `\r
0\r
\r
`,
                'latin1',
              ),
          t !== null && o !== t)
        ) {
          if (r[Hh]) throw new Ko();
          process.emitWarning(new Ko());
        }
        e[GA].timeout &&
          e[GA].timeoutType === Sn &&
          e[GA].timeout.refresh &&
          e[GA].timeout.refresh(),
          r[co]();
      }
    }
    destroy(e) {
      let { socket: t, client: r, abort: o } = this;
      (t[go] = !1),
        e && (G(r[Qe] <= 1, 'pipeline should only contain this request'), o(e));
    }
  };
  $0.exports = SZ;
});
var iF = B((asA, nF) => {
  'use strict';
  var wt = require('node:assert'),
    { pipeline: GZ } = require('node:stream'),
    AA = X(),
    {
      RequestContentLengthMismatchError: Wh,
      RequestAbortedError: eF,
      SocketError: Qa,
      InformationalError: _h,
    } = aA(),
    {
      kUrl: OE,
      kReset: JE,
      kClient: Tn,
      kRunning: HE,
      kPending: xZ,
      kQueue: Xo,
      kPendingIdx: jh,
      kRunningIdx: lr,
      kError: vt,
      kSocket: te,
      kStrictContentLength: vZ,
      kOnError: Zh,
      kMaxConcurrentStreams: sF,
      kHTTP2Session: xt,
      kResume: Eo,
      kSize: OZ,
      kHTTPContext: YZ,
    } = FA(),
    vr = Symbol('open streams'),
    tF = !1,
    YE;
  try {
    YE = require('node:http2');
  } catch {
    YE = { constants: {} };
  }
  var {
    constants: {
      HTTP2_HEADER_AUTHORITY: JZ,
      HTTP2_HEADER_METHOD: HZ,
      HTTP2_HEADER_PATH: VZ,
      HTTP2_HEADER_SCHEME: qZ,
      HTTP2_HEADER_CONTENT_LENGTH: PZ,
      HTTP2_HEADER_EXPECT: WZ,
      HTTP2_HEADER_STATUS: _Z,
    },
  } = YE;
  function jZ(A) {
    let e = [];
    for (let [t, r] of Object.entries(A))
      if (Array.isArray(r))
        for (let o of r) e.push(Buffer.from(t), Buffer.from(o));
      else e.push(Buffer.from(t), Buffer.from(r));
    return e;
  }
  async function ZZ(A, e) {
    (A[te] = e),
      tF ||
        ((tF = !0),
        process.emitWarning(
          'H2 support is experimental, expect them to change at any time.',
          { code: 'UNDICI-H2' },
        ));
    let t = YE.connect(A[OE], {
      createConnection: () => e,
      peerMaxConcurrentStreams: A[sF],
    });
    (t[vr] = 0),
      (t[Tn] = A),
      (t[te] = e),
      AA.addListener(t, 'error', XZ),
      AA.addListener(t, 'frameError', zZ),
      AA.addListener(t, 'end', $Z),
      AA.addListener(t, 'goaway', AK),
      AA.addListener(t, 'close', function () {
        let { [Tn]: o } = this,
          { [te]: s } = o,
          n = this[te][vt] || this[vt] || new Qa('closed', AA.getSocketInfo(s));
        if (((o[xt] = null), o.destroyed)) {
          wt(o[xZ] === 0);
          let i = o[Xo].splice(o[lr]);
          for (let a = 0; a < i.length; a++) {
            let c = i[a];
            AA.errorRequest(o, c, n);
          }
        }
      }),
      t.unref(),
      (A[xt] = t),
      (e[xt] = t),
      AA.addListener(e, 'error', function (o) {
        wt(o.code !== 'ERR_TLS_CERT_ALTNAME_INVALID'),
          (this[vt] = o),
          this[Tn][Zh](o);
      }),
      AA.addListener(e, 'end', function () {
        AA.destroy(this, new Qa('other side closed', AA.getSocketInfo(this)));
      }),
      AA.addListener(e, 'close', function () {
        let o = this[vt] || new Qa('closed', AA.getSocketInfo(this));
        (A[te] = null),
          this[xt] != null && this[xt].destroy(o),
          (A[jh] = A[lr]),
          wt(A[HE] === 0),
          A.emit('disconnect', A[OE], [A], o),
          A[Eo]();
      });
    let r = !1;
    return (
      e.on('close', () => {
        r = !0;
      }),
      {
        version: 'h2',
        defaultPipelining: 1 / 0,
        write(...o) {
          return tK(A, ...o);
        },
        resume() {
          KZ(A);
        },
        destroy(o, s) {
          r ? queueMicrotask(s) : e.destroy(o).on('close', s);
        },
        get destroyed() {
          return e.destroyed;
        },
        busy() {
          return !1;
        },
      }
    );
  }
  function KZ(A) {
    let e = A[te];
    e?.destroyed === !1 &&
      (A[OZ] === 0 && A[sF] === 0
        ? (e.unref(), A[xt].unref())
        : (e.ref(), A[xt].ref()));
  }
  function XZ(A) {
    wt(A.code !== 'ERR_TLS_CERT_ALTNAME_INVALID'),
      (this[te][vt] = A),
      this[Tn][Zh](A);
  }
  function zZ(A, e, t) {
    if (t === 0) {
      let r = new _h(`HTTP/2: "frameError" received - type ${A}, code ${e}`);
      (this[te][vt] = r), this[Tn][Zh](r);
    }
  }
  function $Z() {
    let A = new Qa('other side closed', AA.getSocketInfo(this[te]));
    this.destroy(A), AA.destroy(this[te], A);
  }
  function AK(A) {
    let e =
        this[vt] ||
        new Qa(
          `HTTP/2: "GOAWAY" frame received with code ${A}`,
          AA.getSocketInfo(this),
        ),
      t = this[Tn];
    (t[te] = null),
      (t[YZ] = null),
      this[xt] != null && (this[xt].destroy(e), (this[xt] = null)),
      AA.destroy(this[te], e);
    let r = t[Xo][t[lr]];
    (t[Xo][t[lr]++] = null),
      AA.errorRequest(t, r, e),
      (t[jh] = t[lr]),
      wt(t[HE] === 0),
      t.emit('disconnect', t[OE], [t], e),
      t[Eo]();
  }
  function eK(A) {
    return (
      A !== 'GET' &&
      A !== 'HEAD' &&
      A !== 'OPTIONS' &&
      A !== 'TRACE' &&
      A !== 'CONNECT'
    );
  }
  function tK(A, e) {
    let t = A[xt],
      {
        body: r,
        method: o,
        path: s,
        host: n,
        upgrade: i,
        expectContinue: a,
        signal: c,
        headers: g,
      } = e;
    if (i)
      return (
        AA.errorRequest(A, e, new Error('Upgrade not supported for H2')), !1
      );
    let E = {};
    for (let D = 0; D < g.length; D += 2) {
      let q = g[D + 0],
        j = g[D + 1];
      if (Array.isArray(j))
        for (let J = 0; J < j.length; J++)
          E[q] ? (E[q] += `,${j[J]}`) : (E[q] = j[J]);
      else E[q] = j;
    }
    let l,
      { hostname: C, port: Q } = A[OE];
    (E[JZ] = n || `${C}${Q ? `:${Q}` : ''}`), (E[HZ] = o);
    let h = (D) => {
      e.aborted ||
        e.completed ||
        ((D = D || new eF()),
        AA.errorRequest(A, e, D),
        l != null && AA.destroy(l, D),
        AA.destroy(r, D),
        (A[Xo][A[lr]++] = null),
        A[Eo]());
    };
    try {
      e.onConnect(h);
    } catch (D) {
      AA.errorRequest(A, e, D);
    }
    if (e.aborted) return !1;
    if (o === 'CONNECT')
      return (
        t.ref(),
        (l = t.request(E, { endStream: !1, signal: c })),
        l.id && !l.pending
          ? (e.onUpgrade(null, null, l), ++t[vr], (A[Xo][A[lr]++] = null))
          : l.once('ready', () => {
              e.onUpgrade(null, null, l), ++t[vr], (A[Xo][A[lr]++] = null);
            }),
        l.once('close', () => {
          (t[vr] -= 1), t[vr] === 0 && t.unref();
        }),
        !0
      );
    (E[VZ] = s), (E[qZ] = 'https');
    let I = o === 'PUT' || o === 'POST' || o === 'PATCH';
    r && typeof r.read == 'function' && r.read(0);
    let u = AA.bodyLength(r);
    if (
      (u == null && (u = e.contentLength),
      (u === 0 || !I) && (u = null),
      eK(o) && u > 0 && e.contentLength != null && e.contentLength !== u)
    ) {
      if (A[vZ]) return AA.errorRequest(A, e, new Wh()), !1;
      process.emitWarning(new Wh());
    }
    u != null &&
      (wt(r, 'no body must not have content length'), (E[PZ] = `${u}`)),
      t.ref();
    let d = o === 'GET' || o === 'HEAD' || r === null;
    return (
      a
        ? ((E[WZ] = '100-continue'),
          (l = t.request(E, { endStream: d, signal: c })),
          l.once('continue', f))
        : ((l = t.request(E, { endStream: d, signal: c })), f()),
      ++t[vr],
      l.once('response', (D) => {
        let { [_Z]: q, ...j } = D;
        if ((e.onResponseStarted(), e.aborted)) {
          let J = new eF();
          AA.errorRequest(A, e, J), AA.destroy(l, J);
          return;
        }
        e.onHeaders(Number(q), jZ(j), l.resume.bind(l), '') === !1 && l.pause(),
          l.on('data', (J) => {
            e.onData(J) === !1 && l.pause();
          });
      }),
      l.once('end', () => {
        (l.state?.state == null || l.state.state < 6) && e.onComplete([]),
          t[vr] === 0 && t.unref(),
          h(new _h('HTTP/2: stream half-closed (remote)')),
          (A[Xo][A[lr]++] = null),
          (A[jh] = A[lr]),
          A[Eo]();
      }),
      l.once('close', () => {
        (t[vr] -= 1), t[vr] === 0 && t.unref();
      }),
      l.once('error', function (D) {
        h(D);
      }),
      l.once('frameError', (D, q) => {
        h(new _h(`HTTP/2: "frameError" received - type ${D}, code ${q}`));
      }),
      !0
    );
    function f() {
      !r || u === 0
        ? rF(h, l, null, A, e, A[te], u, I)
        : AA.isBuffer(r)
          ? rF(h, l, r, A, e, A[te], u, I)
          : AA.isBlobLike(r)
            ? typeof r.stream == 'function'
              ? oF(h, l, r.stream(), A, e, A[te], u, I)
              : oK(h, l, r, A, e, A[te], u, I)
            : AA.isStream(r)
              ? rK(h, A[te], I, l, r, A, e, u)
              : AA.isIterable(r)
                ? oF(h, l, r, A, e, A[te], u, I)
                : wt(!1);
    }
  }
  function rF(A, e, t, r, o, s, n, i) {
    try {
      t != null &&
        AA.isBuffer(t) &&
        (wt(n === t.byteLength, 'buffer body must have content length'),
        e.cork(),
        e.write(t),
        e.uncork(),
        e.end(),
        o.onBodySent(t)),
        i || (s[JE] = !0),
        o.onRequestSent(),
        r[Eo]();
    } catch (a) {
      A(a);
    }
  }
  function rK(A, e, t, r, o, s, n, i) {
    wt(i !== 0 || s[HE] === 0, 'stream body cannot be pipelined');
    let a = GZ(o, r, (g) => {
      g
        ? (AA.destroy(a, g), A(g))
        : (AA.removeAllListeners(a),
          n.onRequestSent(),
          t || (e[JE] = !0),
          s[Eo]());
    });
    AA.addListener(a, 'data', c);
    function c(g) {
      n.onBodySent(g);
    }
  }
  async function oK(A, e, t, r, o, s, n, i) {
    wt(n === t.size, 'blob body must have content length');
    try {
      if (n != null && n !== t.size) throw new Wh();
      let a = Buffer.from(await t.arrayBuffer());
      e.cork(),
        e.write(a),
        e.uncork(),
        e.end(),
        o.onBodySent(a),
        o.onRequestSent(),
        i || (s[JE] = !0),
        r[Eo]();
    } catch (a) {
      A(a);
    }
  }
  async function oF(A, e, t, r, o, s, n, i) {
    wt(n !== 0 || r[HE] === 0, 'iterator body cannot be pipelined');
    let a = null;
    function c() {
      if (a) {
        let E = a;
        (a = null), E();
      }
    }
    let g = () =>
      new Promise((E, l) => {
        wt(a === null), s[vt] ? l(s[vt]) : (a = E);
      });
    e.on('close', c).on('drain', c);
    try {
      for await (let E of t) {
        if (s[vt]) throw s[vt];
        let l = e.write(E);
        o.onBodySent(E), l || (await g());
      }
      e.end(), o.onRequestSent(), i || (s[JE] = !0), r[Eo]();
    } catch (E) {
      A(E);
    } finally {
      e.off('close', c).off('drain', c);
    }
  }
  nF.exports = ZZ;
});
var qE = B((csA, gF) => {
  'use strict';
  var Qr = X(),
    { kBodyUsed: Ca } = FA(),
    Xh = require('node:assert'),
    { InvalidArgumentError: sK } = aA(),
    nK = require('node:events'),
    iK = [300, 301, 302, 303, 307, 308],
    aF = Symbol('body'),
    VE = class {
      constructor(e) {
        (this[aF] = e), (this[Ca] = !1);
      }
      async *[Symbol.asyncIterator]() {
        Xh(!this[Ca], 'disturbed'), (this[Ca] = !0), yield* this[aF];
      }
    },
    Kh = class {
      constructor(e, t, r, o) {
        if (t != null && (!Number.isInteger(t) || t < 0))
          throw new sK('maxRedirections must be a positive number');
        Qr.validateHandler(o, r.method, r.upgrade),
          (this.dispatch = e),
          (this.location = null),
          (this.abort = null),
          (this.opts = { ...r, maxRedirections: 0 }),
          (this.maxRedirections = t),
          (this.handler = o),
          (this.history = []),
          (this.redirectionLimitReached = !1),
          Qr.isStream(this.opts.body)
            ? (Qr.bodyLength(this.opts.body) === 0 &&
                this.opts.body.on('data', function () {
                  Xh(!1);
                }),
              typeof this.opts.body.readableDidRead != 'boolean' &&
                ((this.opts.body[Ca] = !1),
                nK.prototype.on.call(this.opts.body, 'data', function () {
                  this[Ca] = !0;
                })))
            : this.opts.body && typeof this.opts.body.pipeTo == 'function'
              ? (this.opts.body = new VE(this.opts.body))
              : this.opts.body &&
                typeof this.opts.body != 'string' &&
                !ArrayBuffer.isView(this.opts.body) &&
                Qr.isIterable(this.opts.body) &&
                (this.opts.body = new VE(this.opts.body));
      }
      onConnect(e) {
        (this.abort = e), this.handler.onConnect(e, { history: this.history });
      }
      onUpgrade(e, t, r) {
        this.handler.onUpgrade(e, t, r);
      }
      onError(e) {
        this.handler.onError(e);
      }
      onHeaders(e, t, r, o) {
        if (
          ((this.location =
            this.history.length >= this.maxRedirections ||
            Qr.isDisturbed(this.opts.body)
              ? null
              : aK(e, t)),
          this.opts.throwOnMaxRedirect &&
            this.history.length >= this.maxRedirections)
        ) {
          this.request && this.request.abort(new Error('max redirects')),
            (this.redirectionLimitReached = !0),
            this.abort(new Error('max redirects'));
          return;
        }
        if (
          (this.opts.origin &&
            this.history.push(new URL(this.opts.path, this.opts.origin)),
          !this.location)
        )
          return this.handler.onHeaders(e, t, r, o);
        let {
            origin: s,
            pathname: n,
            search: i,
          } = Qr.parseURL(
            new URL(
              this.location,
              this.opts.origin && new URL(this.opts.path, this.opts.origin),
            ),
          ),
          a = i ? `${n}${i}` : n;
        (this.opts.headers = cK(
          this.opts.headers,
          e === 303,
          this.opts.origin !== s,
        )),
          (this.opts.path = a),
          (this.opts.origin = s),
          (this.opts.maxRedirections = 0),
          (this.opts.query = null),
          e === 303 &&
            this.opts.method !== 'HEAD' &&
            ((this.opts.method = 'GET'), (this.opts.body = null));
      }
      onData(e) {
        if (!this.location) return this.handler.onData(e);
      }
      onComplete(e) {
        this.location
          ? ((this.location = null),
            (this.abort = null),
            this.dispatch(this.opts, this))
          : this.handler.onComplete(e);
      }
      onBodySent(e) {
        this.handler.onBodySent && this.handler.onBodySent(e);
      }
    };
  function aK(A, e) {
    if (iK.indexOf(A) === -1) return null;
    for (let t = 0; t < e.length; t += 2)
      if (e[t].length === 8 && Qr.headerNameToString(e[t]) === 'location')
        return e[t + 1];
  }
  function cF(A, e, t) {
    if (A.length === 4) return Qr.headerNameToString(A) === 'host';
    if (e && Qr.headerNameToString(A).startsWith('content-')) return !0;
    if (t && (A.length === 13 || A.length === 6 || A.length === 19)) {
      let r = Qr.headerNameToString(A);
      return (
        r === 'authorization' || r === 'cookie' || r === 'proxy-authorization'
      );
    }
    return !1;
  }
  function cK(A, e, t) {
    let r = [];
    if (Array.isArray(A))
      for (let o = 0; o < A.length; o += 2)
        cF(A[o], e, t) || r.push(A[o], A[o + 1]);
    else if (A && typeof A == 'object')
      for (let o of Object.keys(A)) cF(o, e, t) || r.push(o, A[o]);
    else Xh(A == null, 'headers must be an object or an array');
    return r;
  }
  gF.exports = Kh;
});
var PE = B((gsA, EF) => {
  'use strict';
  var gK = qE();
  function EK({ maxRedirections: A }) {
    return (e) =>
      function (r, o) {
        let { maxRedirections: s = A } = r;
        if (!s) return e(r, o);
        let n = new gK(e, s, r, o);
        return (r = { ...r, maxRedirections: 0 }), e(r, n);
      };
  }
  EF.exports = EK;
});
var pa = B((EsA, pF) => {
  'use strict';
  var Or = require('node:assert'),
    hF = require('node:net'),
    lK = require('node:http'),
    zo = X(),
    { channels: Nn } = Bn(),
    QK = Fb(),
    CK = dn(),
    {
      InvalidArgumentError: HA,
      InformationalError: BK,
      ClientDestroyedError: uK,
    } = aA(),
    hK = Aa(),
    {
      kUrl: Cr,
      kServerName: lo,
      kClient: IK,
      kBusy: zh,
      kConnect: dK,
      kResuming: $o,
      kRunning: da,
      kPending: fa,
      kSize: Ia,
      kQueue: Ot,
      kConnected: fK,
      kConnecting: Un,
      kNeedDrain: Co,
      kKeepAliveDefaultTimeout: lF,
      kHostHeader: pK,
      kPendingIdx: Yt,
      kRunningIdx: Yr,
      kError: wK,
      kPipelining: WE,
      kKeepAliveTimeoutValue: yK,
      kMaxHeadersSize: DK,
      kKeepAliveMaxTimeout: mK,
      kKeepAliveTimeoutThreshold: kK,
      kHeadersTimeout: RK,
      kBodyTimeout: bK,
      kStrictContentLength: FK,
      kConnector: Ba,
      kMaxRedirections: SK,
      kMaxRequests: $h,
      kCounter: TK,
      kClose: NK,
      kDestroy: UK,
      kDispatch: MK,
      kInterceptors: QF,
      kLocalAddress: ua,
      kMaxResponseSize: LK,
      kOnError: GK,
      kHTTPContext: VA,
      kMaxConcurrentStreams: xK,
      kResume: ha,
    } = FA(),
    vK = AF(),
    OK = iF(),
    CF = !1,
    Qo = Symbol('kClosedResolve'),
    BF = () => {};
  function IF(A) {
    return A[WE] ?? A[VA]?.defaultPipelining ?? 1;
  }
  var AI = class extends CK {
      constructor(
        e,
        {
          interceptors: t,
          maxHeaderSize: r,
          headersTimeout: o,
          socketTimeout: s,
          requestTimeout: n,
          connectTimeout: i,
          bodyTimeout: a,
          idleTimeout: c,
          keepAlive: g,
          keepAliveTimeout: E,
          maxKeepAliveTimeout: l,
          keepAliveMaxTimeout: C,
          keepAliveTimeoutThreshold: Q,
          socketPath: h,
          pipelining: I,
          tls: u,
          strictContentLength: d,
          maxCachedSessions: f,
          maxRedirections: D,
          connect: q,
          maxRequestsPerClient: j,
          localAddress: J,
          maxResponseSize: yA,
          autoSelectFamily: qA,
          autoSelectFamilyAttemptTimeout: vA,
          maxConcurrentStreams: IA,
          allowH2: K,
        } = {},
      ) {
        if ((super(), g !== void 0))
          throw new HA('unsupported keepAlive, use pipelining=0 instead');
        if (s !== void 0)
          throw new HA(
            'unsupported socketTimeout, use headersTimeout & bodyTimeout instead',
          );
        if (n !== void 0)
          throw new HA(
            'unsupported requestTimeout, use headersTimeout & bodyTimeout instead',
          );
        if (c !== void 0)
          throw new HA('unsupported idleTimeout, use keepAliveTimeout instead');
        if (l !== void 0)
          throw new HA(
            'unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead',
          );
        if (r != null && !Number.isFinite(r))
          throw new HA('invalid maxHeaderSize');
        if (h != null && typeof h != 'string')
          throw new HA('invalid socketPath');
        if (i != null && (!Number.isFinite(i) || i < 0))
          throw new HA('invalid connectTimeout');
        if (E != null && (!Number.isFinite(E) || E <= 0))
          throw new HA('invalid keepAliveTimeout');
        if (C != null && (!Number.isFinite(C) || C <= 0))
          throw new HA('invalid keepAliveMaxTimeout');
        if (Q != null && !Number.isFinite(Q))
          throw new HA('invalid keepAliveTimeoutThreshold');
        if (o != null && (!Number.isInteger(o) || o < 0))
          throw new HA('headersTimeout must be a positive integer or zero');
        if (a != null && (!Number.isInteger(a) || a < 0))
          throw new HA('bodyTimeout must be a positive integer or zero');
        if (q != null && typeof q != 'function' && typeof q != 'object')
          throw new HA('connect must be a function or an object');
        if (D != null && (!Number.isInteger(D) || D < 0))
          throw new HA('maxRedirections must be a positive number');
        if (j != null && (!Number.isInteger(j) || j < 0))
          throw new HA('maxRequestsPerClient must be a positive number');
        if (J != null && (typeof J != 'string' || hF.isIP(J) === 0))
          throw new HA('localAddress must be valid string IP address');
        if (yA != null && (!Number.isInteger(yA) || yA < -1))
          throw new HA('maxResponseSize must be a positive number');
        if (vA != null && (!Number.isInteger(vA) || vA < -1))
          throw new HA(
            'autoSelectFamilyAttemptTimeout must be a positive number',
          );
        if (K != null && typeof K != 'boolean')
          throw new HA('allowH2 must be a valid boolean value');
        if (IA != null && (typeof IA != 'number' || IA < 1))
          throw new HA(
            'maxConcurrentStreams must be a positive integer, greater than 0',
          );
        typeof q != 'function' &&
          (q = hK({
            ...u,
            maxCachedSessions: f,
            allowH2: K,
            socketPath: h,
            timeout: i,
            ...(qA
              ? { autoSelectFamily: qA, autoSelectFamilyAttemptTimeout: vA }
              : void 0),
            ...q,
          })),
          t?.Client && Array.isArray(t.Client)
            ? ((this[QF] = t.Client),
              CF ||
                ((CF = !0),
                process.emitWarning(
                  'Client.Options#interceptor is deprecated. Use Dispatcher#compose instead.',
                  { code: 'UNDICI-CLIENT-INTERCEPTOR-DEPRECATED' },
                )))
            : (this[QF] = [YK({ maxRedirections: D })]),
          (this[Cr] = zo.parseOrigin(e)),
          (this[Ba] = q),
          (this[WE] = I ?? 1),
          (this[DK] = r || lK.maxHeaderSize),
          (this[lF] = E ?? 4e3),
          (this[mK] = C ?? 6e5),
          (this[kK] = Q ?? 2e3),
          (this[yK] = this[lF]),
          (this[lo] = null),
          (this[ua] = J ?? null),
          (this[$o] = 0),
          (this[Co] = 0),
          (this[pK] =
            `host: ${this[Cr].hostname}${this[Cr].port ? `:${this[Cr].port}` : ''}\r
`),
          (this[bK] = a ?? 3e5),
          (this[RK] = o ?? 3e5),
          (this[FK] = d ?? !0),
          (this[SK] = D),
          (this[$h] = j),
          (this[Qo] = null),
          (this[LK] = yA > -1 ? yA : -1),
          (this[xK] = IA ?? 100),
          (this[VA] = null),
          (this[Ot] = []),
          (this[Yr] = 0),
          (this[Yt] = 0),
          (this[ha] = (gA) => eI(this, gA)),
          (this[GK] = (gA) => dF(this, gA));
      }
      get pipelining() {
        return this[WE];
      }
      set pipelining(e) {
        (this[WE] = e), this[ha](!0);
      }
      get [fa]() {
        return this[Ot].length - this[Yt];
      }
      get [da]() {
        return this[Yt] - this[Yr];
      }
      get [Ia]() {
        return this[Ot].length - this[Yr];
      }
      get [fK]() {
        return !!this[VA] && !this[Un] && !this[VA].destroyed;
      }
      get [zh]() {
        return !!(
          this[VA]?.busy(null) ||
          this[Ia] >= (IF(this) || 1) ||
          this[fa] > 0
        );
      }
      [dK](e) {
        fF(this), this.once('connect', e);
      }
      [MK](e, t) {
        let r = e.origin || this[Cr].origin,
          o = new QK(r, e, t);
        return (
          this[Ot].push(o),
          this[$o] ||
            (zo.bodyLength(o.body) == null && zo.isIterable(o.body)
              ? ((this[$o] = 1), queueMicrotask(() => eI(this)))
              : this[ha](!0)),
          this[$o] && this[Co] !== 2 && this[zh] && (this[Co] = 2),
          this[Co] < 2
        );
      }
      async [NK]() {
        return new Promise((e) => {
          this[Ia] ? (this[Qo] = e) : e(null);
        });
      }
      async [UK](e) {
        return new Promise((t) => {
          let r = this[Ot].splice(this[Yt]);
          for (let s = 0; s < r.length; s++) {
            let n = r[s];
            zo.errorRequest(this, n, e);
          }
          let o = () => {
            this[Qo] && (this[Qo](), (this[Qo] = null)), t(null);
          };
          this[VA]
            ? (this[VA].destroy(e, o), (this[VA] = null))
            : queueMicrotask(o),
            this[ha]();
        });
      }
    },
    YK = PE();
  function dF(A, e) {
    if (
      A[da] === 0 &&
      e.code !== 'UND_ERR_INFO' &&
      e.code !== 'UND_ERR_SOCKET'
    ) {
      Or(A[Yt] === A[Yr]);
      let t = A[Ot].splice(A[Yr]);
      for (let r = 0; r < t.length; r++) {
        let o = t[r];
        zo.errorRequest(A, o, e);
      }
      Or(A[Ia] === 0);
    }
  }
  async function fF(A) {
    Or(!A[Un]), Or(!A[VA]);
    let { host: e, hostname: t, protocol: r, port: o } = A[Cr];
    if (t[0] === '[') {
      let s = t.indexOf(']');
      Or(s !== -1);
      let n = t.substring(1, s);
      Or(hF.isIP(n)), (t = n);
    }
    (A[Un] = !0),
      Nn.beforeConnect.hasSubscribers &&
        Nn.beforeConnect.publish({
          connectParams: {
            host: e,
            hostname: t,
            protocol: r,
            port: o,
            version: A[VA]?.version,
            servername: A[lo],
            localAddress: A[ua],
          },
          connector: A[Ba],
        });
    try {
      let s = await new Promise((n, i) => {
        A[Ba](
          {
            host: e,
            hostname: t,
            protocol: r,
            port: o,
            servername: A[lo],
            localAddress: A[ua],
          },
          (a, c) => {
            a ? i(a) : n(c);
          },
        );
      });
      if (A.destroyed) {
        zo.destroy(s.on('error', BF), new uK());
        return;
      }
      Or(s);
      try {
        A[VA] = s.alpnProtocol === 'h2' ? await OK(A, s) : await vK(A, s);
      } catch (n) {
        throw (s.destroy().on('error', BF), n);
      }
      (A[Un] = !1),
        (s[TK] = 0),
        (s[$h] = A[$h]),
        (s[IK] = A),
        (s[wK] = null),
        Nn.connected.hasSubscribers &&
          Nn.connected.publish({
            connectParams: {
              host: e,
              hostname: t,
              protocol: r,
              port: o,
              version: A[VA]?.version,
              servername: A[lo],
              localAddress: A[ua],
            },
            connector: A[Ba],
            socket: s,
          }),
        A.emit('connect', A[Cr], [A]);
    } catch (s) {
      if (A.destroyed) return;
      if (
        ((A[Un] = !1),
        Nn.connectError.hasSubscribers &&
          Nn.connectError.publish({
            connectParams: {
              host: e,
              hostname: t,
              protocol: r,
              port: o,
              version: A[VA]?.version,
              servername: A[lo],
              localAddress: A[ua],
            },
            connector: A[Ba],
            error: s,
          }),
        s.code === 'ERR_TLS_CERT_ALTNAME_INVALID')
      )
        for (
          Or(A[da] === 0);
          A[fa] > 0 && A[Ot][A[Yt]].servername === A[lo];
        ) {
          let n = A[Ot][A[Yt]++];
          zo.errorRequest(A, n, s);
        }
      else dF(A, s);
      A.emit('connectionError', A[Cr], [A], s);
    }
    A[ha]();
  }
  function uF(A) {
    (A[Co] = 0), A.emit('drain', A[Cr], [A]);
  }
  function eI(A, e) {
    A[$o] !== 2 &&
      ((A[$o] = 2),
      JK(A, e),
      (A[$o] = 0),
      A[Yr] > 256 && (A[Ot].splice(0, A[Yr]), (A[Yt] -= A[Yr]), (A[Yr] = 0)));
  }
  function JK(A, e) {
    for (;;) {
      if (A.destroyed) {
        Or(A[fa] === 0);
        return;
      }
      if (A[Qo] && !A[Ia]) {
        A[Qo](), (A[Qo] = null);
        return;
      }
      if ((A[VA] && A[VA].resume(), A[zh])) A[Co] = 2;
      else if (A[Co] === 2) {
        e ? ((A[Co] = 1), queueMicrotask(() => uF(A))) : uF(A);
        continue;
      }
      if (A[fa] === 0 || A[da] >= (IF(A) || 1)) return;
      let t = A[Ot][A[Yt]];
      if (A[Cr].protocol === 'https:' && A[lo] !== t.servername) {
        if (A[da] > 0) return;
        (A[lo] = t.servername),
          A[VA]?.destroy(new BK('servername changed'), () => {
            (A[VA] = null), eI(A);
          });
      }
      if (A[Un]) return;
      if (!A[VA]) {
        fF(A);
        return;
      }
      if (A[VA].destroyed || A[VA].busy(t)) return;
      !t.aborted && A[VA].write(t) ? A[Yt]++ : A[Ot].splice(A[Yt], 1);
    }
  }
  pF.exports = AI;
});
var tI = B((QsA, wF) => {
  'use strict';
  var _E = class {
    constructor() {
      (this.bottom = 0),
        (this.top = 0),
        (this.list = new Array(2048)),
        (this.next = null);
    }
    isEmpty() {
      return this.top === this.bottom;
    }
    isFull() {
      return ((this.top + 1) & 2047) === this.bottom;
    }
    push(e) {
      (this.list[this.top] = e), (this.top = (this.top + 1) & 2047);
    }
    shift() {
      let e = this.list[this.bottom];
      return e === void 0
        ? null
        : ((this.list[this.bottom] = void 0),
          (this.bottom = (this.bottom + 1) & 2047),
          e);
    }
  };
  wF.exports = class {
    constructor() {
      this.head = this.tail = new _E();
    }
    isEmpty() {
      return this.head.isEmpty();
    }
    push(e) {
      this.head.isFull() && (this.head = this.head.next = new _E()),
        this.head.push(e);
    }
    shift() {
      let e = this.tail,
        t = e.shift();
      return e.isEmpty() && e.next !== null && (this.tail = e.next), t;
    }
  };
});
var DF = B((CsA, yF) => {
  var {
      kFree: HK,
      kConnected: VK,
      kPending: qK,
      kQueued: PK,
      kRunning: WK,
      kSize: _K,
    } = FA(),
    As = Symbol('pool'),
    rI = class {
      constructor(e) {
        this[As] = e;
      }
      get connected() {
        return this[As][VK];
      }
      get free() {
        return this[As][HK];
      }
      get pending() {
        return this[As][qK];
      }
      get queued() {
        return this[As][PK];
      }
      get running() {
        return this[As][WK];
      }
      get size() {
        return this[As][_K];
      }
    };
  yF.exports = rI;
});
var cI = B((BsA, MF) => {
  'use strict';
  var jK = dn(),
    ZK = tI(),
    {
      kConnected: oI,
      kSize: mF,
      kRunning: kF,
      kPending: RF,
      kQueued: wa,
      kBusy: KK,
      kFree: XK,
      kUrl: zK,
      kClose: $K,
      kDestroy: AX,
      kDispatch: eX,
    } = FA(),
    tX = DF(),
    Ye = Symbol('clients'),
    ke = Symbol('needDrain'),
    ya = Symbol('queue'),
    sI = Symbol('closed resolve'),
    nI = Symbol('onDrain'),
    bF = Symbol('onConnect'),
    FF = Symbol('onDisconnect'),
    SF = Symbol('onConnectionError'),
    iI = Symbol('get dispatcher'),
    NF = Symbol('add client'),
    UF = Symbol('remove client'),
    TF = Symbol('stats'),
    aI = class extends jK {
      constructor() {
        super(), (this[ya] = new ZK()), (this[Ye] = []), (this[wa] = 0);
        let e = this;
        (this[nI] = function (r, o) {
          let s = e[ya],
            n = !1;
          for (; !n; ) {
            let i = s.shift();
            if (!i) break;
            e[wa]--, (n = !this.dispatch(i.opts, i.handler));
          }
          (this[ke] = n),
            !this[ke] && e[ke] && ((e[ke] = !1), e.emit('drain', r, [e, ...o])),
            e[sI] &&
              s.isEmpty() &&
              Promise.all(e[Ye].map((i) => i.close())).then(e[sI]);
        }),
          (this[bF] = (t, r) => {
            e.emit('connect', t, [e, ...r]);
          }),
          (this[FF] = (t, r, o) => {
            e.emit('disconnect', t, [e, ...r], o);
          }),
          (this[SF] = (t, r, o) => {
            e.emit('connectionError', t, [e, ...r], o);
          }),
          (this[TF] = new tX(this));
      }
      get [KK]() {
        return this[ke];
      }
      get [oI]() {
        return this[Ye].filter((e) => e[oI]).length;
      }
      get [XK]() {
        return this[Ye].filter((e) => e[oI] && !e[ke]).length;
      }
      get [RF]() {
        let e = this[wa];
        for (let { [RF]: t } of this[Ye]) e += t;
        return e;
      }
      get [kF]() {
        let e = 0;
        for (let { [kF]: t } of this[Ye]) e += t;
        return e;
      }
      get [mF]() {
        let e = this[wa];
        for (let { [mF]: t } of this[Ye]) e += t;
        return e;
      }
      get stats() {
        return this[TF];
      }
      async [$K]() {
        this[ya].isEmpty()
          ? await Promise.all(this[Ye].map((e) => e.close()))
          : await new Promise((e) => {
              this[sI] = e;
            });
      }
      async [AX](e) {
        for (;;) {
          let t = this[ya].shift();
          if (!t) break;
          t.handler.onError(e);
        }
        await Promise.all(this[Ye].map((t) => t.destroy(e)));
      }
      [eX](e, t) {
        let r = this[iI]();
        return (
          r
            ? r.dispatch(e, t) || ((r[ke] = !0), (this[ke] = !this[iI]()))
            : ((this[ke] = !0),
              this[ya].push({ opts: e, handler: t }),
              this[wa]++),
          !this[ke]
        );
      }
      [NF](e) {
        return (
          e
            .on('drain', this[nI])
            .on('connect', this[bF])
            .on('disconnect', this[FF])
            .on('connectionError', this[SF]),
          this[Ye].push(e),
          this[ke] &&
            queueMicrotask(() => {
              this[ke] && this[nI](e[zK], [this, e]);
            }),
          this
        );
      }
      [UF](e) {
        e.close(() => {
          let t = this[Ye].indexOf(e);
          t !== -1 && this[Ye].splice(t, 1);
        }),
          (this[ke] = this[Ye].some(
            (t) => !t[ke] && t.closed !== !0 && t.destroyed !== !0,
          ));
      }
    };
  MF.exports = {
    PoolBase: aI,
    kClients: Ye,
    kNeedDrain: ke,
    kAddClient: NF,
    kRemoveClient: UF,
    kGetDispatcher: iI,
  };
});
var Mn = B((usA, OF) => {
  'use strict';
  var {
      PoolBase: rX,
      kClients: LF,
      kNeedDrain: oX,
      kAddClient: sX,
      kGetDispatcher: nX,
    } = cI(),
    iX = pa(),
    { InvalidArgumentError: gI } = aA(),
    GF = X(),
    { kUrl: xF, kInterceptors: aX } = FA(),
    cX = Aa(),
    EI = Symbol('options'),
    lI = Symbol('connections'),
    vF = Symbol('factory');
  function gX(A, e) {
    return new iX(A, e);
  }
  var QI = class extends rX {
    constructor(
      e,
      {
        connections: t,
        factory: r = gX,
        connect: o,
        connectTimeout: s,
        tls: n,
        maxCachedSessions: i,
        socketPath: a,
        autoSelectFamily: c,
        autoSelectFamilyAttemptTimeout: g,
        allowH2: E,
        ...l
      } = {},
    ) {
      if ((super(), t != null && (!Number.isFinite(t) || t < 0)))
        throw new gI('invalid connections');
      if (typeof r != 'function') throw new gI('factory must be a function.');
      if (o != null && typeof o != 'function' && typeof o != 'object')
        throw new gI('connect must be a function or an object');
      typeof o != 'function' &&
        (o = cX({
          ...n,
          maxCachedSessions: i,
          allowH2: E,
          socketPath: a,
          timeout: s,
          ...(c
            ? { autoSelectFamily: c, autoSelectFamilyAttemptTimeout: g }
            : void 0),
          ...o,
        })),
        (this[aX] =
          l.interceptors?.Pool && Array.isArray(l.interceptors.Pool)
            ? l.interceptors.Pool
            : []),
        (this[lI] = t || null),
        (this[xF] = GF.parseOrigin(e)),
        (this[EI] = { ...GF.deepClone(l), connect: o, allowH2: E }),
        (this[EI].interceptors = l.interceptors
          ? { ...l.interceptors }
          : void 0),
        (this[vF] = r);
    }
    [nX]() {
      for (let e of this[LF]) if (!e[oX]) return e;
      if (!this[lI] || this[LF].length < this[lI]) {
        let e = this[vF](this[xF], this[EI]);
        return this[sX](e), e;
      }
    }
  };
  OF.exports = QI;
});
var qF = B((hsA, VF) => {
  'use strict';
  var { BalancedPoolMissingUpstreamError: EX, InvalidArgumentError: lX } = aA(),
    {
      PoolBase: QX,
      kClients: Ce,
      kNeedDrain: Da,
      kAddClient: CX,
      kRemoveClient: BX,
      kGetDispatcher: uX,
    } = cI(),
    hX = Mn(),
    { kUrl: CI, kInterceptors: IX } = FA(),
    { parseOrigin: YF } = X(),
    JF = Symbol('factory'),
    jE = Symbol('options'),
    HF = Symbol('kGreatestCommonDivisor'),
    es = Symbol('kCurrentWeight'),
    ts = Symbol('kIndex'),
    yt = Symbol('kWeight'),
    ZE = Symbol('kMaxWeightPerServer'),
    KE = Symbol('kErrorPenalty');
  function dX(A, e) {
    if (A === 0) return e;
    for (; e !== 0; ) {
      let t = e;
      (e = A % e), (A = t);
    }
    return A;
  }
  function fX(A, e) {
    return new hX(A, e);
  }
  var BI = class extends QX {
    constructor(e = [], { factory: t = fX, ...r } = {}) {
      if (
        (super(),
        (this[jE] = r),
        (this[ts] = -1),
        (this[es] = 0),
        (this[ZE] = this[jE].maxWeightPerServer || 100),
        (this[KE] = this[jE].errorPenalty || 15),
        Array.isArray(e) || (e = [e]),
        typeof t != 'function')
      )
        throw new lX('factory must be a function.');
      (this[IX] =
        r.interceptors?.BalancedPool &&
        Array.isArray(r.interceptors.BalancedPool)
          ? r.interceptors.BalancedPool
          : []),
        (this[JF] = t);
      for (let o of e) this.addUpstream(o);
      this._updateBalancedPoolStats();
    }
    addUpstream(e) {
      let t = YF(e).origin;
      if (
        this[Ce].find(
          (o) => o[CI].origin === t && o.closed !== !0 && o.destroyed !== !0,
        )
      )
        return this;
      let r = this[JF](t, Object.assign({}, this[jE]));
      this[CX](r),
        r.on('connect', () => {
          r[yt] = Math.min(this[ZE], r[yt] + this[KE]);
        }),
        r.on('connectionError', () => {
          (r[yt] = Math.max(1, r[yt] - this[KE])),
            this._updateBalancedPoolStats();
        }),
        r.on('disconnect', (...o) => {
          let s = o[2];
          s &&
            s.code === 'UND_ERR_SOCKET' &&
            ((r[yt] = Math.max(1, r[yt] - this[KE])),
            this._updateBalancedPoolStats());
        });
      for (let o of this[Ce]) o[yt] = this[ZE];
      return this._updateBalancedPoolStats(), this;
    }
    _updateBalancedPoolStats() {
      let e = 0;
      for (let t = 0; t < this[Ce].length; t++) e = dX(this[Ce][t][yt], e);
      this[HF] = e;
    }
    removeUpstream(e) {
      let t = YF(e).origin,
        r = this[Ce].find(
          (o) => o[CI].origin === t && o.closed !== !0 && o.destroyed !== !0,
        );
      return r && this[BX](r), this;
    }
    get upstreams() {
      return this[Ce]
        .filter((e) => e.closed !== !0 && e.destroyed !== !0)
        .map((e) => e[CI].origin);
    }
    [uX]() {
      if (this[Ce].length === 0) throw new EX();
      if (
        !this[Ce].find(
          (s) => !s[Da] && s.closed !== !0 && s.destroyed !== !0,
        ) ||
        this[Ce].map((s) => s[Da]).reduce((s, n) => s && n, !0)
      )
        return;
      let r = 0,
        o = this[Ce].findIndex((s) => !s[Da]);
      for (; r++ < this[Ce].length; ) {
        this[ts] = (this[ts] + 1) % this[Ce].length;
        let s = this[Ce][this[ts]];
        if (
          (s[yt] > this[Ce][o][yt] && !s[Da] && (o = this[ts]),
          this[ts] === 0 &&
            ((this[es] = this[es] - this[HF]),
            this[es] <= 0 && (this[es] = this[ZE])),
          s[yt] >= this[es] && !s[Da])
        )
          return s;
      }
      return (this[es] = this[Ce][o][yt]), (this[ts] = o), this[Ce][o];
    }
  };
  VF.exports = BI;
});
var Ln = B((IsA, XF) => {
  'use strict';
  var { InvalidArgumentError: XE } = aA(),
    {
      kClients: Bo,
      kRunning: PF,
      kClose: pX,
      kDestroy: wX,
      kDispatch: yX,
      kInterceptors: DX,
    } = FA(),
    mX = dn(),
    kX = Mn(),
    RX = pa(),
    bX = X(),
    FX = PE(),
    WF = Symbol('onConnect'),
    _F = Symbol('onDisconnect'),
    jF = Symbol('onConnectionError'),
    SX = Symbol('maxRedirections'),
    ZF = Symbol('onDrain'),
    KF = Symbol('factory'),
    uI = Symbol('options');
  function TX(A, e) {
    return e && e.connections === 1 ? new RX(A, e) : new kX(A, e);
  }
  var hI = class extends mX {
    constructor({
      factory: e = TX,
      maxRedirections: t = 0,
      connect: r,
      ...o
    } = {}) {
      if ((super(), typeof e != 'function'))
        throw new XE('factory must be a function.');
      if (r != null && typeof r != 'function' && typeof r != 'object')
        throw new XE('connect must be a function or an object');
      if (!Number.isInteger(t) || t < 0)
        throw new XE('maxRedirections must be a positive number');
      r && typeof r != 'function' && (r = { ...r }),
        (this[DX] =
          o.interceptors?.Agent && Array.isArray(o.interceptors.Agent)
            ? o.interceptors.Agent
            : [FX({ maxRedirections: t })]),
        (this[uI] = { ...bX.deepClone(o), connect: r }),
        (this[uI].interceptors = o.interceptors
          ? { ...o.interceptors }
          : void 0),
        (this[SX] = t),
        (this[KF] = e),
        (this[Bo] = new Map()),
        (this[ZF] = (s, n) => {
          this.emit('drain', s, [this, ...n]);
        }),
        (this[WF] = (s, n) => {
          this.emit('connect', s, [this, ...n]);
        }),
        (this[_F] = (s, n, i) => {
          this.emit('disconnect', s, [this, ...n], i);
        }),
        (this[jF] = (s, n, i) => {
          this.emit('connectionError', s, [this, ...n], i);
        });
    }
    get [PF]() {
      let e = 0;
      for (let t of this[Bo].values()) e += t[PF];
      return e;
    }
    [yX](e, t) {
      let r;
      if (e.origin && (typeof e.origin == 'string' || e.origin instanceof URL))
        r = String(e.origin);
      else throw new XE('opts.origin must be a non-empty string or URL.');
      let o = this[Bo].get(r);
      return (
        o ||
          ((o = this[KF](e.origin, this[uI])
            .on('drain', this[ZF])
            .on('connect', this[WF])
            .on('disconnect', this[_F])
            .on('connectionError', this[jF])),
          this[Bo].set(r, o)),
        o.dispatch(e, t)
      );
    }
    async [pX]() {
      let e = [];
      for (let t of this[Bo].values()) e.push(t.close());
      this[Bo].clear(), await Promise.all(e);
    }
    async [wX](e) {
      let t = [];
      for (let r of this[Bo].values()) t.push(r.destroy(e));
      this[Bo].clear(), await Promise.all(t);
    }
  };
  XF.exports = hI;
});
var fI = B((dsA, eS) => {
  'use strict';
  var { kProxy: NX, kClose: UX, kDestroy: MX, kInterceptors: LX } = FA(),
    { URL: ma } = require('node:url'),
    GX = Ln(),
    xX = Mn(),
    vX = dn(),
    {
      InvalidArgumentError: Al,
      RequestAbortedError: OX,
      SecureProxyConnectionError: YX,
    } = aA(),
    zF = Aa(),
    zE = Symbol('proxy agent'),
    $E = Symbol('proxy client'),
    ka = Symbol('proxy headers'),
    II = Symbol('request tls settings'),
    $F = Symbol('proxy tls settings'),
    AS = Symbol('connect endpoint function');
  function JX(A) {
    return A === 'https:' ? 443 : 80;
  }
  function HX(A, e) {
    return new xX(A, e);
  }
  var VX = () => {},
    dI = class extends vX {
      constructor(e) {
        if (
          (super(),
          !e || (typeof e == 'object' && !(e instanceof ma) && !e.uri))
        )
          throw new Al('Proxy uri is mandatory');
        let { clientFactory: t = HX } = e;
        if (typeof t != 'function')
          throw new Al('Proxy opts.clientFactory must be a function.');
        let r = this.#A(e),
          {
            href: o,
            origin: s,
            port: n,
            protocol: i,
            username: a,
            password: c,
            hostname: g,
          } = r;
        if (
          ((this[NX] = { uri: o, protocol: i }),
          (this[LX] =
            e.interceptors?.ProxyAgent &&
            Array.isArray(e.interceptors.ProxyAgent)
              ? e.interceptors.ProxyAgent
              : []),
          (this[II] = e.requestTls),
          (this[$F] = e.proxyTls),
          (this[ka] = e.headers || {}),
          e.auth && e.token)
        )
          throw new Al(
            'opts.auth cannot be used in combination with opts.token',
          );
        e.auth
          ? (this[ka]['proxy-authorization'] = `Basic ${e.auth}`)
          : e.token
            ? (this[ka]['proxy-authorization'] = e.token)
            : a &&
              c &&
              (this[ka]['proxy-authorization'] =
                `Basic ${Buffer.from(`${decodeURIComponent(a)}:${decodeURIComponent(c)}`).toString('base64')}`);
        let E = zF({ ...e.proxyTls });
        (this[AS] = zF({ ...e.requestTls })),
          (this[$E] = t(r, { connect: E })),
          (this[zE] = new GX({
            ...e,
            connect: async (l, C) => {
              let Q = l.host;
              l.port || (Q += `:${JX(l.protocol)}`);
              try {
                let { socket: h, statusCode: I } = await this[$E].connect({
                  origin: s,
                  port: n,
                  path: Q,
                  signal: l.signal,
                  headers: { ...this[ka], host: l.host },
                  servername: this[$F]?.servername || g,
                });
                if (
                  (I !== 200 &&
                    (h.on('error', VX).destroy(),
                    C(
                      new OX(
                        `Proxy response (${I}) !== 200 when HTTP Tunneling`,
                      ),
                    )),
                  l.protocol !== 'https:')
                ) {
                  C(null, h);
                  return;
                }
                let u;
                this[II] ? (u = this[II].servername) : (u = l.servername),
                  this[AS]({ ...l, servername: u, httpSocket: h }, C);
              } catch (h) {
                h.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ? C(new YX(h)) : C(h);
              }
            },
          }));
      }
      dispatch(e, t) {
        let r = qX(e.headers);
        if ((PX(r), r && !('host' in r) && !('Host' in r))) {
          let { host: o } = new ma(e.origin);
          r.host = o;
        }
        return this[zE].dispatch({ ...e, headers: r }, t);
      }
      #A(e) {
        return typeof e == 'string'
          ? new ma(e)
          : e instanceof ma
            ? e
            : new ma(e.uri);
      }
      async [UX]() {
        await this[zE].close(), await this[$E].close();
      }
      async [MX]() {
        await this[zE].destroy(), await this[$E].destroy();
      }
    };
  function qX(A) {
    if (Array.isArray(A)) {
      let e = {};
      for (let t = 0; t < A.length; t += 2) e[A[t]] = A[t + 1];
      return e;
    }
    return A;
  }
  function PX(A) {
    if (
      A &&
      Object.keys(A).find((t) => t.toLowerCase() === 'proxy-authorization')
    )
      throw new Al(
        'Proxy-Authorization should be sent in ProxyAgent constructor',
      );
  }
  eS.exports = dI;
});
var iS = B((fsA, nS) => {
  'use strict';
  var WX = dn(),
    {
      kClose: _X,
      kDestroy: jX,
      kClosed: tS,
      kDestroyed: rS,
      kDispatch: ZX,
      kNoProxyAgent: Ra,
      kHttpProxyAgent: uo,
      kHttpsProxyAgent: rs,
    } = FA(),
    oS = fI(),
    KX = Ln(),
    XX = { 'http:': 80, 'https:': 443 },
    sS = !1,
    pI = class extends WX {
      #A = null;
      #e = null;
      #r = null;
      constructor(e = {}) {
        super(),
          (this.#r = e),
          sS ||
            ((sS = !0),
            process.emitWarning(
              'EnvHttpProxyAgent is experimental, expect them to change at any time.',
              { code: 'UNDICI-EHPA' },
            ));
        let { httpProxy: t, httpsProxy: r, noProxy: o, ...s } = e;
        this[Ra] = new KX(s);
        let n = t ?? process.env.http_proxy ?? process.env.HTTP_PROXY;
        n ? (this[uo] = new oS({ ...s, uri: n })) : (this[uo] = this[Ra]);
        let i = r ?? process.env.https_proxy ?? process.env.HTTPS_PROXY;
        i ? (this[rs] = new oS({ ...s, uri: i })) : (this[rs] = this[uo]),
          this.#s();
      }
      [ZX](e, t) {
        let r = new URL(e.origin);
        return this.#t(r).dispatch(e, t);
      }
      async [_X]() {
        await this[Ra].close(),
          this[uo][tS] || (await this[uo].close()),
          this[rs][tS] || (await this[rs].close());
      }
      async [jX](e) {
        await this[Ra].destroy(e),
          this[uo][rS] || (await this[uo].destroy(e)),
          this[rs][rS] || (await this[rs].destroy(e));
      }
      #t(e) {
        let { protocol: t, host: r, port: o } = e;
        return (
          (r = r.replace(/:\d*$/, '').toLowerCase()),
          (o = Number.parseInt(o, 10) || XX[t] || 0),
          this.#o(r, o) ? (t === 'https:' ? this[rs] : this[uo]) : this[Ra]
        );
      }
      #o(e, t) {
        if ((this.#n && this.#s(), this.#e.length === 0)) return !0;
        if (this.#A === '*') return !1;
        for (let r = 0; r < this.#e.length; r++) {
          let o = this.#e[r];
          if (!(o.port && o.port !== t)) {
            if (/^[.*]/.test(o.hostname)) {
              if (e.endsWith(o.hostname.replace(/^\*/, ''))) return !1;
            } else if (e === o.hostname) return !1;
          }
        }
        return !0;
      }
      #s() {
        let e = this.#r.noProxy ?? this.#i,
          t = e.split(/[,\s]/),
          r = [];
        for (let o = 0; o < t.length; o++) {
          let s = t[o];
          if (!s) continue;
          let n = s.match(/^(.+):(\d+)$/);
          r.push({
            hostname: (n ? n[1] : s).toLowerCase(),
            port: n ? Number.parseInt(n[2], 10) : 0,
          });
        }
        (this.#A = e), (this.#e = r);
      }
      get #n() {
        return this.#r.noProxy !== void 0 ? !1 : this.#A !== this.#i;
      }
      get #i() {
        return process.env.no_proxy ?? process.env.NO_PROXY ?? '';
      }
    };
  nS.exports = pI;
});
var el = B((psA, ES) => {
  'use strict';
  var Gn = require('node:assert'),
    { kRetryHandlerDefaultRetry: aS } = FA(),
    { RequestRetryError: ba } = aA(),
    {
      isDisturbed: cS,
      parseHeaders: zX,
      parseRangeHeader: gS,
      wrapRequestBody: $X,
    } = X();
  function Az(A) {
    let e = Date.now();
    return new Date(A).getTime() - e;
  }
  var wI = class A {
    constructor(e, t) {
      let { retryOptions: r, ...o } = e,
        {
          retry: s,
          maxRetries: n,
          maxTimeout: i,
          minTimeout: a,
          timeoutFactor: c,
          methods: g,
          errorCodes: E,
          retryAfter: l,
          statusCodes: C,
        } = r ?? {};
      (this.dispatch = t.dispatch),
        (this.handler = t.handler),
        (this.opts = { ...o, body: $X(e.body) }),
        (this.abort = null),
        (this.aborted = !1),
        (this.retryOpts = {
          retry: s ?? A[aS],
          retryAfter: l ?? !0,
          maxTimeout: i ?? 30 * 1e3,
          minTimeout: a ?? 500,
          timeoutFactor: c ?? 2,
          maxRetries: n ?? 5,
          methods: g ?? ['GET', 'HEAD', 'OPTIONS', 'PUT', 'DELETE', 'TRACE'],
          statusCodes: C ?? [500, 502, 503, 504, 429],
          errorCodes: E ?? [
            'ECONNRESET',
            'ECONNREFUSED',
            'ENOTFOUND',
            'ENETDOWN',
            'ENETUNREACH',
            'EHOSTDOWN',
            'EHOSTUNREACH',
            'EPIPE',
            'UND_ERR_SOCKET',
          ],
        }),
        (this.retryCount = 0),
        (this.retryCountCheckpoint = 0),
        (this.start = 0),
        (this.end = null),
        (this.etag = null),
        (this.resume = null),
        this.handler.onConnect((Q) => {
          (this.aborted = !0), this.abort ? this.abort(Q) : (this.reason = Q);
        });
    }
    onRequestSent() {
      this.handler.onRequestSent && this.handler.onRequestSent();
    }
    onUpgrade(e, t, r) {
      this.handler.onUpgrade && this.handler.onUpgrade(e, t, r);
    }
    onConnect(e) {
      this.aborted ? e(this.reason) : (this.abort = e);
    }
    onBodySent(e) {
      if (this.handler.onBodySent) return this.handler.onBodySent(e);
    }
    static [aS](e, { state: t, opts: r }, o) {
      let { statusCode: s, code: n, headers: i } = e,
        { method: a, retryOptions: c } = r,
        {
          maxRetries: g,
          minTimeout: E,
          maxTimeout: l,
          timeoutFactor: C,
          statusCodes: Q,
          errorCodes: h,
          methods: I,
        } = c,
        { counter: u } = t;
      if (n && n !== 'UND_ERR_REQ_RETRY' && !h.includes(n)) {
        o(e);
        return;
      }
      if (Array.isArray(I) && !I.includes(a)) {
        o(e);
        return;
      }
      if (s != null && Array.isArray(Q) && !Q.includes(s)) {
        o(e);
        return;
      }
      if (u > g) {
        o(e);
        return;
      }
      let d = i?.['retry-after'];
      d && ((d = Number(d)), (d = Number.isNaN(d) ? Az(d) : d * 1e3));
      let f = d > 0 ? Math.min(d, l) : Math.min(E * C ** (u - 1), l);
      setTimeout(() => o(null), f);
    }
    onHeaders(e, t, r, o) {
      let s = zX(t);
      if (((this.retryCount += 1), e >= 300))
        return this.retryOpts.statusCodes.includes(e) === !1
          ? this.handler.onHeaders(e, t, r, o)
          : (this.abort(
              new ba('Request failed', e, {
                headers: s,
                data: { count: this.retryCount },
              }),
            ),
            !1);
      if (this.resume != null) {
        if (((this.resume = null), e !== 206 && (this.start > 0 || e !== 200)))
          return (
            this.abort(
              new ba(
                'server does not support the range header and the payload was partially consumed',
                e,
                { headers: s, data: { count: this.retryCount } },
              ),
            ),
            !1
          );
        let i = gS(s['content-range']);
        if (!i)
          return (
            this.abort(
              new ba('Content-Range mismatch', e, {
                headers: s,
                data: { count: this.retryCount },
              }),
            ),
            !1
          );
        if (this.etag != null && this.etag !== s.etag)
          return (
            this.abort(
              new ba('ETag mismatch', e, {
                headers: s,
                data: { count: this.retryCount },
              }),
            ),
            !1
          );
        let { start: a, size: c, end: g = c - 1 } = i;
        return (
          Gn(this.start === a, 'content-range mismatch'),
          Gn(this.end == null || this.end === g, 'content-range mismatch'),
          (this.resume = r),
          !0
        );
      }
      if (this.end == null) {
        if (e === 206) {
          let i = gS(s['content-range']);
          if (i == null) return this.handler.onHeaders(e, t, r, o);
          let { start: a, size: c, end: g = c - 1 } = i;
          Gn(a != null && Number.isFinite(a), 'content-range mismatch'),
            Gn(g != null && Number.isFinite(g), 'invalid content-length'),
            (this.start = a),
            (this.end = g);
        }
        if (this.end == null) {
          let i = s['content-length'];
          this.end = i != null ? Number(i) - 1 : null;
        }
        return (
          Gn(Number.isFinite(this.start)),
          Gn(
            this.end == null || Number.isFinite(this.end),
            'invalid content-length',
          ),
          (this.resume = r),
          (this.etag = s.etag != null ? s.etag : null),
          this.etag != null && this.etag.startsWith('W/') && (this.etag = null),
          this.handler.onHeaders(e, t, r, o)
        );
      }
      let n = new ba('Request failed', e, {
        headers: s,
        data: { count: this.retryCount },
      });
      return this.abort(n), !1;
    }
    onData(e) {
      return (this.start += e.length), this.handler.onData(e);
    }
    onComplete(e) {
      return (this.retryCount = 0), this.handler.onComplete(e);
    }
    onError(e) {
      if (this.aborted || cS(this.opts.body)) return this.handler.onError(e);
      this.retryCount - this.retryCountCheckpoint > 0
        ? (this.retryCount =
            this.retryCountCheckpoint +
            (this.retryCount - this.retryCountCheckpoint))
        : (this.retryCount += 1),
        this.retryOpts.retry(
          e,
          {
            state: { counter: this.retryCount },
            opts: { retryOptions: this.retryOpts, ...this.opts },
          },
          t.bind(this),
        );
      function t(r) {
        if (r != null || this.aborted || cS(this.opts.body))
          return this.handler.onError(r);
        if (this.start !== 0) {
          let o = { range: `bytes=${this.start}-${this.end ?? ''}` };
          this.etag != null && (o['if-match'] = this.etag),
            (this.opts = {
              ...this.opts,
              headers: { ...this.opts.headers, ...o },
            });
        }
        try {
          (this.retryCountCheckpoint = this.retryCount),
            this.dispatch(this.opts, this);
        } catch (o) {
          this.handler.onError(o);
        }
      }
    }
  };
  ES.exports = wI;
});
var QS = B((wsA, lS) => {
  'use strict';
  var ez = zi(),
    tz = el(),
    yI = class extends ez {
      #A = null;
      #e = null;
      constructor(e, t = {}) {
        super(t), (this.#A = e), (this.#e = t);
      }
      dispatch(e, t) {
        let r = new tz(
          { ...e, retryOptions: this.#e },
          { dispatch: this.#A.dispatch.bind(this.#A), handler: t },
        );
        return this.#A.dispatch(e, r);
      }
      close() {
        return this.#A.close();
      }
      destroy() {
        return this.#A.destroy();
      }
    };
  lS.exports = yI;
});
var FI = B((ysA, wS) => {
  'use strict';
  var IS = require('node:assert'),
    { Readable: rz } = require('node:stream'),
    {
      RequestAbortedError: dS,
      NotSupportedError: oz,
      InvalidArgumentError: sz,
      AbortError: DI,
    } = aA(),
    fS = X(),
    { ReadableStreamFrom: nz } = X(),
    rt = Symbol('kConsume'),
    Fa = Symbol('kReading'),
    ho = Symbol('kBody'),
    CS = Symbol('kAbort'),
    pS = Symbol('kContentType'),
    BS = Symbol('kContentLength'),
    iz = () => {},
    mI = class extends rz {
      constructor({
        resume: e,
        abort: t,
        contentType: r = '',
        contentLength: o,
        highWaterMark: s = 64 * 1024,
      }) {
        super({ autoDestroy: !0, read: e, highWaterMark: s }),
          (this._readableState.dataEmitted = !1),
          (this[CS] = t),
          (this[rt] = null),
          (this[ho] = null),
          (this[pS] = r),
          (this[BS] = o),
          (this[Fa] = !1);
      }
      destroy(e) {
        return (
          !e && !this._readableState.endEmitted && (e = new dS()),
          e && this[CS](),
          super.destroy(e)
        );
      }
      _destroy(e, t) {
        this[Fa]
          ? t(e)
          : setImmediate(() => {
              t(e);
            });
      }
      on(e, ...t) {
        return (
          (e === 'data' || e === 'readable') && (this[Fa] = !0),
          super.on(e, ...t)
        );
      }
      addListener(e, ...t) {
        return this.on(e, ...t);
      }
      off(e, ...t) {
        let r = super.off(e, ...t);
        return (
          (e === 'data' || e === 'readable') &&
            (this[Fa] =
              this.listenerCount('data') > 0 ||
              this.listenerCount('readable') > 0),
          r
        );
      }
      removeListener(e, ...t) {
        return this.off(e, ...t);
      }
      push(e) {
        return this[rt] && e !== null
          ? (RI(this[rt], e), this[Fa] ? super.push(e) : !0)
          : super.push(e);
      }
      async text() {
        return Sa(this, 'text');
      }
      async json() {
        return Sa(this, 'json');
      }
      async blob() {
        return Sa(this, 'blob');
      }
      async bytes() {
        return Sa(this, 'bytes');
      }
      async arrayBuffer() {
        return Sa(this, 'arrayBuffer');
      }
      async formData() {
        throw new oz();
      }
      get bodyUsed() {
        return fS.isDisturbed(this);
      }
      get body() {
        return (
          this[ho] ||
            ((this[ho] = nz(this)),
            this[rt] && (this[ho].getReader(), IS(this[ho].locked))),
          this[ho]
        );
      }
      async dump(e) {
        let t = Number.isFinite(e?.limit) ? e.limit : 131072,
          r = e?.signal;
        if (r != null && (typeof r != 'object' || !('aborted' in r)))
          throw new sz('signal must be an AbortSignal');
        return (
          r?.throwIfAborted(),
          this._readableState.closeEmitted
            ? null
            : await new Promise((o, s) => {
                this[BS] > t && this.destroy(new DI());
                let n = () => {
                  this.destroy(r.reason ?? new DI());
                };
                r?.addEventListener('abort', n),
                  this.on('close', function () {
                    r?.removeEventListener('abort', n),
                      r?.aborted ? s(r.reason ?? new DI()) : o(null);
                  })
                    .on('error', iz)
                    .on('data', function (i) {
                      (t -= i.length), t <= 0 && this.destroy();
                    })
                    .resume();
              })
        );
      }
    };
  function az(A) {
    return (A[ho] && A[ho].locked === !0) || A[rt];
  }
  function cz(A) {
    return fS.isDisturbed(A) || az(A);
  }
  async function Sa(A, e) {
    return (
      IS(!A[rt]),
      new Promise((t, r) => {
        if (cz(A)) {
          let o = A._readableState;
          o.destroyed && o.closeEmitted === !1
            ? A.on('error', (s) => {
                r(s);
              }).on('close', () => {
                r(new TypeError('unusable'));
              })
            : r(o.errored ?? new TypeError('unusable'));
        } else
          queueMicrotask(() => {
            (A[rt] = {
              type: e,
              stream: A,
              resolve: t,
              reject: r,
              length: 0,
              body: [],
            }),
              A.on('error', function (o) {
                bI(this[rt], o);
              }).on('close', function () {
                this[rt].body !== null && bI(this[rt], new dS());
              }),
              gz(A[rt]);
          });
      })
    );
  }
  function gz(A) {
    if (A.body === null) return;
    let { _readableState: e } = A.stream;
    if (e.bufferIndex) {
      let t = e.bufferIndex,
        r = e.buffer.length;
      for (let o = t; o < r; o++) RI(A, e.buffer[o]);
    } else for (let t of e.buffer) RI(A, t);
    for (
      e.endEmitted
        ? hS(this[rt])
        : A.stream.on('end', function () {
            hS(this[rt]);
          }),
        A.stream.resume();
      A.stream.read() != null;
    );
  }
  function kI(A, e) {
    if (A.length === 0 || e === 0) return '';
    let t = A.length === 1 ? A[0] : Buffer.concat(A, e),
      r = t.length,
      o = r > 2 && t[0] === 239 && t[1] === 187 && t[2] === 191 ? 3 : 0;
    return t.utf8Slice(o, r);
  }
  function uS(A, e) {
    if (A.length === 0 || e === 0) return new Uint8Array(0);
    if (A.length === 1) return new Uint8Array(A[0]);
    let t = new Uint8Array(Buffer.allocUnsafeSlow(e).buffer),
      r = 0;
    for (let o = 0; o < A.length; ++o) {
      let s = A[o];
      t.set(s, r), (r += s.length);
    }
    return t;
  }
  function hS(A) {
    let { type: e, body: t, resolve: r, stream: o, length: s } = A;
    try {
      e === 'text'
        ? r(kI(t, s))
        : e === 'json'
          ? r(JSON.parse(kI(t, s)))
          : e === 'arrayBuffer'
            ? r(uS(t, s).buffer)
            : e === 'blob'
              ? r(new Blob(t, { type: o[pS] }))
              : e === 'bytes' && r(uS(t, s)),
        bI(A);
    } catch (n) {
      o.destroy(n);
    }
  }
  function RI(A, e) {
    (A.length += e.length), A.body.push(e);
  }
  function bI(A, e) {
    A.body !== null &&
      (e ? A.reject(e) : A.resolve(),
      (A.type = null),
      (A.stream = null),
      (A.resolve = null),
      (A.reject = null),
      (A.length = 0),
      (A.body = null));
  }
  wS.exports = { Readable: mI, chunksDecode: kI };
});
var SI = B((DsA, RS) => {
  var Ez = require('node:assert'),
    { ResponseStatusCodeError: yS } = aA(),
    { chunksDecode: DS } = FI(),
    lz = 128 * 1024;
  async function Qz({
    callback: A,
    body: e,
    contentType: t,
    statusCode: r,
    statusMessage: o,
    headers: s,
  }) {
    Ez(e);
    let n = [],
      i = 0;
    try {
      for await (let E of e)
        if ((n.push(E), (i += E.length), i > lz)) {
          (n = []), (i = 0);
          break;
        }
    } catch {
      (n = []), (i = 0);
    }
    let a = `Response status code ${r}${o ? `: ${o}` : ''}`;
    if (r === 204 || !t || !i) {
      queueMicrotask(() => A(new yS(a, r, s)));
      return;
    }
    let c = Error.stackTraceLimit;
    Error.stackTraceLimit = 0;
    let g;
    try {
      mS(t) ? (g = JSON.parse(DS(n, i))) : kS(t) && (g = DS(n, i));
    } catch {
    } finally {
      Error.stackTraceLimit = c;
    }
    queueMicrotask(() => A(new yS(a, r, s, g)));
  }
  var mS = (A) =>
      A.length > 15 &&
      A[11] === '/' &&
      A[0] === 'a' &&
      A[1] === 'p' &&
      A[2] === 'p' &&
      A[3] === 'l' &&
      A[4] === 'i' &&
      A[5] === 'c' &&
      A[6] === 'a' &&
      A[7] === 't' &&
      A[8] === 'i' &&
      A[9] === 'o' &&
      A[10] === 'n' &&
      A[12] === 'j' &&
      A[13] === 's' &&
      A[14] === 'o' &&
      A[15] === 'n',
    kS = (A) =>
      A.length > 4 &&
      A[4] === '/' &&
      A[0] === 't' &&
      A[1] === 'e' &&
      A[2] === 'x' &&
      A[3] === 't';
  RS.exports = {
    getResolveErrorBodyCallback: Qz,
    isContentTypeApplicationJson: mS,
    isContentTypeText: kS,
  };
});
var SS = B((msA, TI) => {
  'use strict';
  var Cz = require('node:assert'),
    { Readable: Bz } = FI(),
    { InvalidArgumentError: xn, RequestAbortedError: bS } = aA(),
    Dt = X(),
    { getResolveErrorBodyCallback: uz } = SI(),
    { AsyncResource: hz } = require('node:async_hooks'),
    tl = class extends hz {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new xn('invalid opts');
        let {
          signal: r,
          method: o,
          opaque: s,
          body: n,
          onInfo: i,
          responseHeaders: a,
          throwOnError: c,
          highWaterMark: g,
        } = e;
        try {
          if (typeof t != 'function') throw new xn('invalid callback');
          if (g && (typeof g != 'number' || g < 0))
            throw new xn('invalid highWaterMark');
          if (
            r &&
            typeof r.on != 'function' &&
            typeof r.addEventListener != 'function'
          )
            throw new xn('signal must be an EventEmitter or EventTarget');
          if (o === 'CONNECT') throw new xn('invalid method');
          if (i && typeof i != 'function')
            throw new xn('invalid onInfo callback');
          super('UNDICI_REQUEST');
        } catch (E) {
          throw (Dt.isStream(n) && Dt.destroy(n.on('error', Dt.nop), E), E);
        }
        (this.method = o),
          (this.responseHeaders = a || null),
          (this.opaque = s || null),
          (this.callback = t),
          (this.res = null),
          (this.abort = null),
          (this.body = n),
          (this.trailers = {}),
          (this.context = null),
          (this.onInfo = i || null),
          (this.throwOnError = c),
          (this.highWaterMark = g),
          (this.signal = r),
          (this.reason = null),
          (this.removeAbortListener = null),
          Dt.isStream(n) &&
            n.on('error', (E) => {
              this.onError(E);
            }),
          this.signal &&
            (this.signal.aborted
              ? (this.reason = this.signal.reason ?? new bS())
              : (this.removeAbortListener = Dt.addAbortListener(
                  this.signal,
                  () => {
                    (this.reason = this.signal.reason ?? new bS()),
                      this.res
                        ? Dt.destroy(this.res, this.reason)
                        : this.abort && this.abort(this.reason),
                      this.removeAbortListener &&
                        (this.res?.off('close', this.removeAbortListener),
                        this.removeAbortListener(),
                        (this.removeAbortListener = null));
                  },
                )));
      }
      onConnect(e, t) {
        if (this.reason) {
          e(this.reason);
          return;
        }
        Cz(this.callback), (this.abort = e), (this.context = t);
      }
      onHeaders(e, t, r, o) {
        let {
            callback: s,
            opaque: n,
            abort: i,
            context: a,
            responseHeaders: c,
            highWaterMark: g,
          } = this,
          E = c === 'raw' ? Dt.parseRawHeaders(t) : Dt.parseHeaders(t);
        if (e < 200) {
          this.onInfo && this.onInfo({ statusCode: e, headers: E });
          return;
        }
        let l = c === 'raw' ? Dt.parseHeaders(t) : E,
          C = l['content-type'],
          Q = l['content-length'],
          h = new Bz({
            resume: r,
            abort: i,
            contentType: C,
            contentLength: this.method !== 'HEAD' && Q ? Number(Q) : null,
            highWaterMark: g,
          });
        this.removeAbortListener && h.on('close', this.removeAbortListener),
          (this.callback = null),
          (this.res = h),
          s !== null &&
            (this.throwOnError && e >= 400
              ? this.runInAsyncScope(uz, null, {
                  callback: s,
                  body: h,
                  contentType: C,
                  statusCode: e,
                  statusMessage: o,
                  headers: E,
                })
              : this.runInAsyncScope(s, null, null, {
                  statusCode: e,
                  headers: E,
                  trailers: this.trailers,
                  opaque: n,
                  body: h,
                  context: a,
                }));
      }
      onData(e) {
        return this.res.push(e);
      }
      onComplete(e) {
        Dt.parseHeaders(e, this.trailers), this.res.push(null);
      }
      onError(e) {
        let { res: t, callback: r, body: o, opaque: s } = this;
        r &&
          ((this.callback = null),
          queueMicrotask(() => {
            this.runInAsyncScope(r, null, e, { opaque: s });
          })),
          t &&
            ((this.res = null),
            queueMicrotask(() => {
              Dt.destroy(t, e);
            })),
          o && ((this.body = null), Dt.destroy(o, e)),
          this.removeAbortListener &&
            (t?.off('close', this.removeAbortListener),
            this.removeAbortListener(),
            (this.removeAbortListener = null));
      }
    };
  function FS(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        FS.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      this.dispatch(A, new tl(A, e));
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A?.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  TI.exports = FS;
  TI.exports.RequestHandler = tl;
});
var Ta = B((ksA, US) => {
  var { addAbortListener: Iz } = X(),
    { RequestAbortedError: dz } = aA(),
    vn = Symbol('kListener'),
    Br = Symbol('kSignal');
  function TS(A) {
    A.abort ? A.abort(A[Br]?.reason) : (A.reason = A[Br]?.reason ?? new dz()),
      NS(A);
  }
  function fz(A, e) {
    if (((A.reason = null), (A[Br] = null), (A[vn] = null), !!e)) {
      if (e.aborted) {
        TS(A);
        return;
      }
      (A[Br] = e),
        (A[vn] = () => {
          TS(A);
        }),
        Iz(A[Br], A[vn]);
    }
  }
  function NS(A) {
    A[Br] &&
      ('removeEventListener' in A[Br]
        ? A[Br].removeEventListener('abort', A[vn])
        : A[Br].removeListener('abort', A[vn]),
      (A[Br] = null),
      (A[vn] = null));
  }
  US.exports = { addSignal: fz, removeSignal: NS };
});
var xS = B((RsA, GS) => {
  'use strict';
  var pz = require('node:assert'),
    { finished: wz, PassThrough: yz } = require('node:stream'),
    { InvalidArgumentError: On, InvalidReturnValueError: Dz } = aA(),
    Jt = X(),
    { getResolveErrorBodyCallback: mz } = SI(),
    { AsyncResource: kz } = require('node:async_hooks'),
    { addSignal: Rz, removeSignal: MS } = Ta(),
    NI = class extends kz {
      constructor(e, t, r) {
        if (!e || typeof e != 'object') throw new On('invalid opts');
        let {
          signal: o,
          method: s,
          opaque: n,
          body: i,
          onInfo: a,
          responseHeaders: c,
          throwOnError: g,
        } = e;
        try {
          if (typeof r != 'function') throw new On('invalid callback');
          if (typeof t != 'function') throw new On('invalid factory');
          if (
            o &&
            typeof o.on != 'function' &&
            typeof o.addEventListener != 'function'
          )
            throw new On('signal must be an EventEmitter or EventTarget');
          if (s === 'CONNECT') throw new On('invalid method');
          if (a && typeof a != 'function')
            throw new On('invalid onInfo callback');
          super('UNDICI_STREAM');
        } catch (E) {
          throw (Jt.isStream(i) && Jt.destroy(i.on('error', Jt.nop), E), E);
        }
        (this.responseHeaders = c || null),
          (this.opaque = n || null),
          (this.factory = t),
          (this.callback = r),
          (this.res = null),
          (this.abort = null),
          (this.context = null),
          (this.trailers = null),
          (this.body = i),
          (this.onInfo = a || null),
          (this.throwOnError = g || !1),
          Jt.isStream(i) &&
            i.on('error', (E) => {
              this.onError(E);
            }),
          Rz(this, o);
      }
      onConnect(e, t) {
        if (this.reason) {
          e(this.reason);
          return;
        }
        pz(this.callback), (this.abort = e), (this.context = t);
      }
      onHeaders(e, t, r, o) {
        let {
            factory: s,
            opaque: n,
            context: i,
            callback: a,
            responseHeaders: c,
          } = this,
          g = c === 'raw' ? Jt.parseRawHeaders(t) : Jt.parseHeaders(t);
        if (e < 200) {
          this.onInfo && this.onInfo({ statusCode: e, headers: g });
          return;
        }
        this.factory = null;
        let E;
        if (this.throwOnError && e >= 400) {
          let Q = (c === 'raw' ? Jt.parseHeaders(t) : g)['content-type'];
          (E = new yz()),
            (this.callback = null),
            this.runInAsyncScope(mz, null, {
              callback: a,
              body: E,
              contentType: Q,
              statusCode: e,
              statusMessage: o,
              headers: g,
            });
        } else {
          if (s === null) return;
          if (
            ((E = this.runInAsyncScope(s, null, {
              statusCode: e,
              headers: g,
              opaque: n,
              context: i,
            })),
            !E ||
              typeof E.write != 'function' ||
              typeof E.end != 'function' ||
              typeof E.on != 'function')
          )
            throw new Dz('expected Writable');
          wz(E, { readable: !1 }, (C) => {
            let {
              callback: Q,
              res: h,
              opaque: I,
              trailers: u,
              abort: d,
            } = this;
            (this.res = null),
              (C || !h.readable) && Jt.destroy(h, C),
              (this.callback = null),
              this.runInAsyncScope(Q, null, C || null, {
                opaque: I,
                trailers: u,
              }),
              C && d();
          });
        }
        return (
          E.on('drain', r),
          (this.res = E),
          (E.writableNeedDrain !== void 0
            ? E.writableNeedDrain
            : E._writableState?.needDrain) !== !0
        );
      }
      onData(e) {
        let { res: t } = this;
        return t ? t.write(e) : !0;
      }
      onComplete(e) {
        let { res: t } = this;
        MS(this), t && ((this.trailers = Jt.parseHeaders(e)), t.end());
      }
      onError(e) {
        let { res: t, callback: r, opaque: o, body: s } = this;
        MS(this),
          (this.factory = null),
          t
            ? ((this.res = null), Jt.destroy(t, e))
            : r &&
              ((this.callback = null),
              queueMicrotask(() => {
                this.runInAsyncScope(r, null, e, { opaque: o });
              })),
          s && ((this.body = null), Jt.destroy(s, e));
      }
    };
  function LS(A, e, t) {
    if (t === void 0)
      return new Promise((r, o) => {
        LS.call(this, A, e, (s, n) => (s ? o(s) : r(n)));
      });
    try {
      this.dispatch(A, new NI(A, e, t));
    } catch (r) {
      if (typeof t != 'function') throw r;
      let o = A?.opaque;
      queueMicrotask(() => t(r, { opaque: o }));
    }
  }
  GS.exports = LS;
});
var JS = B((bsA, YS) => {
  'use strict';
  var { Readable: OS, Duplex: bz, PassThrough: Fz } = require('node:stream'),
    {
      InvalidArgumentError: Na,
      InvalidReturnValueError: Sz,
      RequestAbortedError: UI,
    } = aA(),
    mt = X(),
    { AsyncResource: Tz } = require('node:async_hooks'),
    { addSignal: Nz, removeSignal: Uz } = Ta(),
    vS = require('node:assert'),
    Yn = Symbol('resume'),
    MI = class extends OS {
      constructor() {
        super({ autoDestroy: !0 }), (this[Yn] = null);
      }
      _read() {
        let { [Yn]: e } = this;
        e && ((this[Yn] = null), e());
      }
      _destroy(e, t) {
        this._read(), t(e);
      }
    },
    LI = class extends OS {
      constructor(e) {
        super({ autoDestroy: !0 }), (this[Yn] = e);
      }
      _read() {
        this[Yn]();
      }
      _destroy(e, t) {
        !e && !this._readableState.endEmitted && (e = new UI()), t(e);
      }
    },
    GI = class extends Tz {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new Na('invalid opts');
        if (typeof t != 'function') throw new Na('invalid handler');
        let {
          signal: r,
          method: o,
          opaque: s,
          onInfo: n,
          responseHeaders: i,
        } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new Na('signal must be an EventEmitter or EventTarget');
        if (o === 'CONNECT') throw new Na('invalid method');
        if (n && typeof n != 'function')
          throw new Na('invalid onInfo callback');
        super('UNDICI_PIPELINE'),
          (this.opaque = s || null),
          (this.responseHeaders = i || null),
          (this.handler = t),
          (this.abort = null),
          (this.context = null),
          (this.onInfo = n || null),
          (this.req = new MI().on('error', mt.nop)),
          (this.ret = new bz({
            readableObjectMode: e.objectMode,
            autoDestroy: !0,
            read: () => {
              let { body: a } = this;
              a?.resume && a.resume();
            },
            write: (a, c, g) => {
              let { req: E } = this;
              E.push(a, c) || E._readableState.destroyed ? g() : (E[Yn] = g);
            },
            destroy: (a, c) => {
              let { body: g, req: E, res: l, ret: C, abort: Q } = this;
              !a && !C._readableState.endEmitted && (a = new UI()),
                Q && a && Q(),
                mt.destroy(g, a),
                mt.destroy(E, a),
                mt.destroy(l, a),
                Uz(this),
                c(a);
            },
          }).on('prefinish', () => {
            let { req: a } = this;
            a.push(null);
          })),
          (this.res = null),
          Nz(this, r);
      }
      onConnect(e, t) {
        let { ret: r, res: o } = this;
        if (this.reason) {
          e(this.reason);
          return;
        }
        vS(!o, 'pipeline cannot be retried'),
          vS(!r.destroyed),
          (this.abort = e),
          (this.context = t);
      }
      onHeaders(e, t, r) {
        let { opaque: o, handler: s, context: n } = this;
        if (e < 200) {
          if (this.onInfo) {
            let a =
              this.responseHeaders === 'raw'
                ? mt.parseRawHeaders(t)
                : mt.parseHeaders(t);
            this.onInfo({ statusCode: e, headers: a });
          }
          return;
        }
        this.res = new LI(r);
        let i;
        try {
          this.handler = null;
          let a =
            this.responseHeaders === 'raw'
              ? mt.parseRawHeaders(t)
              : mt.parseHeaders(t);
          i = this.runInAsyncScope(s, null, {
            statusCode: e,
            headers: a,
            opaque: o,
            body: this.res,
            context: n,
          });
        } catch (a) {
          throw (this.res.on('error', mt.nop), a);
        }
        if (!i || typeof i.on != 'function') throw new Sz('expected Readable');
        i
          .on('data', (a) => {
            let { ret: c, body: g } = this;
            !c.push(a) && g.pause && g.pause();
          })
          .on('error', (a) => {
            let { ret: c } = this;
            mt.destroy(c, a);
          })
          .on('end', () => {
            let { ret: a } = this;
            a.push(null);
          })
          .on('close', () => {
            let { ret: a } = this;
            a._readableState.ended || mt.destroy(a, new UI());
          }),
          (this.body = i);
      }
      onData(e) {
        let { res: t } = this;
        return t.push(e);
      }
      onComplete(e) {
        let { res: t } = this;
        t.push(null);
      }
      onError(e) {
        let { ret: t } = this;
        (this.handler = null), mt.destroy(t, e);
      }
    };
  function Mz(A, e) {
    try {
      let t = new GI(A, e);
      return this.dispatch({ ...A, body: t.req }, t), t.ret;
    } catch (t) {
      return new Fz().destroy(t);
    }
  }
  YS.exports = Mz;
});
var _S = B((FsA, WS) => {
  'use strict';
  var { InvalidArgumentError: xI, SocketError: Lz } = aA(),
    { AsyncResource: Gz } = require('node:async_hooks'),
    HS = X(),
    { addSignal: xz, removeSignal: VS } = Ta(),
    qS = require('node:assert'),
    vI = class extends Gz {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new xI('invalid opts');
        if (typeof t != 'function') throw new xI('invalid callback');
        let { signal: r, opaque: o, responseHeaders: s } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new xI('signal must be an EventEmitter or EventTarget');
        super('UNDICI_UPGRADE'),
          (this.responseHeaders = s || null),
          (this.opaque = o || null),
          (this.callback = t),
          (this.abort = null),
          (this.context = null),
          xz(this, r);
      }
      onConnect(e, t) {
        if (this.reason) {
          e(this.reason);
          return;
        }
        qS(this.callback), (this.abort = e), (this.context = null);
      }
      onHeaders() {
        throw new Lz('bad upgrade', null);
      }
      onUpgrade(e, t, r) {
        qS(e === 101);
        let { callback: o, opaque: s, context: n } = this;
        VS(this), (this.callback = null);
        let i =
          this.responseHeaders === 'raw'
            ? HS.parseRawHeaders(t)
            : HS.parseHeaders(t);
        this.runInAsyncScope(o, null, null, {
          headers: i,
          socket: r,
          opaque: s,
          context: n,
        });
      }
      onError(e) {
        let { callback: t, opaque: r } = this;
        VS(this),
          t &&
            ((this.callback = null),
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            }));
      }
    };
  function PS(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        PS.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      let t = new vI(A, e);
      this.dispatch(
        { ...A, method: A.method || 'GET', upgrade: A.protocol || 'Websocket' },
        t,
      );
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A?.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  WS.exports = PS;
});
var zS = B((SsA, XS) => {
  'use strict';
  var vz = require('node:assert'),
    { AsyncResource: Oz } = require('node:async_hooks'),
    { InvalidArgumentError: OI, SocketError: Yz } = aA(),
    jS = X(),
    { addSignal: Jz, removeSignal: ZS } = Ta(),
    YI = class extends Oz {
      constructor(e, t) {
        if (!e || typeof e != 'object') throw new OI('invalid opts');
        if (typeof t != 'function') throw new OI('invalid callback');
        let { signal: r, opaque: o, responseHeaders: s } = e;
        if (
          r &&
          typeof r.on != 'function' &&
          typeof r.addEventListener != 'function'
        )
          throw new OI('signal must be an EventEmitter or EventTarget');
        super('UNDICI_CONNECT'),
          (this.opaque = o || null),
          (this.responseHeaders = s || null),
          (this.callback = t),
          (this.abort = null),
          Jz(this, r);
      }
      onConnect(e, t) {
        if (this.reason) {
          e(this.reason);
          return;
        }
        vz(this.callback), (this.abort = e), (this.context = t);
      }
      onHeaders() {
        throw new Yz('bad connect', null);
      }
      onUpgrade(e, t, r) {
        let { callback: o, opaque: s, context: n } = this;
        ZS(this), (this.callback = null);
        let i = t;
        i != null &&
          (i =
            this.responseHeaders === 'raw'
              ? jS.parseRawHeaders(t)
              : jS.parseHeaders(t)),
          this.runInAsyncScope(o, null, null, {
            statusCode: e,
            headers: i,
            socket: r,
            opaque: s,
            context: n,
          });
      }
      onError(e) {
        let { callback: t, opaque: r } = this;
        ZS(this),
          t &&
            ((this.callback = null),
            queueMicrotask(() => {
              this.runInAsyncScope(t, null, e, { opaque: r });
            }));
      }
    };
  function KS(A, e) {
    if (e === void 0)
      return new Promise((t, r) => {
        KS.call(this, A, (o, s) => (o ? r(o) : t(s)));
      });
    try {
      let t = new YI(A, e);
      this.dispatch({ ...A, method: 'CONNECT' }, t);
    } catch (t) {
      if (typeof e != 'function') throw t;
      let r = A?.opaque;
      queueMicrotask(() => e(t, { opaque: r }));
    }
  }
  XS.exports = KS;
});
var $S = B((TsA, Jn) => {
  'use strict';
  Jn.exports.request = SS();
  Jn.exports.stream = xS();
  Jn.exports.pipeline = JS();
  Jn.exports.upgrade = _S();
  Jn.exports.connect = zS();
});
var HI = B((NsA, AT) => {
  'use strict';
  var { UndiciError: Hz } = aA(),
    JI = class A extends Hz {
      constructor(e) {
        super(e),
          Error.captureStackTrace(this, A),
          (this.name = 'MockNotMatchedError'),
          (this.message =
            e || 'The request does not match any registered mock dispatches'),
          (this.code = 'UND_MOCK_ERR_MOCK_NOT_MATCHED');
      }
    };
  AT.exports = { MockNotMatchedError: JI };
});
var Hn = B((UsA, eT) => {
  'use strict';
  eT.exports = {
    kAgent: Symbol('agent'),
    kOptions: Symbol('options'),
    kFactory: Symbol('factory'),
    kDispatches: Symbol('dispatches'),
    kDispatchKey: Symbol('dispatch key'),
    kDefaultHeaders: Symbol('default headers'),
    kDefaultTrailers: Symbol('default trailers'),
    kContentLength: Symbol('content length'),
    kMockAgent: Symbol('mock agent'),
    kMockAgentSet: Symbol('mock agent set'),
    kMockAgentGet: Symbol('mock agent get'),
    kMockDispatch: Symbol('mock dispatch'),
    kClose: Symbol('close'),
    kOriginalClose: Symbol('original agent close'),
    kOrigin: Symbol('origin'),
    kIsMockActive: Symbol('is mock active'),
    kNetConnect: Symbol('net connect'),
    kGetNetConnect: Symbol('get net connect'),
    kConnected: Symbol('connected'),
  };
});
var Ua = B((MsA, lT) => {
  'use strict';
  var { MockNotMatchedError: os } = HI(),
    {
      kDispatches: rl,
      kMockAgent: Vz,
      kOriginalDispatch: qz,
      kOrigin: Pz,
      kGetNetConnect: Wz,
    } = Hn(),
    { buildURL: _z } = X(),
    { STATUS_CODES: jz } = require('node:http'),
    {
      types: { isPromise: Zz },
    } = require('node:util');
  function Jr(A, e) {
    return typeof A == 'string'
      ? A === e
      : A instanceof RegExp
        ? A.test(e)
        : typeof A == 'function'
          ? A(e) === !0
          : !1;
  }
  function rT(A) {
    return Object.fromEntries(
      Object.entries(A).map(([e, t]) => [e.toLocaleLowerCase(), t]),
    );
  }
  function oT(A, e) {
    if (Array.isArray(A)) {
      for (let t = 0; t < A.length; t += 2)
        if (A[t].toLocaleLowerCase() === e.toLocaleLowerCase()) return A[t + 1];
      return;
    } else
      return typeof A.get == 'function'
        ? A.get(e)
        : rT(A)[e.toLocaleLowerCase()];
  }
  function PI(A) {
    let e = A.slice(),
      t = [];
    for (let r = 0; r < e.length; r += 2) t.push([e[r], e[r + 1]]);
    return Object.fromEntries(t);
  }
  function sT(A, e) {
    if (typeof A.headers == 'function')
      return Array.isArray(e) && (e = PI(e)), A.headers(e ? rT(e) : {});
    if (typeof A.headers > 'u') return !0;
    if (typeof e != 'object' || typeof A.headers != 'object') return !1;
    for (let [t, r] of Object.entries(A.headers)) {
      let o = oT(e, t);
      if (!Jr(r, o)) return !1;
    }
    return !0;
  }
  function tT(A) {
    if (typeof A != 'string') return A;
    let e = A.split('?');
    if (e.length !== 2) return A;
    let t = new URLSearchParams(e.pop());
    return t.sort(), [...e, t.toString()].join('?');
  }
  function Kz(A, { path: e, method: t, body: r, headers: o }) {
    let s = Jr(A.path, e),
      n = Jr(A.method, t),
      i = typeof A.body < 'u' ? Jr(A.body, r) : !0,
      a = sT(A, o);
    return s && n && i && a;
  }
  function nT(A) {
    return Buffer.isBuffer(A) ||
      A instanceof Uint8Array ||
      A instanceof ArrayBuffer
      ? A
      : typeof A == 'object'
        ? JSON.stringify(A)
        : A.toString();
  }
  function iT(A, e) {
    let t = e.query ? _z(e.path, e.query) : e.path,
      r = typeof t == 'string' ? tT(t) : t,
      o = A.filter(({ consumed: s }) => !s).filter(({ path: s }) =>
        Jr(tT(s), r),
      );
    if (o.length === 0)
      throw new os(`Mock dispatch not matched for path '${r}'`);
    if (((o = o.filter(({ method: s }) => Jr(s, e.method))), o.length === 0))
      throw new os(
        `Mock dispatch not matched for method '${e.method}' on path '${r}'`,
      );
    if (
      ((o = o.filter(({ body: s }) => (typeof s < 'u' ? Jr(s, e.body) : !0))),
      o.length === 0)
    )
      throw new os(
        `Mock dispatch not matched for body '${e.body}' on path '${r}'`,
      );
    if (((o = o.filter((s) => sT(s, e.headers))), o.length === 0)) {
      let s =
        typeof e.headers == 'object' ? JSON.stringify(e.headers) : e.headers;
      throw new os(
        `Mock dispatch not matched for headers '${s}' on path '${r}'`,
      );
    }
    return o[0];
  }
  function Xz(A, e, t) {
    let r = { timesInvoked: 0, times: 1, persist: !1, consumed: !1 },
      o = typeof t == 'function' ? { callback: t } : { ...t },
      s = { ...r, ...e, pending: !0, data: { error: null, ...o } };
    return A.push(s), s;
  }
  function VI(A, e) {
    let t = A.findIndex((r) => (r.consumed ? Kz(r, e) : !1));
    t !== -1 && A.splice(t, 1);
  }
  function aT(A) {
    let { path: e, method: t, body: r, headers: o, query: s } = A;
    return { path: e, method: t, body: r, headers: o, query: s };
  }
  function qI(A) {
    let e = Object.keys(A),
      t = [];
    for (let r = 0; r < e.length; ++r) {
      let o = e[r],
        s = A[o],
        n = Buffer.from(`${o}`);
      if (Array.isArray(s))
        for (let i = 0; i < s.length; ++i) t.push(n, Buffer.from(`${s[i]}`));
      else t.push(n, Buffer.from(`${s}`));
    }
    return t;
  }
  function cT(A) {
    return jz[A] || 'unknown';
  }
  async function zz(A) {
    let e = [];
    for await (let t of A) e.push(t);
    return Buffer.concat(e).toString('utf8');
  }
  function gT(A, e) {
    let t = aT(A),
      r = iT(this[rl], t);
    r.timesInvoked++,
      r.data.callback && (r.data = { ...r.data, ...r.data.callback(A) });
    let {
        data: { statusCode: o, data: s, headers: n, trailers: i, error: a },
        delay: c,
        persist: g,
      } = r,
      { timesInvoked: E, times: l } = r;
    if (((r.consumed = !g && E >= l), (r.pending = E < l), a !== null))
      return VI(this[rl], t), e.onError(a), !0;
    typeof c == 'number' && c > 0
      ? setTimeout(() => {
          C(this[rl]);
        }, c)
      : C(this[rl]);
    function C(h, I = s) {
      let u = Array.isArray(A.headers) ? PI(A.headers) : A.headers,
        d = typeof I == 'function' ? I({ ...A, headers: u }) : I;
      if (Zz(d)) {
        d.then((j) => C(h, j));
        return;
      }
      let f = nT(d),
        D = qI(n),
        q = qI(i);
      e.onConnect?.((j) => e.onError(j), null),
        e.onHeaders?.(o, D, Q, cT(o)),
        e.onData?.(Buffer.from(f)),
        e.onComplete?.(q),
        VI(h, t);
    }
    function Q() {}
    return !0;
  }
  function $z() {
    let A = this[Vz],
      e = this[Pz],
      t = this[qz];
    return function (o, s) {
      if (A.isMockActive)
        try {
          gT.call(this, o, s);
        } catch (n) {
          if (n instanceof os) {
            let i = A[Wz]();
            if (i === !1)
              throw new os(
                `${n.message}: subsequent request to origin ${e} was not allowed (net.connect disabled)`,
              );
            if (ET(i, e)) t.call(this, o, s);
            else
              throw new os(
                `${n.message}: subsequent request to origin ${e} was not allowed (net.connect is not enabled for this origin)`,
              );
          } else throw n;
        }
      else t.call(this, o, s);
    };
  }
  function ET(A, e) {
    let t = new URL(e);
    return A === !0 ? !0 : !!(Array.isArray(A) && A.some((r) => Jr(r, t.host)));
  }
  function A4(A) {
    if (A) {
      let { agent: e, ...t } = A;
      return t;
    }
  }
  lT.exports = {
    getResponseData: nT,
    getMockDispatch: iT,
    addMockDispatch: Xz,
    deleteMockDispatch: VI,
    buildKey: aT,
    generateKeyValues: qI,
    matchValue: Jr,
    getResponse: zz,
    getStatusText: cT,
    mockDispatch: gT,
    buildMockDispatch: $z,
    checkNetConnect: ET,
    buildMockOptions: A4,
    getHeaderByName: oT,
    buildHeadersFromArray: PI,
  };
});
var zI = B((LsA, XI) => {
  'use strict';
  var { getResponseData: e4, buildKey: t4, addMockDispatch: WI } = Ua(),
    {
      kDispatches: ol,
      kDispatchKey: sl,
      kDefaultHeaders: _I,
      kDefaultTrailers: jI,
      kContentLength: ZI,
      kMockDispatch: nl,
    } = Hn(),
    { InvalidArgumentError: ur } = aA(),
    { buildURL: r4 } = X(),
    Vn = class {
      constructor(e) {
        this[nl] = e;
      }
      delay(e) {
        if (typeof e != 'number' || !Number.isInteger(e) || e <= 0)
          throw new ur('waitInMs must be a valid integer > 0');
        return (this[nl].delay = e), this;
      }
      persist() {
        return (this[nl].persist = !0), this;
      }
      times(e) {
        if (typeof e != 'number' || !Number.isInteger(e) || e <= 0)
          throw new ur('repeatTimes must be a valid integer > 0');
        return (this[nl].times = e), this;
      }
    },
    KI = class {
      constructor(e, t) {
        if (typeof e != 'object') throw new ur('opts must be an object');
        if (typeof e.path > 'u') throw new ur('opts.path must be defined');
        if (
          (typeof e.method > 'u' && (e.method = 'GET'),
          typeof e.path == 'string')
        )
          if (e.query) e.path = r4(e.path, e.query);
          else {
            let r = new URL(e.path, 'data://');
            e.path = r.pathname + r.search;
          }
        typeof e.method == 'string' && (e.method = e.method.toUpperCase()),
          (this[sl] = t4(e)),
          (this[ol] = t),
          (this[_I] = {}),
          (this[jI] = {}),
          (this[ZI] = !1);
      }
      createMockScopeDispatchData({
        statusCode: e,
        data: t,
        responseOptions: r,
      }) {
        let o = e4(t),
          s = this[ZI] ? { 'content-length': o.length } : {},
          n = { ...this[_I], ...s, ...r.headers },
          i = { ...this[jI], ...r.trailers };
        return { statusCode: e, data: t, headers: n, trailers: i };
      }
      validateReplyParameters(e) {
        if (typeof e.statusCode > 'u')
          throw new ur('statusCode must be defined');
        if (typeof e.responseOptions != 'object' || e.responseOptions === null)
          throw new ur('responseOptions must be an object');
      }
      reply(e) {
        if (typeof e == 'function') {
          let s = (i) => {
              let a = e(i);
              if (typeof a != 'object' || a === null)
                throw new ur('reply options callback must return an object');
              let c = { data: '', responseOptions: {}, ...a };
              return (
                this.validateReplyParameters(c),
                { ...this.createMockScopeDispatchData(c) }
              );
            },
            n = WI(this[ol], this[sl], s);
          return new Vn(n);
        }
        let t = {
          statusCode: e,
          data: arguments[1] === void 0 ? '' : arguments[1],
          responseOptions: arguments[2] === void 0 ? {} : arguments[2],
        };
        this.validateReplyParameters(t);
        let r = this.createMockScopeDispatchData(t),
          o = WI(this[ol], this[sl], r);
        return new Vn(o);
      }
      replyWithError(e) {
        if (typeof e > 'u') throw new ur('error must be defined');
        let t = WI(this[ol], this[sl], { error: e });
        return new Vn(t);
      }
      defaultReplyHeaders(e) {
        if (typeof e > 'u') throw new ur('headers must be defined');
        return (this[_I] = e), this;
      }
      defaultReplyTrailers(e) {
        if (typeof e > 'u') throw new ur('trailers must be defined');
        return (this[jI] = e), this;
      }
      replyContentLength() {
        return (this[ZI] = !0), this;
      }
    };
  XI.exports.MockInterceptor = KI;
  XI.exports.MockScope = Vn;
});
var ed = B((GsA, dT) => {
  'use strict';
  var { promisify: o4 } = require('node:util'),
    s4 = pa(),
    { buildMockDispatch: n4 } = Ua(),
    {
      kDispatches: QT,
      kMockAgent: CT,
      kClose: BT,
      kOriginalClose: uT,
      kOrigin: hT,
      kOriginalDispatch: i4,
      kConnected: $I,
    } = Hn(),
    { MockInterceptor: a4 } = zI(),
    IT = FA(),
    { InvalidArgumentError: c4 } = aA(),
    Ad = class extends s4 {
      constructor(e, t) {
        if (
          (super(e, t), !t || !t.agent || typeof t.agent.dispatch != 'function')
        )
          throw new c4('Argument opts.agent must implement Agent');
        (this[CT] = t.agent),
          (this[hT] = e),
          (this[QT] = []),
          (this[$I] = 1),
          (this[i4] = this.dispatch),
          (this[uT] = this.close.bind(this)),
          (this.dispatch = n4.call(this)),
          (this.close = this[BT]);
      }
      get [IT.kConnected]() {
        return this[$I];
      }
      intercept(e) {
        return new a4(e, this[QT]);
      }
      async [BT]() {
        await o4(this[uT])(),
          (this[$I] = 0),
          this[CT][IT.kClients].delete(this[hT]);
      }
    };
  dT.exports = Ad;
});
var od = B((xsA, kT) => {
  'use strict';
  var { promisify: g4 } = require('node:util'),
    E4 = Mn(),
    { buildMockDispatch: l4 } = Ua(),
    {
      kDispatches: fT,
      kMockAgent: pT,
      kClose: wT,
      kOriginalClose: yT,
      kOrigin: DT,
      kOriginalDispatch: Q4,
      kConnected: td,
    } = Hn(),
    { MockInterceptor: C4 } = zI(),
    mT = FA(),
    { InvalidArgumentError: B4 } = aA(),
    rd = class extends E4 {
      constructor(e, t) {
        if (
          (super(e, t), !t || !t.agent || typeof t.agent.dispatch != 'function')
        )
          throw new B4('Argument opts.agent must implement Agent');
        (this[pT] = t.agent),
          (this[DT] = e),
          (this[fT] = []),
          (this[td] = 1),
          (this[Q4] = this.dispatch),
          (this[yT] = this.close.bind(this)),
          (this.dispatch = l4.call(this)),
          (this.close = this[wT]);
      }
      get [mT.kConnected]() {
        return this[td];
      }
      intercept(e) {
        return new C4(e, this[fT]);
      }
      async [wT]() {
        await g4(this[yT])(),
          (this[td] = 0),
          this[pT][mT.kClients].delete(this[DT]);
      }
    };
  kT.exports = rd;
});
var bT = B((OsA, RT) => {
  'use strict';
  var u4 = { pronoun: 'it', is: 'is', was: 'was', this: 'this' },
    h4 = { pronoun: 'they', is: 'are', was: 'were', this: 'these' };
  RT.exports = class {
    constructor(e, t) {
      (this.singular = e), (this.plural = t);
    }
    pluralize(e) {
      let t = e === 1,
        r = t ? u4 : h4,
        o = t ? this.singular : this.plural;
      return { ...r, count: e, noun: o };
    }
  };
});
var ST = B((JsA, FT) => {
  'use strict';
  var { Transform: I4 } = require('node:stream'),
    { Console: d4 } = require('node:console'),
    f4 = process.versions.icu ? '\u2705' : 'Y ',
    p4 = process.versions.icu ? '\u274C' : 'N ';
  FT.exports = class {
    constructor({ disableColors: e } = {}) {
      (this.transform = new I4({
        transform(t, r, o) {
          o(null, t);
        },
      })),
        (this.logger = new d4({
          stdout: this.transform,
          inspectOptions: { colors: !e && !process.env.CI },
        }));
    }
    format(e) {
      let t = e.map(
        ({
          method: r,
          path: o,
          data: { statusCode: s },
          persist: n,
          times: i,
          timesInvoked: a,
          origin: c,
        }) => ({
          Method: r,
          Origin: c,
          Path: o,
          'Status code': s,
          Persistent: n ? f4 : p4,
          Invocations: a,
          Remaining: n ? 1 / 0 : i - a,
        }),
      );
      return this.logger.table(t), this.transform.read().toString();
    }
  };
});
var MT = B((HsA, UT) => {
  'use strict';
  var { kClients: ss } = FA(),
    w4 = Ln(),
    {
      kAgent: sd,
      kMockAgentSet: il,
      kMockAgentGet: TT,
      kDispatches: nd,
      kIsMockActive: al,
      kNetConnect: ns,
      kGetNetConnect: y4,
      kOptions: cl,
      kFactory: gl,
    } = Hn(),
    D4 = ed(),
    m4 = od(),
    { matchValue: k4, buildMockOptions: R4 } = Ua(),
    { InvalidArgumentError: NT, UndiciError: b4 } = aA(),
    F4 = zi(),
    S4 = bT(),
    T4 = ST(),
    id = class extends F4 {
      constructor(e) {
        if (
          (super(e),
          (this[ns] = !0),
          (this[al] = !0),
          e?.agent && typeof e.agent.dispatch != 'function')
        )
          throw new NT('Argument opts.agent must implement Agent');
        let t = e?.agent ? e.agent : new w4(e);
        (this[sd] = t), (this[ss] = t[ss]), (this[cl] = R4(e));
      }
      get(e) {
        let t = this[TT](e);
        return t || ((t = this[gl](e)), this[il](e, t)), t;
      }
      dispatch(e, t) {
        return this.get(e.origin), this[sd].dispatch(e, t);
      }
      async close() {
        await this[sd].close(), this[ss].clear();
      }
      deactivate() {
        this[al] = !1;
      }
      activate() {
        this[al] = !0;
      }
      enableNetConnect(e) {
        if (
          typeof e == 'string' ||
          typeof e == 'function' ||
          e instanceof RegExp
        )
          Array.isArray(this[ns]) ? this[ns].push(e) : (this[ns] = [e]);
        else if (typeof e > 'u') this[ns] = !0;
        else
          throw new NT(
            'Unsupported matcher. Must be one of String|Function|RegExp.',
          );
      }
      disableNetConnect() {
        this[ns] = !1;
      }
      get isMockActive() {
        return this[al];
      }
      [il](e, t) {
        this[ss].set(e, t);
      }
      [gl](e) {
        let t = Object.assign({ agent: this }, this[cl]);
        return this[cl] && this[cl].connections === 1
          ? new D4(e, t)
          : new m4(e, t);
      }
      [TT](e) {
        let t = this[ss].get(e);
        if (t) return t;
        if (typeof e != 'string') {
          let r = this[gl]('http://localhost:9999');
          return this[il](e, r), r;
        }
        for (let [r, o] of Array.from(this[ss]))
          if (o && typeof r != 'string' && k4(r, e)) {
            let s = this[gl](e);
            return this[il](e, s), (s[nd] = o[nd]), s;
          }
      }
      [y4]() {
        return this[ns];
      }
      pendingInterceptors() {
        let e = this[ss];
        return Array.from(e.entries())
          .flatMap(([t, r]) => r[nd].map((o) => ({ ...o, origin: t })))
          .filter(({ pending: t }) => t);
      }
      assertNoPendingInterceptors({
        pendingInterceptorsFormatter: e = new T4(),
      } = {}) {
        let t = this.pendingInterceptors();
        if (t.length === 0) return;
        let r = new S4('interceptor', 'interceptors').pluralize(t.length);
        throw new b4(
          `
${r.count} ${r.noun} ${r.is} pending:

${e.format(t)}
`.trim(),
        );
      }
    };
  UT.exports = id;
});
var El = B((VsA, vT) => {
  'use strict';
  var LT = Symbol.for('undici.globalDispatcher.1'),
    { InvalidArgumentError: N4 } = aA(),
    U4 = Ln();
  xT() === void 0 && GT(new U4());
  function GT(A) {
    if (!A || typeof A.dispatch != 'function')
      throw new N4('Argument agent must implement Agent');
    Object.defineProperty(globalThis, LT, {
      value: A,
      writable: !0,
      enumerable: !1,
      configurable: !1,
    });
  }
  function xT() {
    return globalThis[LT];
  }
  vT.exports = { setGlobalDispatcher: GT, getGlobalDispatcher: xT };
});
var ad = B((PsA, OT) => {
  'use strict';
  OT.exports = class {
    #A;
    constructor(e) {
      if (typeof e != 'object' || e === null)
        throw new TypeError('handler must be an object');
      this.#A = e;
    }
    onConnect(...e) {
      return this.#A.onConnect?.(...e);
    }
    onError(...e) {
      return this.#A.onError?.(...e);
    }
    onUpgrade(...e) {
      return this.#A.onUpgrade?.(...e);
    }
    onResponseStarted(...e) {
      return this.#A.onResponseStarted?.(...e);
    }
    onHeaders(...e) {
      return this.#A.onHeaders?.(...e);
    }
    onData(...e) {
      return this.#A.onData?.(...e);
    }
    onComplete(...e) {
      return this.#A.onComplete?.(...e);
    }
    onBodySent(...e) {
      return this.#A.onBodySent?.(...e);
    }
  };
});
var JT = B((WsA, YT) => {
  'use strict';
  var M4 = qE();
  YT.exports = (A) => {
    let e = A?.maxRedirections;
    return (t) =>
      function (o, s) {
        let { maxRedirections: n = e, ...i } = o;
        if (!n) return t(o, s);
        let a = new M4(t, n, o, s);
        return t(i, a);
      };
  };
});
var VT = B((_sA, HT) => {
  'use strict';
  var L4 = el();
  HT.exports = (A) => (e) =>
    function (r, o) {
      return e(
        r,
        new L4(
          { ...r, retryOptions: { ...A, ...r.retryOptions } },
          { handler: o, dispatch: e },
        ),
      );
    };
});
var PT = B((jsA, qT) => {
  'use strict';
  var G4 = X(),
    { InvalidArgumentError: x4, RequestAbortedError: v4 } = aA(),
    O4 = ad(),
    cd = class extends O4 {
      #A = 1024 * 1024;
      #e = null;
      #r = !1;
      #t = !1;
      #o = 0;
      #s = null;
      #n = null;
      constructor({ maxSize: e }, t) {
        if ((super(t), e != null && (!Number.isFinite(e) || e < 1)))
          throw new x4('maxSize must be a number greater than 0');
        (this.#A = e ?? this.#A), (this.#n = t);
      }
      onConnect(e) {
        (this.#e = e), this.#n.onConnect(this.#i.bind(this));
      }
      #i(e) {
        (this.#t = !0), (this.#s = e);
      }
      onHeaders(e, t, r, o) {
        let n = G4.parseHeaders(t)['content-length'];
        if (n != null && n > this.#A)
          throw new v4(`Response size (${n}) larger than maxSize (${this.#A})`);
        return this.#t ? !0 : this.#n.onHeaders(e, t, r, o);
      }
      onError(e) {
        this.#r || ((e = this.#s ?? e), this.#n.onError(e));
      }
      onData(e) {
        return (
          (this.#o = this.#o + e.length),
          this.#o >= this.#A &&
            ((this.#r = !0),
            this.#t ? this.#n.onError(this.#s) : this.#n.onComplete([])),
          !0
        );
      }
      onComplete(e) {
        if (!this.#r) {
          if (this.#t) {
            this.#n.onError(this.reason);
            return;
          }
          this.#n.onComplete(e);
        }
      }
    };
  function Y4({ maxSize: A } = { maxSize: 1024 * 1024 }) {
    return (e) =>
      function (r, o) {
        let { dumpMaxSize: s = A } = r,
          n = new cd({ maxSize: s }, o);
        return e(r, n);
      };
  }
  qT.exports = Y4;
});
var is = B((ZsA, zT) => {
  'use strict';
  var { kConstruct: J4 } = FA(),
    { kEnumerableProperty: qn } = X(),
    { iteratorMixin: H4, isValidHeaderName: Ma, isValidHeaderValue: _T } = tt(),
    { webidl: rA } = ie(),
    gd = require('node:assert'),
    ll = require('node:util'),
    _A = Symbol('headers map'),
    ot = Symbol('headers map sorted');
  function WT(A) {
    return A === 10 || A === 13 || A === 9 || A === 32;
  }
  function jT(A) {
    let e = 0,
      t = A.length;
    for (; t > e && WT(A.charCodeAt(t - 1)); ) --t;
    for (; t > e && WT(A.charCodeAt(e)); ) ++e;
    return e === 0 && t === A.length ? A : A.substring(e, t);
  }
  function ZT(A, e) {
    if (Array.isArray(e))
      for (let t = 0; t < e.length; ++t) {
        let r = e[t];
        if (r.length !== 2)
          throw rA.errors.exception({
            header: 'Headers constructor',
            message: `expected name/value pair to be length 2, found ${r.length}.`,
          });
        Ed(A, r[0], r[1]);
      }
    else if (typeof e == 'object' && e !== null) {
      let t = Object.keys(e);
      for (let r = 0; r < t.length; ++r) Ed(A, t[r], e[t[r]]);
    } else
      throw rA.errors.conversionFailed({
        prefix: 'Headers constructor',
        argument: 'Argument 1',
        types: [
          'sequence<sequence<ByteString>>',
          'record<ByteString, ByteString>',
        ],
      });
  }
  function Ed(A, e, t) {
    if (((t = jT(t)), Ma(e))) {
      if (!_T(t))
        throw rA.errors.invalidArgument({
          prefix: 'Headers.append',
          value: t,
          type: 'header value',
        });
    } else
      throw rA.errors.invalidArgument({
        prefix: 'Headers.append',
        value: e,
        type: 'header name',
      });
    if (XT(A) === 'immutable') throw new TypeError('immutable');
    return ld(A).append(e, t, !1);
  }
  function KT(A, e) {
    return A[0] < e[0] ? -1 : 1;
  }
  var Ql = class A {
      cookies = null;
      constructor(e) {
        e instanceof A
          ? ((this[_A] = new Map(e[_A])),
            (this[ot] = e[ot]),
            (this.cookies = e.cookies === null ? null : [...e.cookies]))
          : ((this[_A] = new Map(e)), (this[ot] = null));
      }
      contains(e, t) {
        return this[_A].has(t ? e : e.toLowerCase());
      }
      clear() {
        this[_A].clear(), (this[ot] = null), (this.cookies = null);
      }
      append(e, t, r) {
        this[ot] = null;
        let o = r ? e : e.toLowerCase(),
          s = this[_A].get(o);
        if (s) {
          let n = o === 'cookie' ? '; ' : ', ';
          this[_A].set(o, { name: s.name, value: `${s.value}${n}${t}` });
        } else this[_A].set(o, { name: e, value: t });
        o === 'set-cookie' && (this.cookies ??= []).push(t);
      }
      set(e, t, r) {
        this[ot] = null;
        let o = r ? e : e.toLowerCase();
        o === 'set-cookie' && (this.cookies = [t]),
          this[_A].set(o, { name: e, value: t });
      }
      delete(e, t) {
        (this[ot] = null),
          t || (e = e.toLowerCase()),
          e === 'set-cookie' && (this.cookies = null),
          this[_A].delete(e);
      }
      get(e, t) {
        return this[_A].get(t ? e : e.toLowerCase())?.value ?? null;
      }
      *[Symbol.iterator]() {
        for (let {
          0: e,
          1: { value: t },
        } of this[_A])
          yield [e, t];
      }
      get entries() {
        let e = {};
        if (this[_A].size !== 0)
          for (let { name: t, value: r } of this[_A].values()) e[t] = r;
        return e;
      }
      rawValues() {
        return this[_A].values();
      }
      get entriesList() {
        let e = [];
        if (this[_A].size !== 0)
          for (let {
            0: t,
            1: { name: r, value: o },
          } of this[_A])
            if (t === 'set-cookie') for (let s of this.cookies) e.push([r, s]);
            else e.push([r, o]);
        return e;
      }
      toSortedArray() {
        let e = this[_A].size,
          t = new Array(e);
        if (e <= 32) {
          if (e === 0) return t;
          let r = this[_A][Symbol.iterator](),
            o = r.next().value;
          (t[0] = [o[0], o[1].value]), gd(o[1].value !== null);
          for (let s = 1, n = 0, i = 0, a = 0, c = 0, g, E; s < e; ++s) {
            for (
              E = r.next().value,
                g = t[s] = [E[0], E[1].value],
                gd(g[1] !== null),
                a = 0,
                i = s;
              a < i;
            )
              (c = a + ((i - a) >> 1)), t[c][0] <= g[0] ? (a = c + 1) : (i = c);
            if (s !== c) {
              for (n = s; n > a; ) t[n] = t[--n];
              t[a] = g;
            }
          }
          if (!r.next().done) throw new TypeError('Unreachable');
          return t;
        } else {
          let r = 0;
          for (let {
            0: o,
            1: { value: s },
          } of this[_A])
            (t[r++] = [o, s]), gd(s !== null);
          return t.sort(KT);
        }
      }
    },
    Ht = class A {
      #A;
      #e;
      constructor(e = void 0) {
        rA.util.markAsUncloneable(this),
          e !== J4 &&
            ((this.#e = new Ql()),
            (this.#A = 'none'),
            e !== void 0 &&
              ((e = rA.converters.HeadersInit(e, 'Headers contructor', 'init')),
              ZT(this, e)));
      }
      append(e, t) {
        rA.brandCheck(this, A),
          rA.argumentLengthCheck(arguments, 2, 'Headers.append');
        let r = 'Headers.append';
        return (
          (e = rA.converters.ByteString(e, r, 'name')),
          (t = rA.converters.ByteString(t, r, 'value')),
          Ed(this, e, t)
        );
      }
      delete(e) {
        if (
          (rA.brandCheck(this, A),
          rA.argumentLengthCheck(arguments, 1, 'Headers.delete'),
          (e = rA.converters.ByteString(e, 'Headers.delete', 'name')),
          !Ma(e))
        )
          throw rA.errors.invalidArgument({
            prefix: 'Headers.delete',
            value: e,
            type: 'header name',
          });
        if (this.#A === 'immutable') throw new TypeError('immutable');
        this.#e.contains(e, !1) && this.#e.delete(e, !1);
      }
      get(e) {
        rA.brandCheck(this, A),
          rA.argumentLengthCheck(arguments, 1, 'Headers.get');
        let t = 'Headers.get';
        if (((e = rA.converters.ByteString(e, t, 'name')), !Ma(e)))
          throw rA.errors.invalidArgument({
            prefix: t,
            value: e,
            type: 'header name',
          });
        return this.#e.get(e, !1);
      }
      has(e) {
        rA.brandCheck(this, A),
          rA.argumentLengthCheck(arguments, 1, 'Headers.has');
        let t = 'Headers.has';
        if (((e = rA.converters.ByteString(e, t, 'name')), !Ma(e)))
          throw rA.errors.invalidArgument({
            prefix: t,
            value: e,
            type: 'header name',
          });
        return this.#e.contains(e, !1);
      }
      set(e, t) {
        rA.brandCheck(this, A),
          rA.argumentLengthCheck(arguments, 2, 'Headers.set');
        let r = 'Headers.set';
        if (
          ((e = rA.converters.ByteString(e, r, 'name')),
          (t = rA.converters.ByteString(t, r, 'value')),
          (t = jT(t)),
          Ma(e))
        ) {
          if (!_T(t))
            throw rA.errors.invalidArgument({
              prefix: r,
              value: t,
              type: 'header value',
            });
        } else
          throw rA.errors.invalidArgument({
            prefix: r,
            value: e,
            type: 'header name',
          });
        if (this.#A === 'immutable') throw new TypeError('immutable');
        this.#e.set(e, t, !1);
      }
      getSetCookie() {
        rA.brandCheck(this, A);
        let e = this.#e.cookies;
        return e ? [...e] : [];
      }
      get [ot]() {
        if (this.#e[ot]) return this.#e[ot];
        let e = [],
          t = this.#e.toSortedArray(),
          r = this.#e.cookies;
        if (r === null || r.length === 1) return (this.#e[ot] = t);
        for (let o = 0; o < t.length; ++o) {
          let { 0: s, 1: n } = t[o];
          if (s === 'set-cookie')
            for (let i = 0; i < r.length; ++i) e.push([s, r[i]]);
          else e.push([s, n]);
        }
        return (this.#e[ot] = e);
      }
      [ll.inspect.custom](e, t) {
        return (
          (t.depth ??= e), `Headers ${ll.formatWithOptions(t, this.#e.entries)}`
        );
      }
      static getHeadersGuard(e) {
        return e.#A;
      }
      static setHeadersGuard(e, t) {
        e.#A = t;
      }
      static getHeadersList(e) {
        return e.#e;
      }
      static setHeadersList(e, t) {
        e.#e = t;
      }
    },
    {
      getHeadersGuard: XT,
      setHeadersGuard: V4,
      getHeadersList: ld,
      setHeadersList: q4,
    } = Ht;
  Reflect.deleteProperty(Ht, 'getHeadersGuard');
  Reflect.deleteProperty(Ht, 'setHeadersGuard');
  Reflect.deleteProperty(Ht, 'getHeadersList');
  Reflect.deleteProperty(Ht, 'setHeadersList');
  H4('Headers', Ht, ot, 0, 1);
  Object.defineProperties(Ht.prototype, {
    append: qn,
    delete: qn,
    get: qn,
    has: qn,
    set: qn,
    getSetCookie: qn,
    [Symbol.toStringTag]: { value: 'Headers', configurable: !0 },
    [ll.inspect.custom]: { enumerable: !1 },
  });
  rA.converters.HeadersInit = function (A, e, t) {
    if (rA.util.Type(A) === 'Object') {
      let r = Reflect.get(A, Symbol.iterator);
      if (!ll.types.isProxy(A) && r === Ht.prototype.entries)
        try {
          return ld(A).entriesList;
        } catch {}
      return typeof r == 'function'
        ? rA.converters['sequence<sequence<ByteString>>'](A, e, t, r.bind(A))
        : rA.converters['record<ByteString, ByteString>'](A, e, t);
    }
    throw rA.errors.conversionFailed({
      prefix: 'Headers constructor',
      argument: 'Argument 1',
      types: [
        'sequence<sequence<ByteString>>',
        'record<ByteString, ByteString>',
      ],
    });
  };
  zT.exports = {
    fill: ZT,
    compareHeaderName: KT,
    Headers: Ht,
    HeadersList: Ql,
    getHeadersGuard: XT,
    setHeadersGuard: V4,
    setHeadersList: q4,
    getHeadersList: ld,
  };
});
var Ga = B((KsA, aN) => {
  'use strict';
  var {
      Headers: oN,
      HeadersList: $T,
      fill: P4,
      getHeadersGuard: W4,
      setHeadersGuard: sN,
      setHeadersList: nN,
    } = is(),
    {
      extractBody: AN,
      cloneBody: _4,
      mixinBody: j4,
      hasFinalizationRegistry: Z4,
      streamRegistry: K4,
      bodyUnusable: X4,
    } = ca(),
    Qd = X(),
    eN = require('node:util'),
    { kEnumerableProperty: st } = Qd,
    {
      isValidReasonPhrase: z4,
      isCancelled: $4,
      isAborted: A5,
      isBlobLike: e5,
      serializeJavascriptValueToJSONString: t5,
      isErrorLike: r5,
      isomorphicEncode: o5,
      environmentSettingsObject: s5,
    } = tt(),
    { redirectStatusSet: n5, nullBodyStatus: i5 } = ea(),
    { kState: xA, kHeaders: Hr } = ao(),
    { webidl: W } = ie(),
    { FormData: a5 } = ia(),
    { URLSerializer: tN } = ve(),
    { kConstruct: Bl } = FA(),
    Cd = require('node:assert'),
    { types: c5 } = require('node:util'),
    g5 = new TextEncoder('utf-8'),
    as = class A {
      static error() {
        return La(ul(), 'immutable');
      }
      static json(e, t = {}) {
        W.argumentLengthCheck(arguments, 1, 'Response.json'),
          t !== null && (t = W.converters.ResponseInit(t));
        let r = g5.encode(t5(e)),
          o = AN(r),
          s = La(Pn({}), 'response');
        return rN(s, t, { body: o[0], type: 'application/json' }), s;
      }
      static redirect(e, t = 302) {
        W.argumentLengthCheck(arguments, 1, 'Response.redirect'),
          (e = W.converters.USVString(e)),
          (t = W.converters['unsigned short'](t));
        let r;
        try {
          r = new URL(e, s5.settingsObject.baseUrl);
        } catch (n) {
          throw new TypeError(`Failed to parse URL from ${e}`, { cause: n });
        }
        if (!n5.has(t)) throw new RangeError(`Invalid status code ${t}`);
        let o = La(Pn({}), 'immutable');
        o[xA].status = t;
        let s = o5(tN(r));
        return o[xA].headersList.append('location', s, !0), o;
      }
      constructor(e = null, t = {}) {
        if ((W.util.markAsUncloneable(this), e === Bl)) return;
        e !== null && (e = W.converters.BodyInit(e)),
          (t = W.converters.ResponseInit(t)),
          (this[xA] = Pn({})),
          (this[Hr] = new oN(Bl)),
          sN(this[Hr], 'response'),
          nN(this[Hr], this[xA].headersList);
        let r = null;
        if (e != null) {
          let [o, s] = AN(e);
          r = { body: o, type: s };
        }
        rN(this, t, r);
      }
      get type() {
        return W.brandCheck(this, A), this[xA].type;
      }
      get url() {
        W.brandCheck(this, A);
        let e = this[xA].urlList,
          t = e[e.length - 1] ?? null;
        return t === null ? '' : tN(t, !0);
      }
      get redirected() {
        return W.brandCheck(this, A), this[xA].urlList.length > 1;
      }
      get status() {
        return W.brandCheck(this, A), this[xA].status;
      }
      get ok() {
        return (
          W.brandCheck(this, A),
          this[xA].status >= 200 && this[xA].status <= 299
        );
      }
      get statusText() {
        return W.brandCheck(this, A), this[xA].statusText;
      }
      get headers() {
        return W.brandCheck(this, A), this[Hr];
      }
      get body() {
        return (
          W.brandCheck(this, A), this[xA].body ? this[xA].body.stream : null
        );
      }
      get bodyUsed() {
        return (
          W.brandCheck(this, A),
          !!this[xA].body && Qd.isDisturbed(this[xA].body.stream)
        );
      }
      clone() {
        if ((W.brandCheck(this, A), X4(this)))
          throw W.errors.exception({
            header: 'Response.clone',
            message: 'Body has already been consumed.',
          });
        let e = Bd(this[xA]);
        return La(e, W4(this[Hr]));
      }
      [eN.inspect.custom](e, t) {
        t.depth === null && (t.depth = 2), (t.colors ??= !0);
        let r = {
          status: this.status,
          statusText: this.statusText,
          headers: this.headers,
          body: this.body,
          bodyUsed: this.bodyUsed,
          ok: this.ok,
          redirected: this.redirected,
          type: this.type,
          url: this.url,
        };
        return `Response ${eN.formatWithOptions(t, r)}`;
      }
    };
  j4(as);
  Object.defineProperties(as.prototype, {
    type: st,
    url: st,
    status: st,
    ok: st,
    redirected: st,
    statusText: st,
    headers: st,
    clone: st,
    body: st,
    bodyUsed: st,
    [Symbol.toStringTag]: { value: 'Response', configurable: !0 },
  });
  Object.defineProperties(as, { json: st, redirect: st, error: st });
  function Bd(A) {
    if (A.internalResponse) return iN(Bd(A.internalResponse), A.type);
    let e = Pn({ ...A, body: null });
    return A.body != null && (e.body = _4(e, A.body)), e;
  }
  function Pn(A) {
    return {
      aborted: !1,
      rangeRequested: !1,
      timingAllowPassed: !1,
      requestIncludesCredentials: !1,
      type: 'default',
      status: 200,
      timingInfo: null,
      cacheState: '',
      statusText: '',
      ...A,
      headersList: A?.headersList ? new $T(A?.headersList) : new $T(),
      urlList: A?.urlList ? [...A.urlList] : [],
    };
  }
  function ul(A) {
    let e = r5(A);
    return Pn({
      type: 'error',
      status: 0,
      error: e ? A : new Error(A && String(A)),
      aborted: A && A.name === 'AbortError',
    });
  }
  function E5(A) {
    return A.type === 'error' && A.status === 0;
  }
  function Cl(A, e) {
    return (
      (e = { internalResponse: A, ...e }),
      new Proxy(A, {
        get(t, r) {
          return r in e ? e[r] : t[r];
        },
        set(t, r, o) {
          return Cd(!(r in e)), (t[r] = o), !0;
        },
      })
    );
  }
  function iN(A, e) {
    if (e === 'basic')
      return Cl(A, { type: 'basic', headersList: A.headersList });
    if (e === 'cors')
      return Cl(A, { type: 'cors', headersList: A.headersList });
    if (e === 'opaque')
      return Cl(A, {
        type: 'opaque',
        urlList: Object.freeze([]),
        status: 0,
        statusText: '',
        body: null,
      });
    if (e === 'opaqueredirect')
      return Cl(A, {
        type: 'opaqueredirect',
        status: 0,
        statusText: '',
        headersList: [],
        body: null,
      });
    Cd(!1);
  }
  function l5(A, e = null) {
    return (
      Cd($4(A)),
      A5(A)
        ? ul(
            Object.assign(
              new DOMException('The operation was aborted.', 'AbortError'),
              { cause: e },
            ),
          )
        : ul(
            Object.assign(new DOMException('Request was cancelled.'), {
              cause: e,
            }),
          )
    );
  }
  function rN(A, e, t) {
    if (e.status !== null && (e.status < 200 || e.status > 599))
      throw new RangeError(
        'init["status"] must be in the range of 200 to 599, inclusive.',
      );
    if ('statusText' in e && e.statusText != null && !z4(String(e.statusText)))
      throw new TypeError('Invalid statusText');
    if (
      ('status' in e && e.status != null && (A[xA].status = e.status),
      'statusText' in e &&
        e.statusText != null &&
        (A[xA].statusText = e.statusText),
      'headers' in e && e.headers != null && P4(A[Hr], e.headers),
      t)
    ) {
      if (i5.includes(A.status))
        throw W.errors.exception({
          header: 'Response constructor',
          message: `Invalid response status code ${A.status}`,
        });
      (A[xA].body = t.body),
        t.type != null &&
          !A[xA].headersList.contains('content-type', !0) &&
          A[xA].headersList.append('content-type', t.type, !0);
    }
  }
  function La(A, e) {
    let t = new as(Bl);
    return (
      (t[xA] = A),
      (t[Hr] = new oN(Bl)),
      nN(t[Hr], A.headersList),
      sN(t[Hr], e),
      Z4 && A.body?.stream && K4.register(t, new WeakRef(A.body.stream)),
      t
    );
  }
  W.converters.ReadableStream = W.interfaceConverter(ReadableStream);
  W.converters.FormData = W.interfaceConverter(a5);
  W.converters.URLSearchParams = W.interfaceConverter(URLSearchParams);
  W.converters.XMLHttpRequestBodyInit = function (A, e, t) {
    return typeof A == 'string'
      ? W.converters.USVString(A, e, t)
      : e5(A)
        ? W.converters.Blob(A, e, t, { strict: !1 })
        : ArrayBuffer.isView(A) || c5.isArrayBuffer(A)
          ? W.converters.BufferSource(A, e, t)
          : Qd.isFormDataLike(A)
            ? W.converters.FormData(A, e, t, { strict: !1 })
            : A instanceof URLSearchParams
              ? W.converters.URLSearchParams(A, e, t)
              : W.converters.DOMString(A, e, t);
  };
  W.converters.BodyInit = function (A, e, t) {
    return A instanceof ReadableStream
      ? W.converters.ReadableStream(A, e, t)
      : A?.[Symbol.asyncIterator]
        ? A
        : W.converters.XMLHttpRequestBodyInit(A, e, t);
  };
  W.converters.ResponseInit = W.dictionaryConverter([
    {
      key: 'status',
      converter: W.converters['unsigned short'],
      defaultValue: () => 200,
    },
    {
      key: 'statusText',
      converter: W.converters.ByteString,
      defaultValue: () => '',
    },
    { key: 'headers', converter: W.converters.HeadersInit },
  ]);
  aN.exports = {
    isNetworkError: E5,
    makeNetworkError: ul,
    makeResponse: Pn,
    makeAppropriateNetworkError: l5,
    filterResponse: iN,
    Response: as,
    cloneResponse: Bd,
    fromInnerResponse: La,
  };
});
var lN = B((XsA, EN) => {
  'use strict';
  var { kConnected: cN, kSize: gN } = FA(),
    ud = class {
      constructor(e) {
        this.value = e;
      }
      deref() {
        return this.value[cN] === 0 && this.value[gN] === 0
          ? void 0
          : this.value;
      }
    },
    hd = class {
      constructor(e) {
        this.finalizer = e;
      }
      register(e, t) {
        e.on &&
          e.on('disconnect', () => {
            e[cN] === 0 && e[gN] === 0 && this.finalizer(t);
          });
      }
      unregister(e) {}
    };
  EN.exports = function () {
    return process.env.NODE_V8_COVERAGE && process.version.startsWith('v18')
      ? (process._rawDebug(
          'Using compatibility WeakRef and FinalizationRegistry',
        ),
        { WeakRef: ud, FinalizationRegistry: hd })
      : { WeakRef, FinalizationRegistry };
  };
});
var Wn = B((zsA, RN) => {
  'use strict';
  var {
      extractBody: Q5,
      mixinBody: C5,
      cloneBody: B5,
      bodyUnusable: QN,
    } = ca(),
    {
      Headers: wN,
      fill: u5,
      HeadersList: fl,
      setHeadersGuard: dd,
      getHeadersGuard: h5,
      setHeadersList: yN,
      getHeadersList: CN,
    } = is(),
    { FinalizationRegistry: I5 } = lN()(),
    Il = X(),
    BN = require('node:util'),
    {
      isValidHTTPToken: d5,
      sameOrigin: uN,
      environmentSettingsObject: hl,
    } = tt(),
    {
      forbiddenMethodsSet: f5,
      corsSafeListedMethodsSet: p5,
      referrerPolicy: w5,
      requestRedirect: y5,
      requestMode: D5,
      requestCredentials: m5,
      requestCache: k5,
      requestDuplex: R5,
    } = ea(),
    {
      kEnumerableProperty: jA,
      normalizedMethodRecordsBase: b5,
      normalizedMethodRecords: F5,
    } = Il,
    { kHeaders: nt, kSignal: dl, kState: RA, kDispatcher: Id } = ao(),
    { webidl: x } = ie(),
    { URLSerializer: S5 } = ve(),
    { kConstruct: pl } = FA(),
    T5 = require('node:assert'),
    {
      getMaxListeners: hN,
      setMaxListeners: IN,
      getEventListeners: N5,
      defaultMaxListeners: dN,
    } = require('node:events'),
    U5 = Symbol('abortController'),
    DN = new I5(({ signal: A, abort: e }) => {
      A.removeEventListener('abort', e);
    }),
    wl = new WeakMap();
  function fN(A) {
    return e;
    function e() {
      let t = A.deref();
      if (t !== void 0) {
        DN.unregister(e),
          this.removeEventListener('abort', e),
          t.abort(this.reason);
        let r = wl.get(t.signal);
        if (r !== void 0) {
          if (r.size !== 0) {
            for (let o of r) {
              let s = o.deref();
              s !== void 0 && s.abort(this.reason);
            }
            r.clear();
          }
          wl.delete(t.signal);
        }
      }
    }
  }
  var pN = !1,
    Io = class A {
      constructor(e, t = {}) {
        if ((x.util.markAsUncloneable(this), e === pl)) return;
        let r = 'Request constructor';
        x.argumentLengthCheck(arguments, 1, r),
          (e = x.converters.RequestInfo(e, r, 'input')),
          (t = x.converters.RequestInit(t, r, 'init'));
        let o = null,
          s = null,
          n = hl.settingsObject.baseUrl,
          i = null;
        if (typeof e == 'string') {
          this[Id] = t.dispatcher;
          let u;
          try {
            u = new URL(e, n);
          } catch (d) {
            throw new TypeError('Failed to parse URL from ' + e, { cause: d });
          }
          if (u.username || u.password)
            throw new TypeError(
              'Request cannot be constructed from a URL that includes credentials: ' +
                e,
            );
          (o = yl({ urlList: [u] })), (s = 'cors');
        } else
          (this[Id] = t.dispatcher || e[Id]),
            T5(e instanceof A),
            (o = e[RA]),
            (i = e[dl]);
        let a = hl.settingsObject.origin,
          c = 'client';
        if (
          (o.window?.constructor?.name === 'EnvironmentSettingsObject' &&
            uN(o.window, a) &&
            (c = o.window),
          t.window != null)
        )
          throw new TypeError(`'window' option '${c}' must be null`);
        'window' in t && (c = 'no-window'),
          (o = yl({
            method: o.method,
            headersList: o.headersList,
            unsafeRequest: o.unsafeRequest,
            client: hl.settingsObject,
            window: c,
            priority: o.priority,
            origin: o.origin,
            referrer: o.referrer,
            referrerPolicy: o.referrerPolicy,
            mode: o.mode,
            credentials: o.credentials,
            cache: o.cache,
            redirect: o.redirect,
            integrity: o.integrity,
            keepalive: o.keepalive,
            reloadNavigation: o.reloadNavigation,
            historyNavigation: o.historyNavigation,
            urlList: [...o.urlList],
          }));
        let g = Object.keys(t).length !== 0;
        if (
          (g &&
            (o.mode === 'navigate' && (o.mode = 'same-origin'),
            (o.reloadNavigation = !1),
            (o.historyNavigation = !1),
            (o.origin = 'client'),
            (o.referrer = 'client'),
            (o.referrerPolicy = ''),
            (o.url = o.urlList[o.urlList.length - 1]),
            (o.urlList = [o.url])),
          t.referrer !== void 0)
        ) {
          let u = t.referrer;
          if (u === '') o.referrer = 'no-referrer';
          else {
            let d;
            try {
              d = new URL(u, n);
            } catch (f) {
              throw new TypeError(`Referrer "${u}" is not a valid URL.`, {
                cause: f,
              });
            }
            (d.protocol === 'about:' && d.hostname === 'client') ||
            (a && !uN(d, hl.settingsObject.baseUrl))
              ? (o.referrer = 'client')
              : (o.referrer = d);
          }
        }
        t.referrerPolicy !== void 0 && (o.referrerPolicy = t.referrerPolicy);
        let E;
        if ((t.mode !== void 0 ? (E = t.mode) : (E = s), E === 'navigate'))
          throw x.errors.exception({
            header: 'Request constructor',
            message: 'invalid request mode navigate.',
          });
        if (
          (E != null && (o.mode = E),
          t.credentials !== void 0 && (o.credentials = t.credentials),
          t.cache !== void 0 && (o.cache = t.cache),
          o.cache === 'only-if-cached' && o.mode !== 'same-origin')
        )
          throw new TypeError(
            "'only-if-cached' can be set only with 'same-origin' mode",
          );
        if (
          (t.redirect !== void 0 && (o.redirect = t.redirect),
          t.integrity != null && (o.integrity = String(t.integrity)),
          t.keepalive !== void 0 && (o.keepalive = !!t.keepalive),
          t.method !== void 0)
        ) {
          let u = t.method,
            d = F5[u];
          if (d !== void 0) o.method = d;
          else {
            if (!d5(u))
              throw new TypeError(`'${u}' is not a valid HTTP method.`);
            let f = u.toUpperCase();
            if (f5.has(f))
              throw new TypeError(`'${u}' HTTP method is unsupported.`);
            (u = b5[f] ?? u), (o.method = u);
          }
          !pN &&
            o.method === 'patch' &&
            (process.emitWarning(
              'Using `patch` is highly likely to result in a `405 Method Not Allowed`. `PATCH` is much more likely to succeed.',
              { code: 'UNDICI-FETCH-patch' },
            ),
            (pN = !0));
        }
        t.signal !== void 0 && (i = t.signal), (this[RA] = o);
        let l = new AbortController();
        if (((this[dl] = l.signal), i != null)) {
          if (
            !i ||
            typeof i.aborted != 'boolean' ||
            typeof i.addEventListener != 'function'
          )
            throw new TypeError(
              "Failed to construct 'Request': member signal is not of type AbortSignal.",
            );
          if (i.aborted) l.abort(i.reason);
          else {
            this[U5] = l;
            let u = new WeakRef(l),
              d = fN(u);
            try {
              ((typeof hN == 'function' && hN(i) === dN) ||
                N5(i, 'abort').length >= dN) &&
                IN(1500, i);
            } catch {}
            Il.addAbortListener(i, d),
              DN.register(l, { signal: i, abort: d }, d);
          }
        }
        if (
          ((this[nt] = new wN(pl)),
          yN(this[nt], o.headersList),
          dd(this[nt], 'request'),
          E === 'no-cors')
        ) {
          if (!p5.has(o.method))
            throw new TypeError(`'${o.method} is unsupported in no-cors mode.`);
          dd(this[nt], 'request-no-cors');
        }
        if (g) {
          let u = CN(this[nt]),
            d = t.headers !== void 0 ? t.headers : new fl(u);
          if ((u.clear(), d instanceof fl)) {
            for (let { name: f, value: D } of d.rawValues()) u.append(f, D, !1);
            u.cookies = d.cookies;
          } else u5(this[nt], d);
        }
        let C = e instanceof A ? e[RA].body : null;
        if (
          (t.body != null || C != null) &&
          (o.method === 'GET' || o.method === 'HEAD')
        )
          throw new TypeError('Request with GET/HEAD method cannot have body.');
        let Q = null;
        if (t.body != null) {
          let [u, d] = Q5(t.body, o.keepalive);
          (Q = u),
            d &&
              !CN(this[nt]).contains('content-type', !0) &&
              this[nt].append('content-type', d);
        }
        let h = Q ?? C;
        if (h != null && h.source == null) {
          if (Q != null && t.duplex == null)
            throw new TypeError(
              'RequestInit: duplex option is required when sending a body.',
            );
          if (o.mode !== 'same-origin' && o.mode !== 'cors')
            throw new TypeError(
              'If request is made from ReadableStream, mode should be "same-origin" or "cors"',
            );
          o.useCORSPreflightFlag = !0;
        }
        let I = h;
        if (Q == null && C != null) {
          if (QN(e))
            throw new TypeError(
              'Cannot construct a Request with a Request object that has already been used.',
            );
          let u = new TransformStream();
          C.stream.pipeThrough(u),
            (I = { source: C.source, length: C.length, stream: u.readable });
        }
        this[RA].body = I;
      }
      get method() {
        return x.brandCheck(this, A), this[RA].method;
      }
      get url() {
        return x.brandCheck(this, A), S5(this[RA].url);
      }
      get headers() {
        return x.brandCheck(this, A), this[nt];
      }
      get destination() {
        return x.brandCheck(this, A), this[RA].destination;
      }
      get referrer() {
        return (
          x.brandCheck(this, A),
          this[RA].referrer === 'no-referrer'
            ? ''
            : this[RA].referrer === 'client'
              ? 'about:client'
              : this[RA].referrer.toString()
        );
      }
      get referrerPolicy() {
        return x.brandCheck(this, A), this[RA].referrerPolicy;
      }
      get mode() {
        return x.brandCheck(this, A), this[RA].mode;
      }
      get credentials() {
        return this[RA].credentials;
      }
      get cache() {
        return x.brandCheck(this, A), this[RA].cache;
      }
      get redirect() {
        return x.brandCheck(this, A), this[RA].redirect;
      }
      get integrity() {
        return x.brandCheck(this, A), this[RA].integrity;
      }
      get keepalive() {
        return x.brandCheck(this, A), this[RA].keepalive;
      }
      get isReloadNavigation() {
        return x.brandCheck(this, A), this[RA].reloadNavigation;
      }
      get isHistoryNavigation() {
        return x.brandCheck(this, A), this[RA].historyNavigation;
      }
      get signal() {
        return x.brandCheck(this, A), this[dl];
      }
      get body() {
        return (
          x.brandCheck(this, A), this[RA].body ? this[RA].body.stream : null
        );
      }
      get bodyUsed() {
        return (
          x.brandCheck(this, A),
          !!this[RA].body && Il.isDisturbed(this[RA].body.stream)
        );
      }
      get duplex() {
        return x.brandCheck(this, A), 'half';
      }
      clone() {
        if ((x.brandCheck(this, A), QN(this))) throw new TypeError('unusable');
        let e = mN(this[RA]),
          t = new AbortController();
        if (this.signal.aborted) t.abort(this.signal.reason);
        else {
          let r = wl.get(this.signal);
          r === void 0 && ((r = new Set()), wl.set(this.signal, r));
          let o = new WeakRef(t);
          r.add(o), Il.addAbortListener(t.signal, fN(o));
        }
        return kN(e, t.signal, h5(this[nt]));
      }
      [BN.inspect.custom](e, t) {
        t.depth === null && (t.depth = 2), (t.colors ??= !0);
        let r = {
          method: this.method,
          url: this.url,
          headers: this.headers,
          destination: this.destination,
          referrer: this.referrer,
          referrerPolicy: this.referrerPolicy,
          mode: this.mode,
          credentials: this.credentials,
          cache: this.cache,
          redirect: this.redirect,
          integrity: this.integrity,
          keepalive: this.keepalive,
          isReloadNavigation: this.isReloadNavigation,
          isHistoryNavigation: this.isHistoryNavigation,
          signal: this.signal,
        };
        return `Request ${BN.formatWithOptions(t, r)}`;
      }
    };
  C5(Io);
  function yl(A) {
    return {
      method: A.method ?? 'GET',
      localURLsOnly: A.localURLsOnly ?? !1,
      unsafeRequest: A.unsafeRequest ?? !1,
      body: A.body ?? null,
      client: A.client ?? null,
      reservedClient: A.reservedClient ?? null,
      replacesClientId: A.replacesClientId ?? '',
      window: A.window ?? 'client',
      keepalive: A.keepalive ?? !1,
      serviceWorkers: A.serviceWorkers ?? 'all',
      initiator: A.initiator ?? '',
      destination: A.destination ?? '',
      priority: A.priority ?? null,
      origin: A.origin ?? 'client',
      policyContainer: A.policyContainer ?? 'client',
      referrer: A.referrer ?? 'client',
      referrerPolicy: A.referrerPolicy ?? '',
      mode: A.mode ?? 'no-cors',
      useCORSPreflightFlag: A.useCORSPreflightFlag ?? !1,
      credentials: A.credentials ?? 'same-origin',
      useCredentials: A.useCredentials ?? !1,
      cache: A.cache ?? 'default',
      redirect: A.redirect ?? 'follow',
      integrity: A.integrity ?? '',
      cryptoGraphicsNonceMetadata: A.cryptoGraphicsNonceMetadata ?? '',
      parserMetadata: A.parserMetadata ?? '',
      reloadNavigation: A.reloadNavigation ?? !1,
      historyNavigation: A.historyNavigation ?? !1,
      userActivation: A.userActivation ?? !1,
      taintedOrigin: A.taintedOrigin ?? !1,
      redirectCount: A.redirectCount ?? 0,
      responseTainting: A.responseTainting ?? 'basic',
      preventNoCacheCacheControlHeaderModification:
        A.preventNoCacheCacheControlHeaderModification ?? !1,
      done: A.done ?? !1,
      timingAllowFailed: A.timingAllowFailed ?? !1,
      urlList: A.urlList,
      url: A.urlList[0],
      headersList: A.headersList ? new fl(A.headersList) : new fl(),
    };
  }
  function mN(A) {
    let e = yl({ ...A, body: null });
    return A.body != null && (e.body = B5(e, A.body)), e;
  }
  function kN(A, e, t) {
    let r = new Io(pl);
    return (
      (r[RA] = A),
      (r[dl] = e),
      (r[nt] = new wN(pl)),
      yN(r[nt], A.headersList),
      dd(r[nt], t),
      r
    );
  }
  Object.defineProperties(Io.prototype, {
    method: jA,
    url: jA,
    headers: jA,
    redirect: jA,
    clone: jA,
    signal: jA,
    duplex: jA,
    destination: jA,
    body: jA,
    bodyUsed: jA,
    isHistoryNavigation: jA,
    isReloadNavigation: jA,
    keepalive: jA,
    integrity: jA,
    cache: jA,
    credentials: jA,
    attribute: jA,
    referrerPolicy: jA,
    referrer: jA,
    mode: jA,
    [Symbol.toStringTag]: { value: 'Request', configurable: !0 },
  });
  x.converters.Request = x.interfaceConverter(Io);
  x.converters.RequestInfo = function (A, e, t) {
    return typeof A == 'string'
      ? x.converters.USVString(A, e, t)
      : A instanceof Io
        ? x.converters.Request(A, e, t)
        : x.converters.USVString(A, e, t);
  };
  x.converters.AbortSignal = x.interfaceConverter(AbortSignal);
  x.converters.RequestInit = x.dictionaryConverter([
    { key: 'method', converter: x.converters.ByteString },
    { key: 'headers', converter: x.converters.HeadersInit },
    { key: 'body', converter: x.nullableConverter(x.converters.BodyInit) },
    { key: 'referrer', converter: x.converters.USVString },
    {
      key: 'referrerPolicy',
      converter: x.converters.DOMString,
      allowedValues: w5,
    },
    { key: 'mode', converter: x.converters.DOMString, allowedValues: D5 },
    {
      key: 'credentials',
      converter: x.converters.DOMString,
      allowedValues: m5,
    },
    { key: 'cache', converter: x.converters.DOMString, allowedValues: k5 },
    { key: 'redirect', converter: x.converters.DOMString, allowedValues: y5 },
    { key: 'integrity', converter: x.converters.DOMString },
    { key: 'keepalive', converter: x.converters.boolean },
    {
      key: 'signal',
      converter: x.nullableConverter((A) =>
        x.converters.AbortSignal(A, 'RequestInit', 'signal', { strict: !1 }),
      ),
    },
    { key: 'window', converter: x.converters.any },
    { key: 'duplex', converter: x.converters.DOMString, allowedValues: R5 },
    { key: 'dispatcher', converter: x.converters.any },
  ]);
  RN.exports = {
    Request: Io,
    makeRequest: yl,
    fromInnerRequest: kN,
    cloneRequest: mN,
  };
});
var va = B(($sA, HN) => {
  'use strict';
  var {
      makeNetworkError: lA,
      makeAppropriateNetworkError: Dl,
      filterResponse: fd,
      makeResponse: ml,
      fromInnerResponse: M5,
    } = Ga(),
    { HeadersList: bN } = is(),
    { Request: L5, cloneRequest: G5 } = Wn(),
    fo = require('node:zlib'),
    {
      bytesMatch: x5,
      makePolicyContainer: v5,
      clonePolicyContainer: O5,
      requestBadPort: Y5,
      TAOCheck: J5,
      appendRequestOriginHeader: H5,
      responseLocationURL: V5,
      requestCurrentURL: hr,
      setRequestReferrerPolicyOnRedirect: q5,
      tryUpgradeRequestToAPotentiallyTrustworthyURL: P5,
      createOpaqueTimingInfo: md,
      appendFetchMetadata: W5,
      corsCheck: _5,
      crossOriginResourcePolicyCheck: j5,
      determineRequestsReferrer: Z5,
      coarsenedSharedCurrentTime: xa,
      createDeferredPromise: K5,
      isBlobLike: X5,
      sameOrigin: Dd,
      isCancelled: cs,
      isAborted: FN,
      isErrorLike: z5,
      fullyReadBody: $5,
      readableStreamClose: A3,
      isomorphicEncode: kl,
      urlIsLocal: e3,
      urlIsHttpHttpsScheme: kd,
      urlHasHttpsScheme: t3,
      clampAndCoarsenConnectionTimingInfo: r3,
      simpleRangeHeaderValue: o3,
      buildContentRange: s3,
      createInflate: n3,
      extractMimeType: i3,
    } = tt(),
    { kState: UN, kDispatcher: a3 } = ao(),
    gs = require('node:assert'),
    { safelyExtractBody: Rd, extractBody: SN } = ca(),
    {
      redirectStatusSet: MN,
      nullBodyStatus: LN,
      safeMethodsSet: c3,
      requestBodyHeader: g3,
      subresourceSet: E3,
    } = ea(),
    l3 = require('node:events'),
    { Readable: Q3, pipeline: C3, finished: B3 } = require('node:stream'),
    {
      addAbortListener: u3,
      isErrored: h3,
      isReadable: Rl,
      bufferToLowerCasedHeaderName: TN,
    } = X(),
    {
      dataURLProcessor: I3,
      serializeAMimeType: d3,
      minimizeSupportedMimeType: f3,
    } = ve(),
    { getGlobalDispatcher: p3 } = El(),
    { webidl: w3 } = ie(),
    { STATUS_CODES: y3 } = require('node:http'),
    D3 = ['GET', 'HEAD'],
    m3 =
      typeof __UNDICI_IS_NODE__ < 'u' || typeof esbuildDetection < 'u'
        ? 'node'
        : 'undici',
    pd,
    bl = class extends l3 {
      constructor(e) {
        super(),
          (this.dispatcher = e),
          (this.connection = null),
          (this.dump = !1),
          (this.state = 'ongoing');
      }
      terminate(e) {
        this.state === 'ongoing' &&
          ((this.state = 'terminated'),
          this.connection?.destroy(e),
          this.emit('terminated', e));
      }
      abort(e) {
        this.state === 'ongoing' &&
          ((this.state = 'aborted'),
          e ||
            (e = new DOMException('The operation was aborted.', 'AbortError')),
          (this.serializedAbortReason = e),
          this.connection?.destroy(e),
          this.emit('terminated', e));
      }
    };
  function k3(A) {
    GN(A, 'fetch');
  }
  function R3(A, e = void 0) {
    w3.argumentLengthCheck(arguments, 1, 'globalThis.fetch');
    let t = K5(),
      r;
    try {
      r = new L5(A, e);
    } catch (g) {
      return t.reject(g), t.promise;
    }
    let o = r[UN];
    if (r.signal.aborted) return wd(t, o, null, r.signal.reason), t.promise;
    o.client.globalObject?.constructor?.name === 'ServiceWorkerGlobalScope' &&
      (o.serviceWorkers = 'none');
    let n = null,
      i = !1,
      a = null;
    return (
      u3(r.signal, () => {
        (i = !0), gs(a != null), a.abort(r.signal.reason);
        let g = n?.deref();
        wd(t, o, g, r.signal.reason);
      }),
      (a = vN({
        request: o,
        processResponseEndOfBody: k3,
        processResponse: (g) => {
          if (!i) {
            if (g.aborted) {
              wd(t, o, n, a.serializedAbortReason);
              return;
            }
            if (g.type === 'error') {
              t.reject(new TypeError('fetch failed', { cause: g.error }));
              return;
            }
            (n = new WeakRef(M5(g, 'immutable'))),
              t.resolve(n.deref()),
              (t = null);
          }
        },
        dispatcher: r[a3],
      })),
      t.promise
    );
  }
  function GN(A, e = 'other') {
    if ((A.type === 'error' && A.aborted) || !A.urlList?.length) return;
    let t = A.urlList[0],
      r = A.timingInfo,
      o = A.cacheState;
    kd(t) &&
      r !== null &&
      (A.timingAllowPassed || ((r = md({ startTime: r.startTime })), (o = '')),
      (r.endTime = xa()),
      (A.timingInfo = r),
      xN(r, t.href, e, globalThis, o));
  }
  var xN = performance.markResourceTiming;
  function wd(A, e, t, r) {
    if (
      (A && A.reject(r),
      e.body != null &&
        Rl(e.body?.stream) &&
        e.body.stream.cancel(r).catch((s) => {
          if (s.code !== 'ERR_INVALID_STATE') throw s;
        }),
      t == null)
    )
      return;
    let o = t[UN];
    o.body != null &&
      Rl(o.body?.stream) &&
      o.body.stream.cancel(r).catch((s) => {
        if (s.code !== 'ERR_INVALID_STATE') throw s;
      });
  }
  function vN({
    request: A,
    processRequestBodyChunkLength: e,
    processRequestEndOfBody: t,
    processResponse: r,
    processResponseEndOfBody: o,
    processResponseConsumeBody: s,
    useParallelQueue: n = !1,
    dispatcher: i = p3(),
  }) {
    gs(i);
    let a = null,
      c = !1;
    A.client != null &&
      ((a = A.client.globalObject),
      (c = A.client.crossOriginIsolatedCapability));
    let g = xa(c),
      E = md({ startTime: g }),
      l = {
        controller: new bl(i),
        request: A,
        timingInfo: E,
        processRequestBodyChunkLength: e,
        processRequestEndOfBody: t,
        processResponse: r,
        processResponseConsumeBody: s,
        processResponseEndOfBody: o,
        taskDestination: a,
        crossOriginIsolatedCapability: c,
      };
    return (
      gs(!A.body || A.body.stream),
      A.window === 'client' &&
        (A.window =
          A.client?.globalObject?.constructor?.name === 'Window'
            ? A.client
            : 'no-window'),
      A.origin === 'client' && (A.origin = A.client.origin),
      A.policyContainer === 'client' &&
        (A.client != null
          ? (A.policyContainer = O5(A.client.policyContainer))
          : (A.policyContainer = v5())),
      A.headersList.contains('accept', !0) ||
        A.headersList.append('accept', '*/*', !0),
      A.headersList.contains('accept-language', !0) ||
        A.headersList.append('accept-language', '*', !0),
      A.priority,
      E3.has(A.destination),
      ON(l).catch((C) => {
        l.controller.terminate(C);
      }),
      l.controller
    );
  }
  async function ON(A, e = !1) {
    let t = A.request,
      r = null;
    if (
      (t.localURLsOnly && !e3(hr(t)) && (r = lA('local URLs only')),
      P5(t),
      Y5(t) === 'blocked' && (r = lA('bad port')),
      t.referrerPolicy === '' &&
        (t.referrerPolicy = t.policyContainer.referrerPolicy),
      t.referrer !== 'no-referrer' && (t.referrer = Z5(t)),
      r === null &&
        (r = await (async () => {
          let s = hr(t);
          return (Dd(s, t.url) && t.responseTainting === 'basic') ||
            s.protocol === 'data:' ||
            t.mode === 'navigate' ||
            t.mode === 'websocket'
            ? ((t.responseTainting = 'basic'), await NN(A))
            : t.mode === 'same-origin'
              ? lA('request mode cannot be "same-origin"')
              : t.mode === 'no-cors'
                ? t.redirect !== 'follow'
                  ? lA('redirect mode cannot be "follow" for "no-cors" request')
                  : ((t.responseTainting = 'opaque'), await NN(A))
                : kd(hr(t))
                  ? ((t.responseTainting = 'cors'), await YN(A))
                  : lA('URL scheme must be a HTTP(S) scheme');
        })()),
      e)
    )
      return r;
    r.status !== 0 &&
      !r.internalResponse &&
      (t.responseTainting,
      t.responseTainting === 'basic'
        ? (r = fd(r, 'basic'))
        : t.responseTainting === 'cors'
          ? (r = fd(r, 'cors'))
          : t.responseTainting === 'opaque'
            ? (r = fd(r, 'opaque'))
            : gs(!1));
    let o = r.status === 0 ? r : r.internalResponse;
    if (
      (o.urlList.length === 0 && o.urlList.push(...t.urlList),
      t.timingAllowFailed || (r.timingAllowPassed = !0),
      r.type === 'opaque' &&
        o.status === 206 &&
        o.rangeRequested &&
        !t.headers.contains('range', !0) &&
        (r = o = lA()),
      r.status !== 0 &&
        (t.method === 'HEAD' ||
          t.method === 'CONNECT' ||
          LN.includes(o.status)) &&
        ((o.body = null), (A.controller.dump = !0)),
      t.integrity)
    ) {
      let s = (i) => yd(A, lA(i));
      if (t.responseTainting === 'opaque' || r.body == null) {
        s(r.error);
        return;
      }
      let n = (i) => {
        if (!x5(i, t.integrity)) {
          s('integrity mismatch');
          return;
        }
        (r.body = Rd(i)[0]), yd(A, r);
      };
      await $5(r.body, n, s);
    } else yd(A, r);
  }
  function NN(A) {
    if (cs(A) && A.request.redirectCount === 0) return Promise.resolve(Dl(A));
    let { request: e } = A,
      { protocol: t } = hr(e);
    switch (t) {
      case 'about:':
        return Promise.resolve(lA('about scheme is not supported'));
      case 'blob:': {
        pd || (pd = require('node:buffer').resolveObjectURL);
        let r = hr(e);
        if (r.search.length !== 0)
          return Promise.resolve(
            lA('NetworkError when attempting to fetch resource.'),
          );
        let o = pd(r.toString());
        if (e.method !== 'GET' || !X5(o))
          return Promise.resolve(lA('invalid method'));
        let s = ml(),
          n = o.size,
          i = kl(`${n}`),
          a = o.type;
        if (e.headersList.contains('range', !0)) {
          s.rangeRequested = !0;
          let c = e.headersList.get('range', !0),
            g = o3(c, !0);
          if (g === 'failure')
            return Promise.resolve(lA('failed to fetch the data URL'));
          let { rangeStartValue: E, rangeEndValue: l } = g;
          if (E === null) (E = n - l), (l = E + l - 1);
          else {
            if (E >= n)
              return Promise.resolve(
                lA("Range start is greater than the blob's size."),
              );
            (l === null || l >= n) && (l = n - 1);
          }
          let C = o.slice(E, l, a),
            Q = SN(C);
          s.body = Q[0];
          let h = kl(`${C.size}`),
            I = s3(E, l, n);
          (s.status = 206),
            (s.statusText = 'Partial Content'),
            s.headersList.set('content-length', h, !0),
            s.headersList.set('content-type', a, !0),
            s.headersList.set('content-range', I, !0);
        } else {
          let c = SN(o);
          (s.statusText = 'OK'),
            (s.body = c[0]),
            s.headersList.set('content-length', i, !0),
            s.headersList.set('content-type', a, !0);
        }
        return Promise.resolve(s);
      }
      case 'data:': {
        let r = hr(e),
          o = I3(r);
        if (o === 'failure')
          return Promise.resolve(lA('failed to fetch the data URL'));
        let s = d3(o.mimeType);
        return Promise.resolve(
          ml({
            statusText: 'OK',
            headersList: [['content-type', { name: 'Content-Type', value: s }]],
            body: Rd(o.body)[0],
          }),
        );
      }
      case 'file:':
        return Promise.resolve(lA('not implemented... yet...'));
      case 'http:':
      case 'https:':
        return YN(A).catch((r) => lA(r));
      default:
        return Promise.resolve(lA('unknown scheme'));
    }
  }
  function b3(A, e) {
    (A.request.done = !0),
      A.processResponseDone != null &&
        queueMicrotask(() => A.processResponseDone(e));
  }
  function yd(A, e) {
    let t = A.timingInfo,
      r = () => {
        let s = Date.now();
        A.request.destination === 'document' &&
          (A.controller.fullTimingInfo = t),
          (A.controller.reportTimingSteps = () => {
            if (A.request.url.protocol !== 'https:') return;
            t.endTime = s;
            let i = e.cacheState,
              a = e.bodyInfo;
            e.timingAllowPassed || ((t = md(t)), (i = ''));
            let c = 0;
            if (A.request.mode !== 'navigator' || !e.hasCrossOriginRedirects) {
              c = e.status;
              let g = i3(e.headersList);
              g !== 'failure' && (a.contentType = f3(g));
            }
            A.request.initiatorType != null &&
              xN(
                t,
                A.request.url.href,
                A.request.initiatorType,
                globalThis,
                i,
                a,
                c,
              );
          });
        let n = () => {
          (A.request.done = !0),
            A.processResponseEndOfBody != null &&
              queueMicrotask(() => A.processResponseEndOfBody(e)),
            A.request.initiatorType != null && A.controller.reportTimingSteps();
        };
        queueMicrotask(() => n());
      };
    A.processResponse != null &&
      queueMicrotask(() => {
        A.processResponse(e), (A.processResponse = null);
      });
    let o = e.type === 'error' ? e : (e.internalResponse ?? e);
    o.body == null
      ? r()
      : B3(o.body.stream, () => {
          r();
        });
  }
  async function YN(A) {
    let e = A.request,
      t = null,
      r = null,
      o = A.timingInfo;
    if ((e.serviceWorkers, t === null)) {
      if (
        (e.redirect === 'follow' && (e.serviceWorkers = 'none'),
        (r = t = await JN(A)),
        e.responseTainting === 'cors' && _5(e, t) === 'failure')
      )
        return lA('cors failure');
      J5(e, t) === 'failure' && (e.timingAllowFailed = !0);
    }
    return (e.responseTainting === 'opaque' || t.type === 'opaque') &&
      j5(e.origin, e.client, e.destination, r) === 'blocked'
      ? lA('blocked')
      : (MN.has(r.status) &&
          (e.redirect !== 'manual' &&
            A.controller.connection.destroy(void 0, !1),
          e.redirect === 'error'
            ? (t = lA('unexpected redirect'))
            : e.redirect === 'manual'
              ? (t = r)
              : e.redirect === 'follow'
                ? (t = await F3(A, t))
                : gs(!1)),
        (t.timingInfo = o),
        t);
  }
  function F3(A, e) {
    let t = A.request,
      r = e.internalResponse ? e.internalResponse : e,
      o;
    try {
      if (((o = V5(r, hr(t).hash)), o == null)) return e;
    } catch (n) {
      return Promise.resolve(lA(n));
    }
    if (!kd(o))
      return Promise.resolve(lA('URL scheme must be a HTTP(S) scheme'));
    if (t.redirectCount === 20)
      return Promise.resolve(lA('redirect count exceeded'));
    if (
      ((t.redirectCount += 1),
      t.mode === 'cors' && (o.username || o.password) && !Dd(t, o))
    )
      return Promise.resolve(
        lA('cross origin not allowed for request mode "cors"'),
      );
    if (t.responseTainting === 'cors' && (o.username || o.password))
      return Promise.resolve(
        lA('URL cannot contain credentials for request mode "cors"'),
      );
    if (r.status !== 303 && t.body != null && t.body.source == null)
      return Promise.resolve(lA());
    if (
      ([301, 302].includes(r.status) && t.method === 'POST') ||
      (r.status === 303 && !D3.includes(t.method))
    ) {
      (t.method = 'GET'), (t.body = null);
      for (let n of g3) t.headersList.delete(n);
    }
    Dd(hr(t), o) ||
      (t.headersList.delete('authorization', !0),
      t.headersList.delete('proxy-authorization', !0),
      t.headersList.delete('cookie', !0),
      t.headersList.delete('host', !0)),
      t.body != null &&
        (gs(t.body.source != null), (t.body = Rd(t.body.source)[0]));
    let s = A.timingInfo;
    return (
      (s.redirectEndTime = s.postRedirectStartTime =
        xa(A.crossOriginIsolatedCapability)),
      s.redirectStartTime === 0 && (s.redirectStartTime = s.startTime),
      t.urlList.push(o),
      q5(t, r),
      ON(A, !0)
    );
  }
  async function JN(A, e = !1, t = !1) {
    let r = A.request,
      o = null,
      s = null,
      n = null,
      i = null,
      a = !1;
    r.window === 'no-window' && r.redirect === 'error'
      ? ((o = A), (s = r))
      : ((s = G5(r)), (o = { ...A }), (o.request = s));
    let c =
        r.credentials === 'include' ||
        (r.credentials === 'same-origin' && r.responseTainting === 'basic'),
      g = s.body ? s.body.length : null,
      E = null;
    if (
      (s.body == null && ['POST', 'PUT'].includes(s.method) && (E = '0'),
      g != null && (E = kl(`${g}`)),
      E != null && s.headersList.append('content-length', E, !0),
      g != null && s.keepalive,
      s.referrer instanceof URL &&
        s.headersList.append('referer', kl(s.referrer.href), !0),
      H5(s),
      W5(s),
      s.headersList.contains('user-agent', !0) ||
        s.headersList.append('user-agent', m3),
      s.cache === 'default' &&
        (s.headersList.contains('if-modified-since', !0) ||
          s.headersList.contains('if-none-match', !0) ||
          s.headersList.contains('if-unmodified-since', !0) ||
          s.headersList.contains('if-match', !0) ||
          s.headersList.contains('if-range', !0)) &&
        (s.cache = 'no-store'),
      s.cache === 'no-cache' &&
        !s.preventNoCacheCacheControlHeaderModification &&
        !s.headersList.contains('cache-control', !0) &&
        s.headersList.append('cache-control', 'max-age=0', !0),
      (s.cache === 'no-store' || s.cache === 'reload') &&
        (s.headersList.contains('pragma', !0) ||
          s.headersList.append('pragma', 'no-cache', !0),
        s.headersList.contains('cache-control', !0) ||
          s.headersList.append('cache-control', 'no-cache', !0)),
      s.headersList.contains('range', !0) &&
        s.headersList.append('accept-encoding', 'identity', !0),
      s.headersList.contains('accept-encoding', !0) ||
        (t3(hr(s))
          ? s.headersList.append('accept-encoding', 'br, gzip, deflate', !0)
          : s.headersList.append('accept-encoding', 'gzip, deflate', !0)),
      s.headersList.delete('host', !0),
      i == null && (s.cache = 'no-store'),
      s.cache !== 'no-store' && s.cache,
      n == null)
    ) {
      if (s.cache === 'only-if-cached') return lA('only if cached');
      let l = await S3(o, c, t);
      !c3.has(s.method) && l.status >= 200 && l.status <= 399,
        a && l.status,
        n == null && (n = l);
    }
    if (
      ((n.urlList = [...s.urlList]),
      s.headersList.contains('range', !0) && (n.rangeRequested = !0),
      (n.requestIncludesCredentials = c),
      n.status === 407)
    )
      return r.window === 'no-window'
        ? lA()
        : cs(A)
          ? Dl(A)
          : lA('proxy authentication required');
    if (n.status === 421 && !t && (r.body == null || r.body.source != null)) {
      if (cs(A)) return Dl(A);
      A.controller.connection.destroy(), (n = await JN(A, e, !0));
    }
    return n;
  }
  async function S3(A, e = !1, t = !1) {
    gs(!A.controller.connection || A.controller.connection.destroyed),
      (A.controller.connection = {
        abort: null,
        destroyed: !1,
        destroy(Q, h = !0) {
          this.destroyed ||
            ((this.destroyed = !0),
            h &&
              this.abort?.(
                Q ??
                  new DOMException('The operation was aborted.', 'AbortError'),
              ));
        },
      });
    let r = A.request,
      o = null,
      s = A.timingInfo;
    null == null && (r.cache = 'no-store');
    let i = t ? 'yes' : 'no';
    r.mode;
    let a = null;
    if (r.body == null && A.processRequestEndOfBody)
      queueMicrotask(() => A.processRequestEndOfBody());
    else if (r.body != null) {
      let Q = async function* (u) {
          cs(A) || (yield u, A.processRequestBodyChunkLength?.(u.byteLength));
        },
        h = () => {
          cs(A) || (A.processRequestEndOfBody && A.processRequestEndOfBody());
        },
        I = (u) => {
          cs(A) ||
            (u.name === 'AbortError'
              ? A.controller.abort()
              : A.controller.terminate(u));
        };
      a = (async function* () {
        try {
          for await (let u of r.body.stream) yield* Q(u);
          h();
        } catch (u) {
          I(u);
        }
      })();
    }
    try {
      let {
        body: Q,
        status: h,
        statusText: I,
        headersList: u,
        socket: d,
      } = await C({ body: a });
      if (d) o = ml({ status: h, statusText: I, headersList: u, socket: d });
      else {
        let f = Q[Symbol.asyncIterator]();
        (A.controller.next = () => f.next()),
          (o = ml({ status: h, statusText: I, headersList: u }));
      }
    } catch (Q) {
      return Q.name === 'AbortError'
        ? (A.controller.connection.destroy(), Dl(A, Q))
        : lA(Q);
    }
    let c = async () => {
        await A.controller.resume();
      },
      g = (Q) => {
        cs(A) || A.controller.abort(Q);
      },
      E = new ReadableStream({
        async start(Q) {
          A.controller.controller = Q;
        },
        async pull(Q) {
          await c(Q);
        },
        async cancel(Q) {
          await g(Q);
        },
        type: 'bytes',
      });
    (o.body = { stream: E, source: null, length: null }),
      (A.controller.onAborted = l),
      A.controller.on('terminated', l),
      (A.controller.resume = async () => {
        for (;;) {
          let Q, h;
          try {
            let { done: u, value: d } = await A.controller.next();
            if (FN(A)) break;
            Q = u ? void 0 : d;
          } catch (u) {
            A.controller.ended && !s.encodedBodySize
              ? (Q = void 0)
              : ((Q = u), (h = !0));
          }
          if (Q === void 0) {
            A3(A.controller.controller), b3(A, o);
            return;
          }
          if (((s.decodedBodySize += Q?.byteLength ?? 0), h)) {
            A.controller.terminate(Q);
            return;
          }
          let I = new Uint8Array(Q);
          if ((I.byteLength && A.controller.controller.enqueue(I), h3(E))) {
            A.controller.terminate();
            return;
          }
          if (A.controller.controller.desiredSize <= 0) return;
        }
      });
    function l(Q) {
      FN(A)
        ? ((o.aborted = !0),
          Rl(E) &&
            A.controller.controller.error(A.controller.serializedAbortReason))
        : Rl(E) &&
          A.controller.controller.error(
            new TypeError('terminated', { cause: z5(Q) ? Q : void 0 }),
          ),
        A.controller.connection.destroy();
    }
    return o;
    function C({ body: Q }) {
      let h = hr(r),
        I = A.controller.dispatcher;
      return new Promise((u, d) =>
        I.dispatch(
          {
            path: h.pathname + h.search,
            origin: h.origin,
            method: r.method,
            body: I.isMockActive
              ? r.body && (r.body.source || r.body.stream)
              : Q,
            headers: r.headersList.entries,
            maxRedirections: 0,
            upgrade: r.mode === 'websocket' ? 'websocket' : void 0,
          },
          {
            body: null,
            abort: null,
            onConnect(f) {
              let { connection: D } = A.controller;
              (s.finalConnectionTimingInfo = r3(
                void 0,
                s.postRedirectStartTime,
                A.crossOriginIsolatedCapability,
              )),
                D.destroyed
                  ? f(
                      new DOMException(
                        'The operation was aborted.',
                        'AbortError',
                      ),
                    )
                  : (A.controller.on('terminated', f),
                    (this.abort = D.abort = f)),
                (s.finalNetworkRequestStartTime = xa(
                  A.crossOriginIsolatedCapability,
                ));
            },
            onResponseStarted() {
              s.finalNetworkResponseStartTime = xa(
                A.crossOriginIsolatedCapability,
              );
            },
            onHeaders(f, D, q, j) {
              if (f < 200) return;
              let J = [],
                yA = '',
                qA = new bN();
              for (let QA = 0; QA < D.length; QA += 2)
                qA.append(TN(D[QA]), D[QA + 1].toString('latin1'), !0);
              let vA = qA.get('content-encoding', !0);
              vA &&
                (J = vA
                  .toLowerCase()
                  .split(',')
                  .map((QA) => QA.trim())),
                (yA = qA.get('location', !0)),
                (this.body = new Q3({ read: q }));
              let IA = [],
                K = yA && r.redirect === 'follow' && MN.has(f);
              if (
                J.length !== 0 &&
                r.method !== 'HEAD' &&
                r.method !== 'CONNECT' &&
                !LN.includes(f) &&
                !K
              )
                for (let QA = J.length - 1; QA >= 0; --QA) {
                  let qe = J[QA];
                  if (qe === 'x-gzip' || qe === 'gzip')
                    IA.push(
                      fo.createGunzip({
                        flush: fo.constants.Z_SYNC_FLUSH,
                        finishFlush: fo.constants.Z_SYNC_FLUSH,
                      }),
                    );
                  else if (qe === 'deflate')
                    IA.push(
                      n3({
                        flush: fo.constants.Z_SYNC_FLUSH,
                        finishFlush: fo.constants.Z_SYNC_FLUSH,
                      }),
                    );
                  else if (qe === 'br')
                    IA.push(
                      fo.createBrotliDecompress({
                        flush: fo.constants.BROTLI_OPERATION_FLUSH,
                        finishFlush: fo.constants.BROTLI_OPERATION_FLUSH,
                      }),
                    );
                  else {
                    IA.length = 0;
                    break;
                  }
                }
              let gA = this.onError.bind(this);
              return (
                u({
                  status: f,
                  statusText: j,
                  headersList: qA,
                  body: IA.length
                    ? C3(this.body, ...IA, (QA) => {
                        QA && this.onError(QA);
                      }).on('error', gA)
                    : this.body.on('error', gA),
                }),
                !0
              );
            },
            onData(f) {
              if (A.controller.dump) return;
              let D = f;
              return (s.encodedBodySize += D.byteLength), this.body.push(D);
            },
            onComplete() {
              this.abort && A.controller.off('terminated', this.abort),
                A.controller.onAborted &&
                  A.controller.off('terminated', A.controller.onAborted),
                (A.controller.ended = !0),
                this.body.push(null);
            },
            onError(f) {
              this.abort && A.controller.off('terminated', this.abort),
                this.body?.destroy(f),
                A.controller.terminate(f),
                d(f);
            },
            onUpgrade(f, D, q) {
              if (f !== 101) return;
              let j = new bN();
              for (let J = 0; J < D.length; J += 2)
                j.append(TN(D[J]), D[J + 1].toString('latin1'), !0);
              return (
                u({ status: f, statusText: y3[f], headersList: j, socket: q }),
                !0
              );
            },
          },
        ),
      );
    }
  }
  HN.exports = {
    fetch: R3,
    Fetch: bl,
    fetching: vN,
    finalizeAndReportTiming: GN,
  };
});
var bd = B((AnA, VN) => {
  'use strict';
  VN.exports = {
    kState: Symbol('FileReader state'),
    kResult: Symbol('FileReader result'),
    kError: Symbol('FileReader error'),
    kLastProgressEventFired: Symbol(
      'FileReader last progress event fired timestamp',
    ),
    kEvents: Symbol('FileReader events'),
    kAborted: Symbol('FileReader aborted'),
  };
});
var PN = B((enA, qN) => {
  'use strict';
  var { webidl: it } = ie(),
    Fl = Symbol('ProgressEvent state'),
    Fd = class A extends Event {
      constructor(e, t = {}) {
        (e = it.converters.DOMString(e, 'ProgressEvent constructor', 'type')),
          (t = it.converters.ProgressEventInit(t ?? {})),
          super(e, t),
          (this[Fl] = {
            lengthComputable: t.lengthComputable,
            loaded: t.loaded,
            total: t.total,
          });
      }
      get lengthComputable() {
        return it.brandCheck(this, A), this[Fl].lengthComputable;
      }
      get loaded() {
        return it.brandCheck(this, A), this[Fl].loaded;
      }
      get total() {
        return it.brandCheck(this, A), this[Fl].total;
      }
    };
  it.converters.ProgressEventInit = it.dictionaryConverter([
    {
      key: 'lengthComputable',
      converter: it.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'loaded',
      converter: it.converters['unsigned long long'],
      defaultValue: () => 0,
    },
    {
      key: 'total',
      converter: it.converters['unsigned long long'],
      defaultValue: () => 0,
    },
    {
      key: 'bubbles',
      converter: it.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'cancelable',
      converter: it.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'composed',
      converter: it.converters.boolean,
      defaultValue: () => !1,
    },
  ]);
  qN.exports = { ProgressEvent: Fd };
});
var _N = B((tnA, WN) => {
  'use strict';
  function T3(A) {
    if (!A) return 'failure';
    switch (A.trim().toLowerCase()) {
      case 'unicode-1-1-utf-8':
      case 'unicode11utf8':
      case 'unicode20utf8':
      case 'utf-8':
      case 'utf8':
      case 'x-unicode20utf8':
        return 'UTF-8';
      case '866':
      case 'cp866':
      case 'csibm866':
      case 'ibm866':
        return 'IBM866';
      case 'csisolatin2':
      case 'iso-8859-2':
      case 'iso-ir-101':
      case 'iso8859-2':
      case 'iso88592':
      case 'iso_8859-2':
      case 'iso_8859-2:1987':
      case 'l2':
      case 'latin2':
        return 'ISO-8859-2';
      case 'csisolatin3':
      case 'iso-8859-3':
      case 'iso-ir-109':
      case 'iso8859-3':
      case 'iso88593':
      case 'iso_8859-3':
      case 'iso_8859-3:1988':
      case 'l3':
      case 'latin3':
        return 'ISO-8859-3';
      case 'csisolatin4':
      case 'iso-8859-4':
      case 'iso-ir-110':
      case 'iso8859-4':
      case 'iso88594':
      case 'iso_8859-4':
      case 'iso_8859-4:1988':
      case 'l4':
      case 'latin4':
        return 'ISO-8859-4';
      case 'csisolatincyrillic':
      case 'cyrillic':
      case 'iso-8859-5':
      case 'iso-ir-144':
      case 'iso8859-5':
      case 'iso88595':
      case 'iso_8859-5':
      case 'iso_8859-5:1988':
        return 'ISO-8859-5';
      case 'arabic':
      case 'asmo-708':
      case 'csiso88596e':
      case 'csiso88596i':
      case 'csisolatinarabic':
      case 'ecma-114':
      case 'iso-8859-6':
      case 'iso-8859-6-e':
      case 'iso-8859-6-i':
      case 'iso-ir-127':
      case 'iso8859-6':
      case 'iso88596':
      case 'iso_8859-6':
      case 'iso_8859-6:1987':
        return 'ISO-8859-6';
      case 'csisolatingreek':
      case 'ecma-118':
      case 'elot_928':
      case 'greek':
      case 'greek8':
      case 'iso-8859-7':
      case 'iso-ir-126':
      case 'iso8859-7':
      case 'iso88597':
      case 'iso_8859-7':
      case 'iso_8859-7:1987':
      case 'sun_eu_greek':
        return 'ISO-8859-7';
      case 'csiso88598e':
      case 'csisolatinhebrew':
      case 'hebrew':
      case 'iso-8859-8':
      case 'iso-8859-8-e':
      case 'iso-ir-138':
      case 'iso8859-8':
      case 'iso88598':
      case 'iso_8859-8':
      case 'iso_8859-8:1988':
      case 'visual':
        return 'ISO-8859-8';
      case 'csiso88598i':
      case 'iso-8859-8-i':
      case 'logical':
        return 'ISO-8859-8-I';
      case 'csisolatin6':
      case 'iso-8859-10':
      case 'iso-ir-157':
      case 'iso8859-10':
      case 'iso885910':
      case 'l6':
      case 'latin6':
        return 'ISO-8859-10';
      case 'iso-8859-13':
      case 'iso8859-13':
      case 'iso885913':
        return 'ISO-8859-13';
      case 'iso-8859-14':
      case 'iso8859-14':
      case 'iso885914':
        return 'ISO-8859-14';
      case 'csisolatin9':
      case 'iso-8859-15':
      case 'iso8859-15':
      case 'iso885915':
      case 'iso_8859-15':
      case 'l9':
        return 'ISO-8859-15';
      case 'iso-8859-16':
        return 'ISO-8859-16';
      case 'cskoi8r':
      case 'koi':
      case 'koi8':
      case 'koi8-r':
      case 'koi8_r':
        return 'KOI8-R';
      case 'koi8-ru':
      case 'koi8-u':
        return 'KOI8-U';
      case 'csmacintosh':
      case 'mac':
      case 'macintosh':
      case 'x-mac-roman':
        return 'macintosh';
      case 'iso-8859-11':
      case 'iso8859-11':
      case 'iso885911':
      case 'tis-620':
      case 'windows-874':
        return 'windows-874';
      case 'cp1250':
      case 'windows-1250':
      case 'x-cp1250':
        return 'windows-1250';
      case 'cp1251':
      case 'windows-1251':
      case 'x-cp1251':
        return 'windows-1251';
      case 'ansi_x3.4-1968':
      case 'ascii':
      case 'cp1252':
      case 'cp819':
      case 'csisolatin1':
      case 'ibm819':
      case 'iso-8859-1':
      case 'iso-ir-100':
      case 'iso8859-1':
      case 'iso88591':
      case 'iso_8859-1':
      case 'iso_8859-1:1987':
      case 'l1':
      case 'latin1':
      case 'us-ascii':
      case 'windows-1252':
      case 'x-cp1252':
        return 'windows-1252';
      case 'cp1253':
      case 'windows-1253':
      case 'x-cp1253':
        return 'windows-1253';
      case 'cp1254':
      case 'csisolatin5':
      case 'iso-8859-9':
      case 'iso-ir-148':
      case 'iso8859-9':
      case 'iso88599':
      case 'iso_8859-9':
      case 'iso_8859-9:1989':
      case 'l5':
      case 'latin5':
      case 'windows-1254':
      case 'x-cp1254':
        return 'windows-1254';
      case 'cp1255':
      case 'windows-1255':
      case 'x-cp1255':
        return 'windows-1255';
      case 'cp1256':
      case 'windows-1256':
      case 'x-cp1256':
        return 'windows-1256';
      case 'cp1257':
      case 'windows-1257':
      case 'x-cp1257':
        return 'windows-1257';
      case 'cp1258':
      case 'windows-1258':
      case 'x-cp1258':
        return 'windows-1258';
      case 'x-mac-cyrillic':
      case 'x-mac-ukrainian':
        return 'x-mac-cyrillic';
      case 'chinese':
      case 'csgb2312':
      case 'csiso58gb231280':
      case 'gb2312':
      case 'gb_2312':
      case 'gb_2312-80':
      case 'gbk':
      case 'iso-ir-58':
      case 'x-gbk':
        return 'GBK';
      case 'gb18030':
        return 'gb18030';
      case 'big5':
      case 'big5-hkscs':
      case 'cn-big5':
      case 'csbig5':
      case 'x-x-big5':
        return 'Big5';
      case 'cseucpkdfmtjapanese':
      case 'euc-jp':
      case 'x-euc-jp':
        return 'EUC-JP';
      case 'csiso2022jp':
      case 'iso-2022-jp':
        return 'ISO-2022-JP';
      case 'csshiftjis':
      case 'ms932':
      case 'ms_kanji':
      case 'shift-jis':
      case 'shift_jis':
      case 'sjis':
      case 'windows-31j':
      case 'x-sjis':
        return 'Shift_JIS';
      case 'cseuckr':
      case 'csksc56011987':
      case 'euc-kr':
      case 'iso-ir-149':
      case 'korean':
      case 'ks_c_5601-1987':
      case 'ks_c_5601-1989':
      case 'ksc5601':
      case 'ksc_5601':
      case 'windows-949':
        return 'EUC-KR';
      case 'csiso2022kr':
      case 'hz-gb-2312':
      case 'iso-2022-cn':
      case 'iso-2022-cn-ext':
      case 'iso-2022-kr':
      case 'replacement':
        return 'replacement';
      case 'unicodefffe':
      case 'utf-16be':
        return 'UTF-16BE';
      case 'csunicode':
      case 'iso-10646-ucs-2':
      case 'ucs-2':
      case 'unicode':
      case 'unicodefeff':
      case 'utf-16':
      case 'utf-16le':
        return 'UTF-16LE';
      case 'x-user-defined':
        return 'x-user-defined';
      default:
        return 'failure';
    }
  }
  WN.exports = { getEncoding: T3 };
});
var eU = B((rnA, AU) => {
  'use strict';
  var {
      kState: _n,
      kError: Sd,
      kResult: jN,
      kAborted: Oa,
      kLastProgressEventFired: Td,
    } = bd(),
    { ProgressEvent: N3 } = PN(),
    { getEncoding: ZN } = _N(),
    { serializeAMimeType: U3, parseMIMEType: KN } = ve(),
    { types: M3 } = require('node:util'),
    { StringDecoder: XN } = require('string_decoder'),
    { btoa: zN } = require('node:buffer'),
    L3 = { enumerable: !0, writable: !1, configurable: !1 };
  function G3(A, e, t, r) {
    if (A[_n] === 'loading')
      throw new DOMException('Invalid state', 'InvalidStateError');
    (A[_n] = 'loading'), (A[jN] = null), (A[Sd] = null);
    let s = e.stream().getReader(),
      n = [],
      i = s.read(),
      a = !0;
    (async () => {
      for (; !A[Oa]; )
        try {
          let { done: c, value: g } = await i;
          if (
            (a &&
              !A[Oa] &&
              queueMicrotask(() => {
                po('loadstart', A);
              }),
            (a = !1),
            !c && M3.isUint8Array(g))
          )
            n.push(g),
              (A[Td] === void 0 || Date.now() - A[Td] >= 50) &&
                !A[Oa] &&
                ((A[Td] = Date.now()),
                queueMicrotask(() => {
                  po('progress', A);
                })),
              (i = s.read());
          else if (c) {
            queueMicrotask(() => {
              A[_n] = 'done';
              try {
                let E = x3(n, t, e.type, r);
                if (A[Oa]) return;
                (A[jN] = E), po('load', A);
              } catch (E) {
                (A[Sd] = E), po('error', A);
              }
              A[_n] !== 'loading' && po('loadend', A);
            });
            break;
          }
        } catch (c) {
          if (A[Oa]) return;
          queueMicrotask(() => {
            (A[_n] = 'done'),
              (A[Sd] = c),
              po('error', A),
              A[_n] !== 'loading' && po('loadend', A);
          });
          break;
        }
    })();
  }
  function po(A, e) {
    let t = new N3(A, { bubbles: !1, cancelable: !1 });
    e.dispatchEvent(t);
  }
  function x3(A, e, t, r) {
    switch (e) {
      case 'DataURL': {
        let o = 'data:',
          s = KN(t || 'application/octet-stream');
        s !== 'failure' && (o += U3(s)), (o += ';base64,');
        let n = new XN('latin1');
        for (let i of A) o += zN(n.write(i));
        return (o += zN(n.end())), o;
      }
      case 'Text': {
        let o = 'failure';
        if ((r && (o = ZN(r)), o === 'failure' && t)) {
          let s = KN(t);
          s !== 'failure' && (o = ZN(s.parameters.get('charset')));
        }
        return o === 'failure' && (o = 'UTF-8'), v3(A, o);
      }
      case 'ArrayBuffer':
        return $N(A).buffer;
      case 'BinaryString': {
        let o = '',
          s = new XN('latin1');
        for (let n of A) o += s.write(n);
        return (o += s.end()), o;
      }
    }
  }
  function v3(A, e) {
    let t = $N(A),
      r = O3(t),
      o = 0;
    r !== null && ((e = r), (o = r === 'UTF-8' ? 3 : 2));
    let s = t.slice(o);
    return new TextDecoder(e).decode(s);
  }
  function O3(A) {
    let [e, t, r] = A;
    return e === 239 && t === 187 && r === 191
      ? 'UTF-8'
      : e === 254 && t === 255
        ? 'UTF-16BE'
        : e === 255 && t === 254
          ? 'UTF-16LE'
          : null;
  }
  function $N(A) {
    let e = A.reduce((r, o) => r + o.byteLength, 0),
      t = 0;
    return A.reduce(
      (r, o) => (r.set(o, t), (t += o.byteLength), r),
      new Uint8Array(e),
    );
  }
  AU.exports = {
    staticPropertyDescriptors: L3,
    readOperation: G3,
    fireAProgressEvent: po,
  };
});
var sU = B((onA, oU) => {
  'use strict';
  var {
      staticPropertyDescriptors: jn,
      readOperation: Sl,
      fireAProgressEvent: tU,
    } = eU(),
    { kState: Es, kError: rU, kResult: Tl, kEvents: sA, kAborted: Y3 } = bd(),
    { webidl: BA } = ie(),
    { kEnumerableProperty: Je } = X(),
    Vt = class A extends EventTarget {
      constructor() {
        super(),
          (this[Es] = 'empty'),
          (this[Tl] = null),
          (this[rU] = null),
          (this[sA] = {
            loadend: null,
            error: null,
            abort: null,
            load: null,
            progress: null,
            loadstart: null,
          });
      }
      readAsArrayBuffer(e) {
        BA.brandCheck(this, A),
          BA.argumentLengthCheck(arguments, 1, 'FileReader.readAsArrayBuffer'),
          (e = BA.converters.Blob(e, { strict: !1 })),
          Sl(this, e, 'ArrayBuffer');
      }
      readAsBinaryString(e) {
        BA.brandCheck(this, A),
          BA.argumentLengthCheck(arguments, 1, 'FileReader.readAsBinaryString'),
          (e = BA.converters.Blob(e, { strict: !1 })),
          Sl(this, e, 'BinaryString');
      }
      readAsText(e, t = void 0) {
        BA.brandCheck(this, A),
          BA.argumentLengthCheck(arguments, 1, 'FileReader.readAsText'),
          (e = BA.converters.Blob(e, { strict: !1 })),
          t !== void 0 &&
            (t = BA.converters.DOMString(
              t,
              'FileReader.readAsText',
              'encoding',
            )),
          Sl(this, e, 'Text', t);
      }
      readAsDataURL(e) {
        BA.brandCheck(this, A),
          BA.argumentLengthCheck(arguments, 1, 'FileReader.readAsDataURL'),
          (e = BA.converters.Blob(e, { strict: !1 })),
          Sl(this, e, 'DataURL');
      }
      abort() {
        if (this[Es] === 'empty' || this[Es] === 'done') {
          this[Tl] = null;
          return;
        }
        this[Es] === 'loading' && ((this[Es] = 'done'), (this[Tl] = null)),
          (this[Y3] = !0),
          tU('abort', this),
          this[Es] !== 'loading' && tU('loadend', this);
      }
      get readyState() {
        switch ((BA.brandCheck(this, A), this[Es])) {
          case 'empty':
            return this.EMPTY;
          case 'loading':
            return this.LOADING;
          case 'done':
            return this.DONE;
        }
      }
      get result() {
        return BA.brandCheck(this, A), this[Tl];
      }
      get error() {
        return BA.brandCheck(this, A), this[rU];
      }
      get onloadend() {
        return BA.brandCheck(this, A), this[sA].loadend;
      }
      set onloadend(e) {
        BA.brandCheck(this, A),
          this[sA].loadend &&
            this.removeEventListener('loadend', this[sA].loadend),
          typeof e == 'function'
            ? ((this[sA].loadend = e), this.addEventListener('loadend', e))
            : (this[sA].loadend = null);
      }
      get onerror() {
        return BA.brandCheck(this, A), this[sA].error;
      }
      set onerror(e) {
        BA.brandCheck(this, A),
          this[sA].error && this.removeEventListener('error', this[sA].error),
          typeof e == 'function'
            ? ((this[sA].error = e), this.addEventListener('error', e))
            : (this[sA].error = null);
      }
      get onloadstart() {
        return BA.brandCheck(this, A), this[sA].loadstart;
      }
      set onloadstart(e) {
        BA.brandCheck(this, A),
          this[sA].loadstart &&
            this.removeEventListener('loadstart', this[sA].loadstart),
          typeof e == 'function'
            ? ((this[sA].loadstart = e), this.addEventListener('loadstart', e))
            : (this[sA].loadstart = null);
      }
      get onprogress() {
        return BA.brandCheck(this, A), this[sA].progress;
      }
      set onprogress(e) {
        BA.brandCheck(this, A),
          this[sA].progress &&
            this.removeEventListener('progress', this[sA].progress),
          typeof e == 'function'
            ? ((this[sA].progress = e), this.addEventListener('progress', e))
            : (this[sA].progress = null);
      }
      get onload() {
        return BA.brandCheck(this, A), this[sA].load;
      }
      set onload(e) {
        BA.brandCheck(this, A),
          this[sA].load && this.removeEventListener('load', this[sA].load),
          typeof e == 'function'
            ? ((this[sA].load = e), this.addEventListener('load', e))
            : (this[sA].load = null);
      }
      get onabort() {
        return BA.brandCheck(this, A), this[sA].abort;
      }
      set onabort(e) {
        BA.brandCheck(this, A),
          this[sA].abort && this.removeEventListener('abort', this[sA].abort),
          typeof e == 'function'
            ? ((this[sA].abort = e), this.addEventListener('abort', e))
            : (this[sA].abort = null);
      }
    };
  Vt.EMPTY = Vt.prototype.EMPTY = 0;
  Vt.LOADING = Vt.prototype.LOADING = 1;
  Vt.DONE = Vt.prototype.DONE = 2;
  Object.defineProperties(Vt.prototype, {
    EMPTY: jn,
    LOADING: jn,
    DONE: jn,
    readAsArrayBuffer: Je,
    readAsBinaryString: Je,
    readAsText: Je,
    readAsDataURL: Je,
    abort: Je,
    readyState: Je,
    result: Je,
    error: Je,
    onloadstart: Je,
    onprogress: Je,
    onload: Je,
    onabort: Je,
    onerror: Je,
    onloadend: Je,
    [Symbol.toStringTag]: {
      value: 'FileReader',
      writable: !1,
      enumerable: !1,
      configurable: !0,
    },
  });
  Object.defineProperties(Vt, { EMPTY: jn, LOADING: jn, DONE: jn });
  oU.exports = { FileReader: Vt };
});
var Nl = B((snA, nU) => {
  'use strict';
  nU.exports = { kConstruct: FA().kConstruct };
});
var cU = B((nnA, aU) => {
  'use strict';
  var J3 = require('node:assert'),
    { URLSerializer: iU } = ve(),
    { isValidHeaderName: H3 } = tt();
  function V3(A, e, t = !1) {
    let r = iU(A, t),
      o = iU(e, t);
    return r === o;
  }
  function q3(A) {
    J3(A !== null);
    let e = [];
    for (let t of A.split(',')) (t = t.trim()), H3(t) && e.push(t);
    return e;
  }
  aU.exports = { urlEquals: V3, getFieldValues: q3 };
});
var lU = B((inA, EU) => {
  'use strict';
  var { kConstruct: P3 } = Nl(),
    { urlEquals: W3, getFieldValues: Nd } = cU(),
    { kEnumerableProperty: ls, isDisturbed: _3 } = X(),
    { webidl: S } = ie(),
    { Response: j3, cloneResponse: Z3, fromInnerResponse: K3 } = Ga(),
    { Request: Vr, fromInnerRequest: X3 } = Wn(),
    { kState: qt } = ao(),
    { fetching: z3 } = va(),
    {
      urlIsHttpHttpsScheme: Ul,
      createDeferredPromise: Zn,
      readAllBytes: $3,
    } = tt(),
    Ud = require('node:assert'),
    Ml = class A {
      #A;
      constructor() {
        arguments[0] !== P3 && S.illegalConstructor(),
          S.util.markAsUncloneable(this),
          (this.#A = arguments[1]);
      }
      async match(e, t = {}) {
        S.brandCheck(this, A);
        let r = 'Cache.match';
        S.argumentLengthCheck(arguments, 1, r),
          (e = S.converters.RequestInfo(e, r, 'request')),
          (t = S.converters.CacheQueryOptions(t, r, 'options'));
        let o = this.#o(e, t, 1);
        if (o.length !== 0) return o[0];
      }
      async matchAll(e = void 0, t = {}) {
        S.brandCheck(this, A);
        let r = 'Cache.matchAll';
        return (
          e !== void 0 && (e = S.converters.RequestInfo(e, r, 'request')),
          (t = S.converters.CacheQueryOptions(t, r, 'options')),
          this.#o(e, t)
        );
      }
      async add(e) {
        S.brandCheck(this, A);
        let t = 'Cache.add';
        S.argumentLengthCheck(arguments, 1, t),
          (e = S.converters.RequestInfo(e, t, 'request'));
        let r = [e];
        return await this.addAll(r);
      }
      async addAll(e) {
        S.brandCheck(this, A);
        let t = 'Cache.addAll';
        S.argumentLengthCheck(arguments, 1, t);
        let r = [],
          o = [];
        for (let l of e) {
          if (l === void 0)
            throw S.errors.conversionFailed({
              prefix: t,
              argument: 'Argument 1',
              types: ['undefined is not allowed'],
            });
          if (((l = S.converters.RequestInfo(l)), typeof l == 'string'))
            continue;
          let C = l[qt];
          if (!Ul(C.url) || C.method !== 'GET')
            throw S.errors.exception({
              header: t,
              message: 'Expected http/s scheme when method is not GET.',
            });
        }
        let s = [];
        for (let l of e) {
          let C = new Vr(l)[qt];
          if (!Ul(C.url))
            throw S.errors.exception({
              header: t,
              message: 'Expected http/s scheme.',
            });
          (C.initiator = 'fetch'), (C.destination = 'subresource'), o.push(C);
          let Q = Zn();
          s.push(
            z3({
              request: C,
              processResponse(h) {
                if (
                  h.type === 'error' ||
                  h.status === 206 ||
                  h.status < 200 ||
                  h.status > 299
                )
                  Q.reject(
                    S.errors.exception({
                      header: 'Cache.addAll',
                      message:
                        'Received an invalid status code or the request failed.',
                    }),
                  );
                else if (h.headersList.contains('vary')) {
                  let I = Nd(h.headersList.get('vary'));
                  for (let u of I)
                    if (u === '*') {
                      Q.reject(
                        S.errors.exception({
                          header: 'Cache.addAll',
                          message: 'invalid vary field value',
                        }),
                      );
                      for (let d of s) d.abort();
                      return;
                    }
                }
              },
              processResponseEndOfBody(h) {
                if (h.aborted) {
                  Q.reject(new DOMException('aborted', 'AbortError'));
                  return;
                }
                Q.resolve(h);
              },
            }),
          ),
            r.push(Q.promise);
        }
        let i = await Promise.all(r),
          a = [],
          c = 0;
        for (let l of i) {
          let C = { type: 'put', request: o[c], response: l };
          a.push(C), c++;
        }
        let g = Zn(),
          E = null;
        try {
          this.#e(a);
        } catch (l) {
          E = l;
        }
        return (
          queueMicrotask(() => {
            E === null ? g.resolve(void 0) : g.reject(E);
          }),
          g.promise
        );
      }
      async put(e, t) {
        S.brandCheck(this, A);
        let r = 'Cache.put';
        S.argumentLengthCheck(arguments, 2, r),
          (e = S.converters.RequestInfo(e, r, 'request')),
          (t = S.converters.Response(t, r, 'response'));
        let o = null;
        if (
          (e instanceof Vr ? (o = e[qt]) : (o = new Vr(e)[qt]),
          !Ul(o.url) || o.method !== 'GET')
        )
          throw S.errors.exception({
            header: r,
            message: 'Expected an http/s scheme when method is not GET',
          });
        let s = t[qt];
        if (s.status === 206)
          throw S.errors.exception({ header: r, message: 'Got 206 status' });
        if (s.headersList.contains('vary')) {
          let C = Nd(s.headersList.get('vary'));
          for (let Q of C)
            if (Q === '*')
              throw S.errors.exception({
                header: r,
                message: 'Got * vary field value',
              });
        }
        if (s.body && (_3(s.body.stream) || s.body.stream.locked))
          throw S.errors.exception({
            header: r,
            message: 'Response body is locked or disturbed',
          });
        let n = Z3(s),
          i = Zn();
        if (s.body != null) {
          let Q = s.body.stream.getReader();
          $3(Q).then(i.resolve, i.reject);
        } else i.resolve(void 0);
        let a = [],
          c = { type: 'put', request: o, response: n };
        a.push(c);
        let g = await i.promise;
        n.body != null && (n.body.source = g);
        let E = Zn(),
          l = null;
        try {
          this.#e(a);
        } catch (C) {
          l = C;
        }
        return (
          queueMicrotask(() => {
            l === null ? E.resolve() : E.reject(l);
          }),
          E.promise
        );
      }
      async delete(e, t = {}) {
        S.brandCheck(this, A);
        let r = 'Cache.delete';
        S.argumentLengthCheck(arguments, 1, r),
          (e = S.converters.RequestInfo(e, r, 'request')),
          (t = S.converters.CacheQueryOptions(t, r, 'options'));
        let o = null;
        if (e instanceof Vr) {
          if (((o = e[qt]), o.method !== 'GET' && !t.ignoreMethod)) return !1;
        } else Ud(typeof e == 'string'), (o = new Vr(e)[qt]);
        let s = [],
          n = { type: 'delete', request: o, options: t };
        s.push(n);
        let i = Zn(),
          a = null,
          c;
        try {
          c = this.#e(s);
        } catch (g) {
          a = g;
        }
        return (
          queueMicrotask(() => {
            a === null ? i.resolve(!!c?.length) : i.reject(a);
          }),
          i.promise
        );
      }
      async keys(e = void 0, t = {}) {
        S.brandCheck(this, A);
        let r = 'Cache.keys';
        e !== void 0 && (e = S.converters.RequestInfo(e, r, 'request')),
          (t = S.converters.CacheQueryOptions(t, r, 'options'));
        let o = null;
        if (e !== void 0)
          if (e instanceof Vr) {
            if (((o = e[qt]), o.method !== 'GET' && !t.ignoreMethod)) return [];
          } else typeof e == 'string' && (o = new Vr(e)[qt]);
        let s = Zn(),
          n = [];
        if (e === void 0) for (let i of this.#A) n.push(i[0]);
        else {
          let i = this.#r(o, t);
          for (let a of i) n.push(a[0]);
        }
        return (
          queueMicrotask(() => {
            let i = [];
            for (let a of n) {
              let c = X3(a, new AbortController().signal, 'immutable');
              i.push(c);
            }
            s.resolve(Object.freeze(i));
          }),
          s.promise
        );
      }
      #e(e) {
        let t = this.#A,
          r = [...t],
          o = [],
          s = [];
        try {
          for (let n of e) {
            if (n.type !== 'delete' && n.type !== 'put')
              throw S.errors.exception({
                header: 'Cache.#batchCacheOperations',
                message: 'operation type does not match "delete" or "put"',
              });
            if (n.type === 'delete' && n.response != null)
              throw S.errors.exception({
                header: 'Cache.#batchCacheOperations',
                message:
                  'delete operation should not have an associated response',
              });
            if (this.#r(n.request, n.options, o).length)
              throw new DOMException('???', 'InvalidStateError');
            let i;
            if (n.type === 'delete') {
              if (((i = this.#r(n.request, n.options)), i.length === 0))
                return [];
              for (let a of i) {
                let c = t.indexOf(a);
                Ud(c !== -1), t.splice(c, 1);
              }
            } else if (n.type === 'put') {
              if (n.response == null)
                throw S.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'put operation should have an associated response',
                });
              let a = n.request;
              if (!Ul(a.url))
                throw S.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'expected http or https scheme',
                });
              if (a.method !== 'GET')
                throw S.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'not get method',
                });
              if (n.options != null)
                throw S.errors.exception({
                  header: 'Cache.#batchCacheOperations',
                  message: 'options must not be defined',
                });
              i = this.#r(n.request);
              for (let c of i) {
                let g = t.indexOf(c);
                Ud(g !== -1), t.splice(g, 1);
              }
              t.push([n.request, n.response]), o.push([n.request, n.response]);
            }
            s.push([n.request, n.response]);
          }
          return s;
        } catch (n) {
          throw ((this.#A.length = 0), (this.#A = r), n);
        }
      }
      #r(e, t, r) {
        let o = [],
          s = r ?? this.#A;
        for (let n of s) {
          let [i, a] = n;
          this.#t(e, i, a, t) && o.push(n);
        }
        return o;
      }
      #t(e, t, r = null, o) {
        let s = new URL(e.url),
          n = new URL(t.url);
        if (
          (o?.ignoreSearch && ((n.search = ''), (s.search = '')), !W3(s, n, !0))
        )
          return !1;
        if (r == null || o?.ignoreVary || !r.headersList.contains('vary'))
          return !0;
        let i = Nd(r.headersList.get('vary'));
        for (let a of i) {
          if (a === '*') return !1;
          let c = t.headersList.get(a),
            g = e.headersList.get(a);
          if (c !== g) return !1;
        }
        return !0;
      }
      #o(e, t, r = 1 / 0) {
        let o = null;
        if (e !== void 0)
          if (e instanceof Vr) {
            if (((o = e[qt]), o.method !== 'GET' && !t.ignoreMethod)) return [];
          } else typeof e == 'string' && (o = new Vr(e)[qt]);
        let s = [];
        if (e === void 0) for (let i of this.#A) s.push(i[1]);
        else {
          let i = this.#r(o, t);
          for (let a of i) s.push(a[1]);
        }
        let n = [];
        for (let i of s) {
          let a = K3(i, 'immutable');
          if ((n.push(a.clone()), n.length >= r)) break;
        }
        return Object.freeze(n);
      }
    };
  Object.defineProperties(Ml.prototype, {
    [Symbol.toStringTag]: { value: 'Cache', configurable: !0 },
    match: ls,
    matchAll: ls,
    add: ls,
    addAll: ls,
    put: ls,
    delete: ls,
    keys: ls,
  });
  var gU = [
    {
      key: 'ignoreSearch',
      converter: S.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'ignoreMethod',
      converter: S.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'ignoreVary',
      converter: S.converters.boolean,
      defaultValue: () => !1,
    },
  ];
  S.converters.CacheQueryOptions = S.dictionaryConverter(gU);
  S.converters.MultiCacheQueryOptions = S.dictionaryConverter([
    ...gU,
    { key: 'cacheName', converter: S.converters.DOMString },
  ]);
  S.converters.Response = S.interfaceConverter(j3);
  S.converters['sequence<RequestInfo>'] = S.sequenceConverter(
    S.converters.RequestInfo,
  );
  EU.exports = { Cache: Ml };
});
var CU = B((anA, QU) => {
  'use strict';
  var { kConstruct: Ya } = Nl(),
    { Cache: Ll } = lU(),
    { webidl: Be } = ie(),
    { kEnumerableProperty: Ja } = X(),
    Gl = class A {
      #A = new Map();
      constructor() {
        arguments[0] !== Ya && Be.illegalConstructor(),
          Be.util.markAsUncloneable(this);
      }
      async match(e, t = {}) {
        if (
          (Be.brandCheck(this, A),
          Be.argumentLengthCheck(arguments, 1, 'CacheStorage.match'),
          (e = Be.converters.RequestInfo(e)),
          (t = Be.converters.MultiCacheQueryOptions(t)),
          t.cacheName != null)
        ) {
          if (this.#A.has(t.cacheName)) {
            let r = this.#A.get(t.cacheName);
            return await new Ll(Ya, r).match(e, t);
          }
        } else
          for (let r of this.#A.values()) {
            let s = await new Ll(Ya, r).match(e, t);
            if (s !== void 0) return s;
          }
      }
      async has(e) {
        Be.brandCheck(this, A);
        let t = 'CacheStorage.has';
        return (
          Be.argumentLengthCheck(arguments, 1, t),
          (e = Be.converters.DOMString(e, t, 'cacheName')),
          this.#A.has(e)
        );
      }
      async open(e) {
        Be.brandCheck(this, A);
        let t = 'CacheStorage.open';
        if (
          (Be.argumentLengthCheck(arguments, 1, t),
          (e = Be.converters.DOMString(e, t, 'cacheName')),
          this.#A.has(e))
        ) {
          let o = this.#A.get(e);
          return new Ll(Ya, o);
        }
        let r = [];
        return this.#A.set(e, r), new Ll(Ya, r);
      }
      async delete(e) {
        Be.brandCheck(this, A);
        let t = 'CacheStorage.delete';
        return (
          Be.argumentLengthCheck(arguments, 1, t),
          (e = Be.converters.DOMString(e, t, 'cacheName')),
          this.#A.delete(e)
        );
      }
      async keys() {
        return Be.brandCheck(this, A), [...this.#A.keys()];
      }
    };
  Object.defineProperties(Gl.prototype, {
    [Symbol.toStringTag]: { value: 'CacheStorage', configurable: !0 },
    match: Ja,
    has: Ja,
    open: Ja,
    delete: Ja,
    keys: Ja,
  });
  QU.exports = { CacheStorage: Gl };
});
var uU = B((cnA, BU) => {
  'use strict';
  BU.exports = { maxAttributeValueSize: 1024, maxNameValuePairSize: 4096 };
});
var Md = B((gnA, pU) => {
  'use strict';
  function A6(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if ((t >= 0 && t <= 8) || (t >= 10 && t <= 31) || t === 127) return !0;
    }
    return !1;
  }
  function hU(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (
        t < 33 ||
        t > 126 ||
        t === 34 ||
        t === 40 ||
        t === 41 ||
        t === 60 ||
        t === 62 ||
        t === 64 ||
        t === 44 ||
        t === 59 ||
        t === 58 ||
        t === 92 ||
        t === 47 ||
        t === 91 ||
        t === 93 ||
        t === 63 ||
        t === 61 ||
        t === 123 ||
        t === 125
      )
        throw new Error('Invalid cookie name');
    }
  }
  function IU(A) {
    let e = A.length,
      t = 0;
    if (A[0] === '"') {
      if (e === 1 || A[e - 1] !== '"') throw new Error('Invalid cookie value');
      --e, ++t;
    }
    for (; t < e; ) {
      let r = A.charCodeAt(t++);
      if (r < 33 || r > 126 || r === 34 || r === 44 || r === 59 || r === 92)
        throw new Error('Invalid cookie value');
    }
  }
  function dU(A) {
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (t < 32 || t === 127 || t === 59)
        throw new Error('Invalid cookie path');
    }
  }
  function e6(A) {
    if (A.startsWith('-') || A.endsWith('.') || A.endsWith('-'))
      throw new Error('Invalid cookie domain');
  }
  var t6 = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
    r6 = [
      'Jan',
      'Feb',
      'Mar',
      'Apr',
      'May',
      'Jun',
      'Jul',
      'Aug',
      'Sep',
      'Oct',
      'Nov',
      'Dec',
    ],
    xl = Array(61)
      .fill(0)
      .map((A, e) => e.toString().padStart(2, '0'));
  function fU(A) {
    return (
      typeof A == 'number' && (A = new Date(A)),
      `${t6[A.getUTCDay()]}, ${xl[A.getUTCDate()]} ${r6[A.getUTCMonth()]} ${A.getUTCFullYear()} ${xl[A.getUTCHours()]}:${xl[A.getUTCMinutes()]}:${xl[A.getUTCSeconds()]} GMT`
    );
  }
  function o6(A) {
    if (A < 0) throw new Error('Invalid cookie max-age');
  }
  function s6(A) {
    if (A.name.length === 0) return null;
    hU(A.name), IU(A.value);
    let e = [`${A.name}=${A.value}`];
    A.name.startsWith('__Secure-') && (A.secure = !0),
      A.name.startsWith('__Host-') &&
        ((A.secure = !0), (A.domain = null), (A.path = '/')),
      A.secure && e.push('Secure'),
      A.httpOnly && e.push('HttpOnly'),
      typeof A.maxAge == 'number' &&
        (o6(A.maxAge), e.push(`Max-Age=${A.maxAge}`)),
      A.domain && (e6(A.domain), e.push(`Domain=${A.domain}`)),
      A.path && (dU(A.path), e.push(`Path=${A.path}`)),
      A.expires &&
        A.expires.toString() !== 'Invalid Date' &&
        e.push(`Expires=${fU(A.expires)}`),
      A.sameSite && e.push(`SameSite=${A.sameSite}`);
    for (let t of A.unparsed) {
      if (!t.includes('=')) throw new Error('Invalid unparsed');
      let [r, ...o] = t.split('=');
      e.push(`${r.trim()}=${o.join('=')}`);
    }
    return e.join('; ');
  }
  pU.exports = {
    isCTLExcludingHtab: A6,
    validateCookieName: hU,
    validateCookiePath: dU,
    validateCookieValue: IU,
    toIMFDate: fU,
    stringify: s6,
  };
});
var yU = B((EnA, wU) => {
  'use strict';
  var { maxNameValuePairSize: n6, maxAttributeValueSize: i6 } = uU(),
    { isCTLExcludingHtab: a6 } = Md(),
    { collectASequenceOfCodePointsFast: vl } = ve(),
    c6 = require('node:assert');
  function g6(A) {
    if (a6(A)) return null;
    let e = '',
      t = '',
      r = '',
      o = '';
    if (A.includes(';')) {
      let s = { position: 0 };
      (e = vl(';', A, s)), (t = A.slice(s.position));
    } else e = A;
    if (!e.includes('=')) o = e;
    else {
      let s = { position: 0 };
      (r = vl('=', e, s)), (o = e.slice(s.position + 1));
    }
    return (
      (r = r.trim()),
      (o = o.trim()),
      r.length + o.length > n6 ? null : { name: r, value: o, ...Kn(t) }
    );
  }
  function Kn(A, e = {}) {
    if (A.length === 0) return e;
    c6(A[0] === ';'), (A = A.slice(1));
    let t = '';
    A.includes(';')
      ? ((t = vl(';', A, { position: 0 })), (A = A.slice(t.length)))
      : ((t = A), (A = ''));
    let r = '',
      o = '';
    if (t.includes('=')) {
      let n = { position: 0 };
      (r = vl('=', t, n)), (o = t.slice(n.position + 1));
    } else r = t;
    if (((r = r.trim()), (o = o.trim()), o.length > i6)) return Kn(A, e);
    let s = r.toLowerCase();
    if (s === 'expires') {
      let n = new Date(o);
      e.expires = n;
    } else if (s === 'max-age') {
      let n = o.charCodeAt(0);
      if (((n < 48 || n > 57) && o[0] !== '-') || !/^\d+$/.test(o))
        return Kn(A, e);
      let i = Number(o);
      e.maxAge = i;
    } else if (s === 'domain') {
      let n = o;
      n[0] === '.' && (n = n.slice(1)), (n = n.toLowerCase()), (e.domain = n);
    } else if (s === 'path') {
      let n = '';
      o.length === 0 || o[0] !== '/' ? (n = '/') : (n = o), (e.path = n);
    } else if (s === 'secure') e.secure = !0;
    else if (s === 'httponly') e.httpOnly = !0;
    else if (s === 'samesite') {
      let n = 'Default',
        i = o.toLowerCase();
      i.includes('none') && (n = 'None'),
        i.includes('strict') && (n = 'Strict'),
        i.includes('lax') && (n = 'Lax'),
        (e.sameSite = n);
    } else (e.unparsed ??= []), e.unparsed.push(`${r}=${o}`);
    return Kn(A, e);
  }
  wU.exports = { parseSetCookie: g6, parseUnparsedAttributes: Kn };
});
var kU = B((lnA, mU) => {
  'use strict';
  var { parseSetCookie: E6 } = yU(),
    { stringify: l6 } = Md(),
    { webidl: $ } = ie(),
    { Headers: Ol } = is();
  function Q6(A) {
    $.argumentLengthCheck(arguments, 1, 'getCookies'),
      $.brandCheck(A, Ol, { strict: !1 });
    let e = A.get('cookie'),
      t = {};
    if (!e) return t;
    for (let r of e.split(';')) {
      let [o, ...s] = r.split('=');
      t[o.trim()] = s.join('=');
    }
    return t;
  }
  function C6(A, e, t) {
    $.brandCheck(A, Ol, { strict: !1 });
    let r = 'deleteCookie';
    $.argumentLengthCheck(arguments, 2, r),
      (e = $.converters.DOMString(e, r, 'name')),
      (t = $.converters.DeleteCookieAttributes(t)),
      DU(A, { name: e, value: '', expires: new Date(0), ...t });
  }
  function B6(A) {
    $.argumentLengthCheck(arguments, 1, 'getSetCookies'),
      $.brandCheck(A, Ol, { strict: !1 });
    let e = A.getSetCookie();
    return e ? e.map((t) => E6(t)) : [];
  }
  function DU(A, e) {
    $.argumentLengthCheck(arguments, 2, 'setCookie'),
      $.brandCheck(A, Ol, { strict: !1 }),
      (e = $.converters.Cookie(e));
    let t = l6(e);
    t && A.append('Set-Cookie', t);
  }
  $.converters.DeleteCookieAttributes = $.dictionaryConverter([
    {
      converter: $.nullableConverter($.converters.DOMString),
      key: 'path',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters.DOMString),
      key: 'domain',
      defaultValue: () => null,
    },
  ]);
  $.converters.Cookie = $.dictionaryConverter([
    { converter: $.converters.DOMString, key: 'name' },
    { converter: $.converters.DOMString, key: 'value' },
    {
      converter: $.nullableConverter((A) =>
        typeof A == 'number'
          ? $.converters['unsigned long long'](A)
          : new Date(A),
      ),
      key: 'expires',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters['long long']),
      key: 'maxAge',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters.DOMString),
      key: 'domain',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters.DOMString),
      key: 'path',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters.boolean),
      key: 'secure',
      defaultValue: () => null,
    },
    {
      converter: $.nullableConverter($.converters.boolean),
      key: 'httpOnly',
      defaultValue: () => null,
    },
    {
      converter: $.converters.USVString,
      key: 'sameSite',
      allowedValues: ['Strict', 'Lax', 'None'],
    },
    {
      converter: $.sequenceConverter($.converters.DOMString),
      key: 'unparsed',
      defaultValue: () => new Array(0),
    },
  ]);
  mU.exports = {
    getCookies: Q6,
    deleteCookie: C6,
    getSetCookies: B6,
    setCookie: DU,
  };
});
var zn = B((QnA, bU) => {
  'use strict';
  var { webidl: F } = ie(),
    { kEnumerableProperty: He } = X(),
    { kConstruct: RU } = FA(),
    { MessagePort: u6 } = require('node:worker_threads'),
    Xn = class A extends Event {
      #A;
      constructor(e, t = {}) {
        if (e === RU) {
          super(arguments[1], arguments[2]), F.util.markAsUncloneable(this);
          return;
        }
        let r = 'MessageEvent constructor';
        F.argumentLengthCheck(arguments, 1, r),
          (e = F.converters.DOMString(e, r, 'type')),
          (t = F.converters.MessageEventInit(t, r, 'eventInitDict')),
          super(e, t),
          (this.#A = t),
          F.util.markAsUncloneable(this);
      }
      get data() {
        return F.brandCheck(this, A), this.#A.data;
      }
      get origin() {
        return F.brandCheck(this, A), this.#A.origin;
      }
      get lastEventId() {
        return F.brandCheck(this, A), this.#A.lastEventId;
      }
      get source() {
        return F.brandCheck(this, A), this.#A.source;
      }
      get ports() {
        return (
          F.brandCheck(this, A),
          Object.isFrozen(this.#A.ports) || Object.freeze(this.#A.ports),
          this.#A.ports
        );
      }
      initMessageEvent(
        e,
        t = !1,
        r = !1,
        o = null,
        s = '',
        n = '',
        i = null,
        a = [],
      ) {
        return (
          F.brandCheck(this, A),
          F.argumentLengthCheck(arguments, 1, 'MessageEvent.initMessageEvent'),
          new A(e, {
            bubbles: t,
            cancelable: r,
            data: o,
            origin: s,
            lastEventId: n,
            source: i,
            ports: a,
          })
        );
      }
      static createFastMessageEvent(e, t) {
        let r = new A(RU, e, t);
        return (
          (r.#A = t),
          (r.#A.data ??= null),
          (r.#A.origin ??= ''),
          (r.#A.lastEventId ??= ''),
          (r.#A.source ??= null),
          (r.#A.ports ??= []),
          r
        );
      }
    },
    { createFastMessageEvent: h6 } = Xn;
  delete Xn.createFastMessageEvent;
  var Yl = class A extends Event {
      #A;
      constructor(e, t = {}) {
        let r = 'CloseEvent constructor';
        F.argumentLengthCheck(arguments, 1, r),
          (e = F.converters.DOMString(e, r, 'type')),
          (t = F.converters.CloseEventInit(t)),
          super(e, t),
          (this.#A = t),
          F.util.markAsUncloneable(this);
      }
      get wasClean() {
        return F.brandCheck(this, A), this.#A.wasClean;
      }
      get code() {
        return F.brandCheck(this, A), this.#A.code;
      }
      get reason() {
        return F.brandCheck(this, A), this.#A.reason;
      }
    },
    Jl = class A extends Event {
      #A;
      constructor(e, t) {
        let r = 'ErrorEvent constructor';
        F.argumentLengthCheck(arguments, 1, r),
          super(e, t),
          F.util.markAsUncloneable(this),
          (e = F.converters.DOMString(e, r, 'type')),
          (t = F.converters.ErrorEventInit(t ?? {})),
          (this.#A = t);
      }
      get message() {
        return F.brandCheck(this, A), this.#A.message;
      }
      get filename() {
        return F.brandCheck(this, A), this.#A.filename;
      }
      get lineno() {
        return F.brandCheck(this, A), this.#A.lineno;
      }
      get colno() {
        return F.brandCheck(this, A), this.#A.colno;
      }
      get error() {
        return F.brandCheck(this, A), this.#A.error;
      }
    };
  Object.defineProperties(Xn.prototype, {
    [Symbol.toStringTag]: { value: 'MessageEvent', configurable: !0 },
    data: He,
    origin: He,
    lastEventId: He,
    source: He,
    ports: He,
    initMessageEvent: He,
  });
  Object.defineProperties(Yl.prototype, {
    [Symbol.toStringTag]: { value: 'CloseEvent', configurable: !0 },
    reason: He,
    code: He,
    wasClean: He,
  });
  Object.defineProperties(Jl.prototype, {
    [Symbol.toStringTag]: { value: 'ErrorEvent', configurable: !0 },
    message: He,
    filename: He,
    lineno: He,
    colno: He,
    error: He,
  });
  F.converters.MessagePort = F.interfaceConverter(u6);
  F.converters['sequence<MessagePort>'] = F.sequenceConverter(
    F.converters.MessagePort,
  );
  var Ld = [
    { key: 'bubbles', converter: F.converters.boolean, defaultValue: () => !1 },
    {
      key: 'cancelable',
      converter: F.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'composed',
      converter: F.converters.boolean,
      defaultValue: () => !1,
    },
  ];
  F.converters.MessageEventInit = F.dictionaryConverter([
    ...Ld,
    { key: 'data', converter: F.converters.any, defaultValue: () => null },
    {
      key: 'origin',
      converter: F.converters.USVString,
      defaultValue: () => '',
    },
    {
      key: 'lastEventId',
      converter: F.converters.DOMString,
      defaultValue: () => '',
    },
    {
      key: 'source',
      converter: F.nullableConverter(F.converters.MessagePort),
      defaultValue: () => null,
    },
    {
      key: 'ports',
      converter: F.converters['sequence<MessagePort>'],
      defaultValue: () => new Array(0),
    },
  ]);
  F.converters.CloseEventInit = F.dictionaryConverter([
    ...Ld,
    {
      key: 'wasClean',
      converter: F.converters.boolean,
      defaultValue: () => !1,
    },
    {
      key: 'code',
      converter: F.converters['unsigned short'],
      defaultValue: () => 0,
    },
    {
      key: 'reason',
      converter: F.converters.USVString,
      defaultValue: () => '',
    },
  ]);
  F.converters.ErrorEventInit = F.dictionaryConverter([
    ...Ld,
    {
      key: 'message',
      converter: F.converters.DOMString,
      defaultValue: () => '',
    },
    {
      key: 'filename',
      converter: F.converters.USVString,
      defaultValue: () => '',
    },
    {
      key: 'lineno',
      converter: F.converters['unsigned long'],
      defaultValue: () => 0,
    },
    {
      key: 'colno',
      converter: F.converters['unsigned long'],
      defaultValue: () => 0,
    },
    { key: 'error', converter: F.converters.any },
  ]);
  bU.exports = {
    MessageEvent: Xn,
    CloseEvent: Yl,
    ErrorEvent: Jl,
    createFastMessageEvent: h6,
  };
});
var Qs = B((CnA, FU) => {
  'use strict';
  var I6 = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',
    d6 = { enumerable: !0, writable: !1, configurable: !1 },
    f6 = { CONNECTING: 0, OPEN: 1, CLOSING: 2, CLOSED: 3 },
    p6 = { NOT_SENT: 0, PROCESSING: 1, SENT: 2 },
    w6 = { CONTINUATION: 0, TEXT: 1, BINARY: 2, CLOSE: 8, PING: 9, PONG: 10 },
    y6 = 2 ** 16 - 1,
    D6 = { INFO: 0, PAYLOADLENGTH_16: 2, PAYLOADLENGTH_64: 3, READ_DATA: 4 },
    m6 = Buffer.allocUnsafe(0),
    k6 = { string: 1, typedArray: 2, arrayBuffer: 3, blob: 4 };
  FU.exports = {
    uid: I6,
    sentCloseFrameState: p6,
    staticPropertyDescriptors: d6,
    states: f6,
    opcodes: w6,
    maxUnsigned16Bit: y6,
    parserStates: D6,
    emptyBuffer: m6,
    sendHints: k6,
  };
});
var Ha = B((BnA, SU) => {
  'use strict';
  SU.exports = {
    kWebSocketURL: Symbol('url'),
    kReadyState: Symbol('ready state'),
    kController: Symbol('controller'),
    kResponse: Symbol('response'),
    kBinaryType: Symbol('binary type'),
    kSentClose: Symbol('sent close'),
    kReceivedClose: Symbol('received close'),
    kByteParser: Symbol('byte parser'),
  };
});
var Pa = B((unA, OU) => {
  'use strict';
  var {
      kReadyState: Va,
      kController: R6,
      kResponse: b6,
      kBinaryType: F6,
      kWebSocketURL: S6,
    } = Ha(),
    { states: qa, opcodes: wo } = Qs(),
    { ErrorEvent: T6, createFastMessageEvent: N6 } = zn(),
    { isUtf8: U6 } = require('node:buffer'),
    { collectASequenceOfCodePointsFast: M6, removeHTTPWhitespace: TU } = ve();
  function L6(A) {
    return A[Va] === qa.CONNECTING;
  }
  function G6(A) {
    return A[Va] === qa.OPEN;
  }
  function x6(A) {
    return A[Va] === qa.CLOSING;
  }
  function v6(A) {
    return A[Va] === qa.CLOSED;
  }
  function Gd(A, e, t = (o, s) => new Event(o, s), r = {}) {
    let o = t(A, r);
    e.dispatchEvent(o);
  }
  function O6(A, e, t) {
    if (A[Va] !== qa.OPEN) return;
    let r;
    if (e === wo.TEXT)
      try {
        r = vU(t);
      } catch {
        UU(A, 'Received invalid UTF-8 in text frame.');
        return;
      }
    else
      e === wo.BINARY && (A[F6] === 'blob' ? (r = new Blob([t])) : (r = Y6(t)));
    Gd('message', A, N6, { origin: A[S6].origin, data: r });
  }
  function Y6(A) {
    return A.byteLength === A.buffer.byteLength
      ? A.buffer
      : A.buffer.slice(A.byteOffset, A.byteOffset + A.byteLength);
  }
  function J6(A) {
    if (A.length === 0) return !1;
    for (let e = 0; e < A.length; ++e) {
      let t = A.charCodeAt(e);
      if (
        t < 33 ||
        t > 126 ||
        t === 34 ||
        t === 40 ||
        t === 41 ||
        t === 44 ||
        t === 47 ||
        t === 58 ||
        t === 59 ||
        t === 60 ||
        t === 61 ||
        t === 62 ||
        t === 63 ||
        t === 64 ||
        t === 91 ||
        t === 92 ||
        t === 93 ||
        t === 123 ||
        t === 125
      )
        return !1;
    }
    return !0;
  }
  function H6(A) {
    return A >= 1e3 && A < 1015
      ? A !== 1004 && A !== 1005 && A !== 1006
      : A >= 3e3 && A <= 4999;
  }
  function UU(A, e) {
    let { [R6]: t, [b6]: r } = A;
    t.abort(),
      r?.socket && !r.socket.destroyed && r.socket.destroy(),
      e &&
        Gd('error', A, (o, s) => new T6(o, s), {
          error: new Error(e),
          message: e,
        });
  }
  function MU(A) {
    return A === wo.CLOSE || A === wo.PING || A === wo.PONG;
  }
  function LU(A) {
    return A === wo.CONTINUATION;
  }
  function GU(A) {
    return A === wo.TEXT || A === wo.BINARY;
  }
  function V6(A) {
    return GU(A) || LU(A) || MU(A);
  }
  function q6(A) {
    let e = { position: 0 },
      t = new Map();
    for (; e.position < A.length; ) {
      let r = M6(';', A, e),
        [o, s = ''] = r.split('=');
      t.set(TU(o, !0, !1), TU(s, !1, !0)), e.position++;
    }
    return t;
  }
  function P6(A) {
    for (let e = 0; e < A.length; e++) {
      let t = A.charCodeAt(e);
      if (t < 48 || t > 57) return !1;
    }
    return !0;
  }
  var xU = typeof process.versions.icu == 'string',
    NU = xU ? new TextDecoder('utf-8', { fatal: !0 }) : void 0,
    vU = xU
      ? NU.decode.bind(NU)
      : function (A) {
          if (U6(A)) return A.toString('utf-8');
          throw new TypeError('Invalid utf-8 received.');
        };
  OU.exports = {
    isConnecting: L6,
    isEstablished: G6,
    isClosing: x6,
    isClosed: v6,
    fireEvent: Gd,
    isValidSubprotocol: J6,
    isValidStatusCode: H6,
    failWebsocketConnection: UU,
    websocketMessageReceived: O6,
    utf8Decode: vU,
    isControlFrame: MU,
    isContinuationFrame: LU,
    isTextBinaryFrame: GU,
    isValidOpcode: V6,
    parseExtensions: q6,
    isValidClientWindowBits: P6,
  };
});
var Vl = B((hnA, YU) => {
  'use strict';
  var { maxUnsigned16Bit: W6 } = Qs(),
    Hl = 16386,
    xd,
    Wa = null,
    $n = Hl;
  try {
    xd = require('node:crypto');
  } catch {
    xd = {
      randomFillSync: function (e, t, r) {
        for (let o = 0; o < e.length; ++o) e[o] = (Math.random() * 255) | 0;
        return e;
      },
    };
  }
  function _6() {
    return (
      $n === Hl &&
        (($n = 0), xd.randomFillSync((Wa ??= Buffer.allocUnsafe(Hl)), 0, Hl)),
      [Wa[$n++], Wa[$n++], Wa[$n++], Wa[$n++]]
    );
  }
  var vd = class {
    constructor(e) {
      this.frameData = e;
    }
    createFrame(e) {
      let t = this.frameData,
        r = _6(),
        o = t?.byteLength ?? 0,
        s = o,
        n = 6;
      o > W6 ? ((n += 8), (s = 127)) : o > 125 && ((n += 2), (s = 126));
      let i = Buffer.allocUnsafe(o + n);
      (i[0] = i[1] = 0), (i[0] |= 128), (i[0] = (i[0] & 240) + e);
      (i[n - 4] = r[0]),
        (i[n - 3] = r[1]),
        (i[n - 2] = r[2]),
        (i[n - 1] = r[3]),
        (i[1] = s),
        s === 126
          ? i.writeUInt16BE(o, 2)
          : s === 127 && ((i[2] = i[3] = 0), i.writeUIntBE(o, 4, 6)),
        (i[1] |= 128);
      for (let a = 0; a < o; ++a) i[n + a] = t[a] ^ r[a & 3];
      return i;
    }
  };
  YU.exports = { WebsocketFrameSend: vd };
});
var Yd = B((InA, _U) => {
  'use strict';
  var {
      uid: j6,
      states: _a,
      sentCloseFrameState: ql,
      emptyBuffer: Z6,
      opcodes: K6,
    } = Qs(),
    {
      kReadyState: ja,
      kSentClose: Pl,
      kByteParser: HU,
      kReceivedClose: JU,
      kResponse: VU,
    } = Ha(),
    {
      fireEvent: X6,
      failWebsocketConnection: yo,
      isClosing: z6,
      isClosed: $6,
      isEstablished: A$,
      parseExtensions: e$,
    } = Pa(),
    { channels: Ai } = Bn(),
    { CloseEvent: t$ } = zn(),
    { makeRequest: r$ } = Wn(),
    { fetching: o$ } = va(),
    { Headers: s$, getHeadersList: n$ } = is(),
    { getDecodeSplit: i$ } = tt(),
    { WebsocketFrameSend: a$ } = Vl(),
    Od;
  try {
    Od = require('node:crypto');
  } catch {}
  function c$(A, e, t, r, o, s) {
    let n = A;
    n.protocol = A.protocol === 'ws:' ? 'http:' : 'https:';
    let i = r$({
      urlList: [n],
      client: t,
      serviceWorkers: 'none',
      referrer: 'no-referrer',
      mode: 'websocket',
      credentials: 'include',
      cache: 'no-store',
      redirect: 'error',
    });
    if (s.headers) {
      let E = n$(new s$(s.headers));
      i.headersList = E;
    }
    let a = Od.randomBytes(16).toString('base64');
    i.headersList.append('sec-websocket-key', a),
      i.headersList.append('sec-websocket-version', '13');
    for (let E of e) i.headersList.append('sec-websocket-protocol', E);
    return (
      i.headersList.append(
        'sec-websocket-extensions',
        'permessage-deflate; client_max_window_bits',
      ),
      o$({
        request: i,
        useParallelQueue: !0,
        dispatcher: s.dispatcher,
        processResponse(E) {
          if (E.type === 'error' || E.status !== 101) {
            yo(r, 'Received network error or non-101 status code.');
            return;
          }
          if (e.length !== 0 && !E.headersList.get('Sec-WebSocket-Protocol')) {
            yo(r, 'Server did not respond with sent protocols.');
            return;
          }
          if (E.headersList.get('Upgrade')?.toLowerCase() !== 'websocket') {
            yo(r, 'Server did not set Upgrade header to "websocket".');
            return;
          }
          if (E.headersList.get('Connection')?.toLowerCase() !== 'upgrade') {
            yo(r, 'Server did not set Connection header to "upgrade".');
            return;
          }
          let l = E.headersList.get('Sec-WebSocket-Accept'),
            C = Od.createHash('sha1')
              .update(a + j6)
              .digest('base64');
          if (l !== C) {
            yo(r, 'Incorrect hash received in Sec-WebSocket-Accept header.');
            return;
          }
          let Q = E.headersList.get('Sec-WebSocket-Extensions'),
            h;
          if (Q !== null && ((h = e$(Q)), !h.has('permessage-deflate'))) {
            yo(r, 'Sec-WebSocket-Extensions header does not match.');
            return;
          }
          let I = E.headersList.get('Sec-WebSocket-Protocol');
          if (
            I !== null &&
            !i$('sec-websocket-protocol', i.headersList).includes(I)
          ) {
            yo(r, 'Protocol was not set in the opening handshake.');
            return;
          }
          E.socket.on('data', qU),
            E.socket.on('close', PU),
            E.socket.on('error', WU),
            Ai.open.hasSubscribers &&
              Ai.open.publish({
                address: E.socket.address(),
                protocol: I,
                extensions: Q,
              }),
            o(E, h);
        },
      })
    );
  }
  function g$(A, e, t, r) {
    if (!(z6(A) || $6(A)))
      if (!A$(A))
        yo(A, 'Connection was closed before it was established.'),
          (A[ja] = _a.CLOSING);
      else if (A[Pl] === ql.NOT_SENT) {
        A[Pl] = ql.PROCESSING;
        let o = new a$();
        e !== void 0 && t === void 0
          ? ((o.frameData = Buffer.allocUnsafe(2)),
            o.frameData.writeUInt16BE(e, 0))
          : e !== void 0 && t !== void 0
            ? ((o.frameData = Buffer.allocUnsafe(2 + r)),
              o.frameData.writeUInt16BE(e, 0),
              o.frameData.write(t, 2, 'utf-8'))
            : (o.frameData = Z6),
          A[VU].socket.write(o.createFrame(K6.CLOSE)),
          (A[Pl] = ql.SENT),
          (A[ja] = _a.CLOSING);
      } else A[ja] = _a.CLOSING;
  }
  function qU(A) {
    this.ws[HU].write(A) || this.pause();
  }
  function PU() {
    let { ws: A } = this,
      { [VU]: e } = A;
    e.socket.off('data', qU),
      e.socket.off('close', PU),
      e.socket.off('error', WU);
    let t = A[Pl] === ql.SENT && A[JU],
      r = 1005,
      o = '',
      s = A[HU].closingInfo;
    s && !s.error
      ? ((r = s.code ?? 1005), (o = s.reason))
      : A[JU] || (r = 1006),
      (A[ja] = _a.CLOSED),
      X6('close', A, (n, i) => new t$(n, i), {
        wasClean: t,
        code: r,
        reason: o,
      }),
      Ai.close.hasSubscribers &&
        Ai.close.publish({ websocket: A, code: r, reason: o });
  }
  function WU(A) {
    let { ws: e } = this;
    (e[ja] = _a.CLOSING),
      Ai.socketError.hasSubscribers && Ai.socketError.publish(A),
      this.destroy();
  }
  _U.exports = {
    establishWebSocketConnection: c$,
    closeWebSocketConnection: g$,
  };
});
var ZU = B((dnA, jU) => {
  'use strict';
  var { createInflateRaw: E$, Z_DEFAULT_WINDOWBITS: l$ } = require('node:zlib'),
    { isValidClientWindowBits: Q$ } = Pa(),
    C$ = Buffer.from([0, 0, 255, 255]),
    Wl = Symbol('kBuffer'),
    _l = Symbol('kLength'),
    Jd = class {
      #A;
      #e = {};
      constructor(e) {
        (this.#e.serverNoContextTakeover = e.has('server_no_context_takeover')),
          (this.#e.serverMaxWindowBits = e.get('server_max_window_bits'));
      }
      decompress(e, t, r) {
        if (!this.#A) {
          let o = l$;
          if (this.#e.serverMaxWindowBits) {
            if (!Q$(this.#e.serverMaxWindowBits)) {
              r(new Error('Invalid server_max_window_bits'));
              return;
            }
            o = Number.parseInt(this.#e.serverMaxWindowBits);
          }
          (this.#A = E$({ windowBits: o })),
            (this.#A[Wl] = []),
            (this.#A[_l] = 0),
            this.#A.on('data', (s) => {
              this.#A[Wl].push(s), (this.#A[_l] += s.length);
            }),
            this.#A.on('error', (s) => {
              (this.#A = null), r(s);
            });
        }
        this.#A.write(e),
          t && this.#A.write(C$),
          this.#A.flush(() => {
            let o = Buffer.concat(this.#A[Wl], this.#A[_l]);
            (this.#A[Wl].length = 0), (this.#A[_l] = 0), r(null, o);
          });
      }
    };
  jU.exports = { PerMessageDeflate: Jd };
});
var nM = B((fnA, sM) => {
  'use strict';
  var { Writable: B$ } = require('node:stream'),
    u$ = require('node:assert'),
    {
      parserStates: Ve,
      opcodes: ei,
      states: h$,
      emptyBuffer: KU,
      sentCloseFrameState: XU,
    } = Qs(),
    {
      kReadyState: I$,
      kSentClose: zU,
      kResponse: $U,
      kReceivedClose: AM,
    } = Ha(),
    { channels: jl } = Bn(),
    {
      isValidStatusCode: d$,
      isValidOpcode: f$,
      failWebsocketConnection: kt,
      websocketMessageReceived: eM,
      utf8Decode: p$,
      isControlFrame: tM,
      isTextBinaryFrame: Hd,
      isContinuationFrame: w$,
    } = Pa(),
    { WebsocketFrameSend: rM } = Vl(),
    { closeWebSocketConnection: oM } = Yd(),
    { PerMessageDeflate: y$ } = ZU(),
    Vd = class extends B$ {
      #A = [];
      #e = 0;
      #r = !1;
      #t = Ve.INFO;
      #o = {};
      #s = [];
      #n;
      constructor(e, t) {
        super(),
          (this.ws = e),
          (this.#n = t ?? new Map()),
          this.#n.has('permessage-deflate') &&
            this.#n.set('permessage-deflate', new y$(t));
      }
      _write(e, t, r) {
        this.#A.push(e), (this.#e += e.length), (this.#r = !0), this.run(r);
      }
      run(e) {
        for (; this.#r; )
          if (this.#t === Ve.INFO) {
            if (this.#e < 2) return e();
            let t = this.consume(2),
              r = (t[0] & 128) !== 0,
              o = t[0] & 15,
              s = (t[1] & 128) === 128,
              n = !r && o !== ei.CONTINUATION,
              i = t[1] & 127,
              a = t[0] & 64,
              c = t[0] & 32,
              g = t[0] & 16;
            if (!f$(o)) return kt(this.ws, 'Invalid opcode received'), e();
            if (s) return kt(this.ws, 'Frame cannot be masked'), e();
            if (a !== 0 && !this.#n.has('permessage-deflate')) {
              kt(this.ws, 'Expected RSV1 to be clear.');
              return;
            }
            if (c !== 0 || g !== 0) {
              kt(this.ws, 'RSV1, RSV2, RSV3 must be clear');
              return;
            }
            if (n && !Hd(o)) {
              kt(this.ws, 'Invalid frame type was fragmented.');
              return;
            }
            if (Hd(o) && this.#s.length > 0) {
              kt(this.ws, 'Expected continuation frame');
              return;
            }
            if (this.#o.fragmented && n) {
              kt(this.ws, 'Fragmented frame exceeded 125 bytes.');
              return;
            }
            if ((i > 125 || n) && tM(o)) {
              kt(this.ws, 'Control frame either too large or fragmented');
              return;
            }
            if (w$(o) && this.#s.length === 0 && !this.#o.compressed) {
              kt(this.ws, 'Unexpected continuation frame');
              return;
            }
            i <= 125
              ? ((this.#o.payloadLength = i), (this.#t = Ve.READ_DATA))
              : i === 126
                ? (this.#t = Ve.PAYLOADLENGTH_16)
                : i === 127 && (this.#t = Ve.PAYLOADLENGTH_64),
              Hd(o) &&
                ((this.#o.binaryType = o), (this.#o.compressed = a !== 0)),
              (this.#o.opcode = o),
              (this.#o.masked = s),
              (this.#o.fin = r),
              (this.#o.fragmented = n);
          } else if (this.#t === Ve.PAYLOADLENGTH_16) {
            if (this.#e < 2) return e();
            let t = this.consume(2);
            (this.#o.payloadLength = t.readUInt16BE(0)),
              (this.#t = Ve.READ_DATA);
          } else if (this.#t === Ve.PAYLOADLENGTH_64) {
            if (this.#e < 8) return e();
            let t = this.consume(8),
              r = t.readUInt32BE(0);
            if (r > 2 ** 31 - 1) {
              kt(this.ws, 'Received payload length > 2^31 bytes.');
              return;
            }
            let o = t.readUInt32BE(4);
            (this.#o.payloadLength = (r << 8) + o), (this.#t = Ve.READ_DATA);
          } else if (this.#t === Ve.READ_DATA) {
            if (this.#e < this.#o.payloadLength) return e();
            let t = this.consume(this.#o.payloadLength);
            if (tM(this.#o.opcode))
              (this.#r = this.parseControlFrame(t)), (this.#t = Ve.INFO);
            else if (this.#o.compressed) {
              this.#n
                .get('permessage-deflate')
                .decompress(t, this.#o.fin, (r, o) => {
                  if (r) {
                    oM(this.ws, 1007, r.message, r.message.length);
                    return;
                  }
                  if ((this.#s.push(o), !this.#o.fin)) {
                    (this.#t = Ve.INFO), (this.#r = !0), this.run(e);
                    return;
                  }
                  eM(this.ws, this.#o.binaryType, Buffer.concat(this.#s)),
                    (this.#r = !0),
                    (this.#t = Ve.INFO),
                    (this.#s.length = 0),
                    this.run(e);
                }),
                (this.#r = !1);
              break;
            } else {
              if ((this.#s.push(t), !this.#o.fragmented && this.#o.fin)) {
                let r = Buffer.concat(this.#s);
                eM(this.ws, this.#o.binaryType, r), (this.#s.length = 0);
              }
              this.#t = Ve.INFO;
            }
          }
      }
      consume(e) {
        if (e > this.#e)
          throw new Error('Called consume() before buffers satiated.');
        if (e === 0) return KU;
        if (this.#A[0].length === e)
          return (this.#e -= this.#A[0].length), this.#A.shift();
        let t = Buffer.allocUnsafe(e),
          r = 0;
        for (; r !== e; ) {
          let o = this.#A[0],
            { length: s } = o;
          if (s + r === e) {
            t.set(this.#A.shift(), r);
            break;
          } else if (s + r > e) {
            t.set(o.subarray(0, e - r), r), (this.#A[0] = o.subarray(e - r));
            break;
          } else t.set(this.#A.shift(), r), (r += o.length);
        }
        return (this.#e -= e), t;
      }
      parseCloseBody(e) {
        u$(e.length !== 1);
        let t;
        if ((e.length >= 2 && (t = e.readUInt16BE(0)), t !== void 0 && !d$(t)))
          return { code: 1002, reason: 'Invalid status code', error: !0 };
        let r = e.subarray(2);
        r[0] === 239 && r[1] === 187 && r[2] === 191 && (r = r.subarray(3));
        try {
          r = p$(r);
        } catch {
          return { code: 1007, reason: 'Invalid UTF-8', error: !0 };
        }
        return { code: t, reason: r, error: !1 };
      }
      parseControlFrame(e) {
        let { opcode: t, payloadLength: r } = this.#o;
        if (t === ei.CLOSE) {
          if (r === 1)
            return kt(this.ws, 'Received close frame with a 1-byte body.'), !1;
          if (
            ((this.#o.closeInfo = this.parseCloseBody(e)),
            this.#o.closeInfo.error)
          ) {
            let { code: o, reason: s } = this.#o.closeInfo;
            return oM(this.ws, o, s, s.length), kt(this.ws, s), !1;
          }
          if (this.ws[zU] !== XU.SENT) {
            let o = KU;
            this.#o.closeInfo.code &&
              ((o = Buffer.allocUnsafe(2)),
              o.writeUInt16BE(this.#o.closeInfo.code, 0));
            let s = new rM(o);
            this.ws[$U].socket.write(s.createFrame(ei.CLOSE), (n) => {
              n || (this.ws[zU] = XU.SENT);
            });
          }
          return (this.ws[I$] = h$.CLOSING), (this.ws[AM] = !0), !1;
        } else if (t === ei.PING) {
          if (!this.ws[AM]) {
            let o = new rM(e);
            this.ws[$U].socket.write(o.createFrame(ei.PONG)),
              jl.ping.hasSubscribers && jl.ping.publish({ payload: e });
          }
        } else
          t === ei.PONG &&
            jl.pong.hasSubscribers &&
            jl.pong.publish({ payload: e });
        return !0;
      }
      get closingInfo() {
        return this.#o.closeInfo;
      }
    };
  sM.exports = { ByteParser: Vd };
});
var EM = B((pnA, gM) => {
  'use strict';
  var { WebsocketFrameSend: D$ } = Vl(),
    { opcodes: iM, sendHints: ti } = Qs(),
    m$ = tI(),
    aM = Buffer[Symbol.species],
    qd = class {
      #A = new m$();
      #e = !1;
      #r;
      constructor(e) {
        this.#r = e;
      }
      add(e, t, r) {
        if (r !== ti.blob) {
          let s = cM(e, r);
          if (!this.#e) this.#r.write(s, t);
          else {
            let n = { promise: null, callback: t, frame: s };
            this.#A.push(n);
          }
          return;
        }
        let o = {
          promise: e.arrayBuffer().then((s) => {
            (o.promise = null), (o.frame = cM(s, r));
          }),
          callback: t,
          frame: null,
        };
        this.#A.push(o), this.#e || this.#t();
      }
      async #t() {
        this.#e = !0;
        let e = this.#A;
        for (; !e.isEmpty(); ) {
          let t = e.shift();
          t.promise !== null && (await t.promise),
            this.#r.write(t.frame, t.callback),
            (t.callback = t.frame = null);
        }
        this.#e = !1;
      }
    };
  function cM(A, e) {
    return new D$(k$(A, e)).createFrame(e === ti.string ? iM.TEXT : iM.BINARY);
  }
  function k$(A, e) {
    switch (e) {
      case ti.string:
        return Buffer.from(A);
      case ti.arrayBuffer:
      case ti.blob:
        return new aM(A);
      case ti.typedArray:
        return new aM(A.buffer, A.byteOffset, A.byteLength);
    }
  }
  gM.exports = { SendQueue: qd };
});
var fM = B((wnA, dM) => {
  'use strict';
  var { webidl: Y } = ie(),
    { URLSerializer: R$ } = ve(),
    { environmentSettingsObject: lM } = tt(),
    {
      staticPropertyDescriptors: Do,
      states: Za,
      sentCloseFrameState: b$,
      sendHints: Zl,
    } = Qs(),
    {
      kWebSocketURL: QM,
      kReadyState: Pd,
      kController: F$,
      kBinaryType: Kl,
      kResponse: CM,
      kSentClose: S$,
      kByteParser: T$,
    } = Ha(),
    {
      isConnecting: N$,
      isEstablished: U$,
      isClosing: M$,
      isValidSubprotocol: L$,
      fireEvent: BM,
    } = Pa(),
    { establishWebSocketConnection: G$, closeWebSocketConnection: uM } = Yd(),
    { ByteParser: x$ } = nM(),
    { kEnumerableProperty: Rt, isBlobLike: hM } = X(),
    { getGlobalDispatcher: v$ } = El(),
    { types: IM } = require('node:util'),
    { ErrorEvent: O$, CloseEvent: Y$ } = zn(),
    { SendQueue: J$ } = EM(),
    at = class A extends EventTarget {
      #A = { open: null, error: null, close: null, message: null };
      #e = 0;
      #r = '';
      #t = '';
      #o;
      constructor(e, t = []) {
        super(), Y.util.markAsUncloneable(this);
        let r = 'WebSocket constructor';
        Y.argumentLengthCheck(arguments, 1, r);
        let o = Y.converters[
          'DOMString or sequence<DOMString> or WebSocketInit'
        ](t, r, 'options');
        (e = Y.converters.USVString(e, r, 'url')), (t = o.protocols);
        let s = lM.settingsObject.baseUrl,
          n;
        try {
          n = new URL(e, s);
        } catch (a) {
          throw new DOMException(a, 'SyntaxError');
        }
        if (
          (n.protocol === 'http:'
            ? (n.protocol = 'ws:')
            : n.protocol === 'https:' && (n.protocol = 'wss:'),
          n.protocol !== 'ws:' && n.protocol !== 'wss:')
        )
          throw new DOMException(
            `Expected a ws: or wss: protocol, got ${n.protocol}`,
            'SyntaxError',
          );
        if (n.hash || n.href.endsWith('#'))
          throw new DOMException('Got fragment', 'SyntaxError');
        if (
          (typeof t == 'string' && (t = [t]),
          t.length !== new Set(t.map((a) => a.toLowerCase())).size)
        )
          throw new DOMException(
            'Invalid Sec-WebSocket-Protocol value',
            'SyntaxError',
          );
        if (t.length > 0 && !t.every((a) => L$(a)))
          throw new DOMException(
            'Invalid Sec-WebSocket-Protocol value',
            'SyntaxError',
          );
        this[QM] = new URL(n.href);
        let i = lM.settingsObject;
        (this[F$] = G$(n, t, i, this, (a, c) => this.#s(a, c), o)),
          (this[Pd] = A.CONNECTING),
          (this[S$] = b$.NOT_SENT),
          (this[Kl] = 'blob');
      }
      close(e = void 0, t = void 0) {
        Y.brandCheck(this, A);
        let r = 'WebSocket.close';
        if (
          (e !== void 0 &&
            (e = Y.converters['unsigned short'](e, r, 'code', { clamp: !0 })),
          t !== void 0 && (t = Y.converters.USVString(t, r, 'reason')),
          e !== void 0 && e !== 1e3 && (e < 3e3 || e > 4999))
        )
          throw new DOMException('invalid code', 'InvalidAccessError');
        let o = 0;
        if (t !== void 0 && ((o = Buffer.byteLength(t)), o > 123))
          throw new DOMException(
            `Reason must be less than 123 bytes; received ${o}`,
            'SyntaxError',
          );
        uM(this, e, t, o);
      }
      send(e) {
        Y.brandCheck(this, A);
        let t = 'WebSocket.send';
        if (
          (Y.argumentLengthCheck(arguments, 1, t),
          (e = Y.converters.WebSocketSendData(e, t, 'data')),
          N$(this))
        )
          throw new DOMException('Sent before connected.', 'InvalidStateError');
        if (!(!U$(this) || M$(this)))
          if (typeof e == 'string') {
            let r = Buffer.byteLength(e);
            (this.#e += r),
              this.#o.add(
                e,
                () => {
                  this.#e -= r;
                },
                Zl.string,
              );
          } else
            IM.isArrayBuffer(e)
              ? ((this.#e += e.byteLength),
                this.#o.add(
                  e,
                  () => {
                    this.#e -= e.byteLength;
                  },
                  Zl.arrayBuffer,
                ))
              : ArrayBuffer.isView(e)
                ? ((this.#e += e.byteLength),
                  this.#o.add(
                    e,
                    () => {
                      this.#e -= e.byteLength;
                    },
                    Zl.typedArray,
                  ))
                : hM(e) &&
                  ((this.#e += e.size),
                  this.#o.add(
                    e,
                    () => {
                      this.#e -= e.size;
                    },
                    Zl.blob,
                  ));
      }
      get readyState() {
        return Y.brandCheck(this, A), this[Pd];
      }
      get bufferedAmount() {
        return Y.brandCheck(this, A), this.#e;
      }
      get url() {
        return Y.brandCheck(this, A), R$(this[QM]);
      }
      get extensions() {
        return Y.brandCheck(this, A), this.#t;
      }
      get protocol() {
        return Y.brandCheck(this, A), this.#r;
      }
      get onopen() {
        return Y.brandCheck(this, A), this.#A.open;
      }
      set onopen(e) {
        Y.brandCheck(this, A),
          this.#A.open && this.removeEventListener('open', this.#A.open),
          typeof e == 'function'
            ? ((this.#A.open = e), this.addEventListener('open', e))
            : (this.#A.open = null);
      }
      get onerror() {
        return Y.brandCheck(this, A), this.#A.error;
      }
      set onerror(e) {
        Y.brandCheck(this, A),
          this.#A.error && this.removeEventListener('error', this.#A.error),
          typeof e == 'function'
            ? ((this.#A.error = e), this.addEventListener('error', e))
            : (this.#A.error = null);
      }
      get onclose() {
        return Y.brandCheck(this, A), this.#A.close;
      }
      set onclose(e) {
        Y.brandCheck(this, A),
          this.#A.close && this.removeEventListener('close', this.#A.close),
          typeof e == 'function'
            ? ((this.#A.close = e), this.addEventListener('close', e))
            : (this.#A.close = null);
      }
      get onmessage() {
        return Y.brandCheck(this, A), this.#A.message;
      }
      set onmessage(e) {
        Y.brandCheck(this, A),
          this.#A.message &&
            this.removeEventListener('message', this.#A.message),
          typeof e == 'function'
            ? ((this.#A.message = e), this.addEventListener('message', e))
            : (this.#A.message = null);
      }
      get binaryType() {
        return Y.brandCheck(this, A), this[Kl];
      }
      set binaryType(e) {
        Y.brandCheck(this, A),
          e !== 'blob' && e !== 'arraybuffer'
            ? (this[Kl] = 'blob')
            : (this[Kl] = e);
      }
      #s(e, t) {
        this[CM] = e;
        let r = new x$(this, t);
        r.on('drain', H$),
          r.on('error', V$.bind(this)),
          (e.socket.ws = this),
          (this[T$] = r),
          (this.#o = new J$(e.socket)),
          (this[Pd] = Za.OPEN);
        let o = e.headersList.get('sec-websocket-extensions');
        o !== null && (this.#t = o);
        let s = e.headersList.get('sec-websocket-protocol');
        s !== null && (this.#r = s), BM('open', this);
      }
    };
  at.CONNECTING = at.prototype.CONNECTING = Za.CONNECTING;
  at.OPEN = at.prototype.OPEN = Za.OPEN;
  at.CLOSING = at.prototype.CLOSING = Za.CLOSING;
  at.CLOSED = at.prototype.CLOSED = Za.CLOSED;
  Object.defineProperties(at.prototype, {
    CONNECTING: Do,
    OPEN: Do,
    CLOSING: Do,
    CLOSED: Do,
    url: Rt,
    readyState: Rt,
    bufferedAmount: Rt,
    onopen: Rt,
    onerror: Rt,
    onclose: Rt,
    close: Rt,
    onmessage: Rt,
    binaryType: Rt,
    send: Rt,
    extensions: Rt,
    protocol: Rt,
    [Symbol.toStringTag]: {
      value: 'WebSocket',
      writable: !1,
      enumerable: !1,
      configurable: !0,
    },
  });
  Object.defineProperties(at, {
    CONNECTING: Do,
    OPEN: Do,
    CLOSING: Do,
    CLOSED: Do,
  });
  Y.converters['sequence<DOMString>'] = Y.sequenceConverter(
    Y.converters.DOMString,
  );
  Y.converters['DOMString or sequence<DOMString>'] = function (A, e, t) {
    return Y.util.Type(A) === 'Object' && Symbol.iterator in A
      ? Y.converters['sequence<DOMString>'](A)
      : Y.converters.DOMString(A, e, t);
  };
  Y.converters.WebSocketInit = Y.dictionaryConverter([
    {
      key: 'protocols',
      converter: Y.converters['DOMString or sequence<DOMString>'],
      defaultValue: () => new Array(0),
    },
    {
      key: 'dispatcher',
      converter: Y.converters.any,
      defaultValue: () => v$(),
    },
    {
      key: 'headers',
      converter: Y.nullableConverter(Y.converters.HeadersInit),
    },
  ]);
  Y.converters['DOMString or sequence<DOMString> or WebSocketInit'] = function (
    A,
  ) {
    return Y.util.Type(A) === 'Object' && !(Symbol.iterator in A)
      ? Y.converters.WebSocketInit(A)
      : { protocols: Y.converters['DOMString or sequence<DOMString>'](A) };
  };
  Y.converters.WebSocketSendData = function (A) {
    if (Y.util.Type(A) === 'Object') {
      if (hM(A)) return Y.converters.Blob(A, { strict: !1 });
      if (ArrayBuffer.isView(A) || IM.isArrayBuffer(A))
        return Y.converters.BufferSource(A);
    }
    return Y.converters.USVString(A);
  };
  function H$() {
    this.ws[CM].socket.resume();
  }
  function V$(A) {
    let e, t;
    A instanceof Y$ ? ((e = A.reason), (t = A.code)) : (e = A.message),
      BM('error', this, () => new O$('error', { error: A, message: e })),
      uM(this, t);
  }
  dM.exports = { WebSocket: at };
});
var Wd = B((ynA, pM) => {
  'use strict';
  function q$(A) {
    return A.indexOf('\0') === -1;
  }
  function P$(A) {
    if (A.length === 0) return !1;
    for (let e = 0; e < A.length; e++)
      if (A.charCodeAt(e) < 48 || A.charCodeAt(e) > 57) return !1;
    return !0;
  }
  function W$(A) {
    return new Promise((e) => {
      setTimeout(e, A).unref();
    });
  }
  pM.exports = { isValidLastEventId: q$, isASCIINumber: P$, delay: W$ };
});
var mM = B((DnA, DM) => {
  'use strict';
  var { Transform: _$ } = require('node:stream'),
    { isASCIINumber: wM, isValidLastEventId: yM } = Wd(),
    qr = [239, 187, 191],
    _d = 10,
    Xl = 13,
    j$ = 58,
    Z$ = 32,
    jd = class extends _$ {
      state = null;
      checkBOM = !0;
      crlfCheck = !1;
      eventEndCheck = !1;
      buffer = null;
      pos = 0;
      event = { data: void 0, event: void 0, id: void 0, retry: void 0 };
      constructor(e = {}) {
        (e.readableObjectMode = !0),
          super(e),
          (this.state = e.eventSourceSettings || {}),
          e.push && (this.push = e.push);
      }
      _transform(e, t, r) {
        if (e.length === 0) {
          r();
          return;
        }
        if (
          (this.buffer
            ? (this.buffer = Buffer.concat([this.buffer, e]))
            : (this.buffer = e),
          this.checkBOM)
        )
          switch (this.buffer.length) {
            case 1:
              if (this.buffer[0] === qr[0]) {
                r();
                return;
              }
              (this.checkBOM = !1), r();
              return;
            case 2:
              if (this.buffer[0] === qr[0] && this.buffer[1] === qr[1]) {
                r();
                return;
              }
              this.checkBOM = !1;
              break;
            case 3:
              if (
                this.buffer[0] === qr[0] &&
                this.buffer[1] === qr[1] &&
                this.buffer[2] === qr[2]
              ) {
                (this.buffer = Buffer.alloc(0)), (this.checkBOM = !1), r();
                return;
              }
              this.checkBOM = !1;
              break;
            default:
              this.buffer[0] === qr[0] &&
                this.buffer[1] === qr[1] &&
                this.buffer[2] === qr[2] &&
                (this.buffer = this.buffer.subarray(3)),
                (this.checkBOM = !1);
              break;
          }
        for (; this.pos < this.buffer.length; ) {
          if (this.eventEndCheck) {
            if (this.crlfCheck) {
              if (this.buffer[this.pos] === _d) {
                (this.buffer = this.buffer.subarray(this.pos + 1)),
                  (this.pos = 0),
                  (this.crlfCheck = !1);
                continue;
              }
              this.crlfCheck = !1;
            }
            if (this.buffer[this.pos] === _d || this.buffer[this.pos] === Xl) {
              this.buffer[this.pos] === Xl && (this.crlfCheck = !0),
                (this.buffer = this.buffer.subarray(this.pos + 1)),
                (this.pos = 0),
                (this.event.data !== void 0 ||
                  this.event.event ||
                  this.event.id ||
                  this.event.retry) &&
                  this.processEvent(this.event),
                this.clearEvent();
              continue;
            }
            this.eventEndCheck = !1;
            continue;
          }
          if (this.buffer[this.pos] === _d || this.buffer[this.pos] === Xl) {
            this.buffer[this.pos] === Xl && (this.crlfCheck = !0),
              this.parseLine(this.buffer.subarray(0, this.pos), this.event),
              (this.buffer = this.buffer.subarray(this.pos + 1)),
              (this.pos = 0),
              (this.eventEndCheck = !0);
            continue;
          }
          this.pos++;
        }
        r();
      }
      parseLine(e, t) {
        if (e.length === 0) return;
        let r = e.indexOf(j$);
        if (r === 0) return;
        let o = '',
          s = '';
        if (r !== -1) {
          o = e.subarray(0, r).toString('utf8');
          let n = r + 1;
          e[n] === Z$ && ++n, (s = e.subarray(n).toString('utf8'));
        } else (o = e.toString('utf8')), (s = '');
        switch (o) {
          case 'data':
            t[o] === void 0
              ? (t[o] = s)
              : (t[o] += `
${s}`);
            break;
          case 'retry':
            wM(s) && (t[o] = s);
            break;
          case 'id':
            yM(s) && (t[o] = s);
            break;
          case 'event':
            s.length > 0 && (t[o] = s);
            break;
        }
      }
      processEvent(e) {
        e.retry &&
          wM(e.retry) &&
          (this.state.reconnectionTime = parseInt(e.retry, 10)),
          e.id && yM(e.id) && (this.state.lastEventId = e.id),
          e.data !== void 0 &&
            this.push({
              type: e.event || 'message',
              options: {
                data: e.data,
                lastEventId: this.state.lastEventId,
                origin: this.state.origin,
              },
            });
      }
      clearEvent() {
        this.event = { data: void 0, event: void 0, id: void 0, retry: void 0 };
      }
    };
  DM.exports = { EventSourceStream: jd };
});
var UM = B((mnA, NM) => {
  'use strict';
  var { pipeline: K$ } = require('node:stream'),
    { fetching: X$ } = va(),
    { makeRequest: z$ } = Wn(),
    { webidl: Pr } = ie(),
    { EventSourceStream: $$ } = mM(),
    { parseMIMEType: A7 } = ve(),
    { createFastMessageEvent: e7 } = zn(),
    { isNetworkError: kM } = Ga(),
    { delay: t7 } = Wd(),
    { kEnumerableProperty: Cs } = X(),
    { environmentSettingsObject: RM } = tt(),
    bM = !1,
    FM = 3e3,
    Ka = 0,
    SM = 1,
    Xa = 2,
    r7 = 'anonymous',
    o7 = 'use-credentials',
    ri = class A extends EventTarget {
      #A = { open: null, error: null, message: null };
      #e = null;
      #r = !1;
      #t = Ka;
      #o = null;
      #s = null;
      #n;
      #i;
      constructor(e, t = {}) {
        super(), Pr.util.markAsUncloneable(this);
        let r = 'EventSource constructor';
        Pr.argumentLengthCheck(arguments, 1, r),
          bM ||
            ((bM = !0),
            process.emitWarning(
              'EventSource is experimental, expect them to change at any time.',
              { code: 'UNDICI-ES' },
            )),
          (e = Pr.converters.USVString(e, r, 'url')),
          (t = Pr.converters.EventSourceInitDict(t, r, 'eventSourceInitDict')),
          (this.#n = t.dispatcher),
          (this.#i = { lastEventId: '', reconnectionTime: FM });
        let o = RM,
          s;
        try {
          (s = new URL(e, o.settingsObject.baseUrl)),
            (this.#i.origin = s.origin);
        } catch (a) {
          throw new DOMException(a, 'SyntaxError');
        }
        this.#e = s.href;
        let n = r7;
        t.withCredentials && ((n = o7), (this.#r = !0));
        let i = {
          redirect: 'follow',
          keepalive: !0,
          mode: 'cors',
          credentials: n === 'anonymous' ? 'same-origin' : 'omit',
          referrer: 'no-referrer',
        };
        (i.client = RM.settingsObject),
          (i.headersList = [
            ['accept', { name: 'accept', value: 'text/event-stream' }],
          ]),
          (i.cache = 'no-store'),
          (i.initiator = 'other'),
          (i.urlList = [new URL(this.#e)]),
          (this.#o = z$(i)),
          this.#a();
      }
      get readyState() {
        return this.#t;
      }
      get url() {
        return this.#e;
      }
      get withCredentials() {
        return this.#r;
      }
      #a() {
        if (this.#t === Xa) return;
        this.#t = Ka;
        let e = { request: this.#o, dispatcher: this.#n },
          t = (r) => {
            kM(r) && (this.dispatchEvent(new Event('error')), this.close()),
              this.#c();
          };
        (e.processResponseEndOfBody = t),
          (e.processResponse = (r) => {
            if (kM(r))
              if (r.aborted) {
                this.close(), this.dispatchEvent(new Event('error'));
                return;
              } else {
                this.#c();
                return;
              }
            let o = r.headersList.get('content-type', !0),
              s = o !== null ? A7(o) : 'failure',
              n = s !== 'failure' && s.essence === 'text/event-stream';
            if (r.status !== 200 || n === !1) {
              this.close(), this.dispatchEvent(new Event('error'));
              return;
            }
            (this.#t = SM),
              this.dispatchEvent(new Event('open')),
              (this.#i.origin = r.urlList[r.urlList.length - 1].origin);
            let i = new $$({
              eventSourceSettings: this.#i,
              push: (a) => {
                this.dispatchEvent(e7(a.type, a.options));
              },
            });
            K$(r.body.stream, i, (a) => {
              a?.aborted === !1 &&
                (this.close(), this.dispatchEvent(new Event('error')));
            });
          }),
          (this.#s = X$(e));
      }
      async #c() {
        this.#t !== Xa &&
          ((this.#t = Ka),
          this.dispatchEvent(new Event('error')),
          await t7(this.#i.reconnectionTime),
          this.#t === Ka &&
            (this.#i.lastEventId.length &&
              this.#o.headersList.set('last-event-id', this.#i.lastEventId, !0),
            this.#a()));
      }
      close() {
        Pr.brandCheck(this, A),
          this.#t !== Xa && ((this.#t = Xa), this.#s.abort(), (this.#o = null));
      }
      get onopen() {
        return this.#A.open;
      }
      set onopen(e) {
        this.#A.open && this.removeEventListener('open', this.#A.open),
          typeof e == 'function'
            ? ((this.#A.open = e), this.addEventListener('open', e))
            : (this.#A.open = null);
      }
      get onmessage() {
        return this.#A.message;
      }
      set onmessage(e) {
        this.#A.message && this.removeEventListener('message', this.#A.message),
          typeof e == 'function'
            ? ((this.#A.message = e), this.addEventListener('message', e))
            : (this.#A.message = null);
      }
      get onerror() {
        return this.#A.error;
      }
      set onerror(e) {
        this.#A.error && this.removeEventListener('error', this.#A.error),
          typeof e == 'function'
            ? ((this.#A.error = e), this.addEventListener('error', e))
            : (this.#A.error = null);
      }
    },
    TM = {
      CONNECTING: {
        __proto__: null,
        configurable: !1,
        enumerable: !0,
        value: Ka,
        writable: !1,
      },
      OPEN: {
        __proto__: null,
        configurable: !1,
        enumerable: !0,
        value: SM,
        writable: !1,
      },
      CLOSED: {
        __proto__: null,
        configurable: !1,
        enumerable: !0,
        value: Xa,
        writable: !1,
      },
    };
  Object.defineProperties(ri, TM);
  Object.defineProperties(ri.prototype, TM);
  Object.defineProperties(ri.prototype, {
    close: Cs,
    onerror: Cs,
    onmessage: Cs,
    onopen: Cs,
    readyState: Cs,
    url: Cs,
    withCredentials: Cs,
  });
  Pr.converters.EventSourceInitDict = Pr.dictionaryConverter([
    {
      key: 'withCredentials',
      converter: Pr.converters.boolean,
      defaultValue: () => !1,
    },
    { key: 'dispatcher', converter: Pr.converters.any },
  ]);
  NM.exports = { EventSource: ri, defaultReconnectionTime: FM };
});
var xM = B((knA, v) => {
  'use strict';
  var s7 = pa(),
    MM = zi(),
    n7 = Mn(),
    i7 = qF(),
    a7 = Ln(),
    c7 = fI(),
    g7 = iS(),
    E7 = QS(),
    LM = aA(),
    $l = X(),
    { InvalidArgumentError: zl } = LM,
    oi = $S(),
    l7 = Aa(),
    Q7 = ed(),
    C7 = MT(),
    B7 = od(),
    u7 = HI(),
    h7 = el(),
    { getGlobalDispatcher: GM, setGlobalDispatcher: I7 } = El(),
    d7 = ad(),
    f7 = qE(),
    p7 = PE();
  Object.assign(MM.prototype, oi);
  v.exports.Dispatcher = MM;
  v.exports.Client = s7;
  v.exports.Pool = n7;
  v.exports.BalancedPool = i7;
  v.exports.Agent = a7;
  v.exports.ProxyAgent = c7;
  v.exports.EnvHttpProxyAgent = g7;
  v.exports.RetryAgent = E7;
  v.exports.RetryHandler = h7;
  v.exports.DecoratorHandler = d7;
  v.exports.RedirectHandler = f7;
  v.exports.createRedirectInterceptor = p7;
  v.exports.interceptors = { redirect: JT(), retry: VT(), dump: PT() };
  v.exports.buildConnector = l7;
  v.exports.errors = LM;
  v.exports.util = {
    parseHeaders: $l.parseHeaders,
    headerNameToString: $l.headerNameToString,
  };
  function za(A) {
    return (e, t, r) => {
      if (
        (typeof t == 'function' && ((r = t), (t = null)),
        !e ||
          (typeof e != 'string' && typeof e != 'object' && !(e instanceof URL)))
      )
        throw new zl('invalid url');
      if (t != null && typeof t != 'object') throw new zl('invalid opts');
      if (t && t.path != null) {
        if (typeof t.path != 'string') throw new zl('invalid opts.path');
        let n = t.path;
        t.path.startsWith('/') || (n = `/${n}`),
          (e = new URL($l.parseOrigin(e).origin + n));
      } else t || (t = typeof e == 'object' ? e : {}), (e = $l.parseURL(e));
      let { agent: o, dispatcher: s = GM() } = t;
      if (o) throw new zl('unsupported opts.agent. Did you mean opts.client?');
      return A.call(
        s,
        {
          ...t,
          origin: e.origin,
          path: e.search ? `${e.pathname}${e.search}` : e.pathname,
          method: t.method || (t.body ? 'PUT' : 'GET'),
        },
        r,
      );
    };
  }
  v.exports.setGlobalDispatcher = I7;
  v.exports.getGlobalDispatcher = GM;
  var w7 = va().fetch;
  v.exports.fetch = async function (e, t = void 0) {
    try {
      return await w7(e, t);
    } catch (r) {
      throw (r && typeof r == 'object' && Error.captureStackTrace(r), r);
    }
  };
  v.exports.Headers = is().Headers;
  v.exports.Response = Ga().Response;
  v.exports.Request = Wn().Request;
  v.exports.FormData = ia().FormData;
  v.exports.File = globalThis.File ?? require('node:buffer').File;
  v.exports.FileReader = sU().FileReader;
  var { setGlobalOrigin: y7, getGlobalOrigin: D7 } = wh();
  v.exports.setGlobalOrigin = y7;
  v.exports.getGlobalOrigin = D7;
  var { CacheStorage: m7 } = CU(),
    { kConstruct: k7 } = Nl();
  v.exports.caches = new m7(k7);
  var {
    deleteCookie: R7,
    getCookies: b7,
    getSetCookies: F7,
    setCookie: S7,
  } = kU();
  v.exports.deleteCookie = R7;
  v.exports.getCookies = b7;
  v.exports.getSetCookies = F7;
  v.exports.setCookie = S7;
  var { parseMIMEType: T7, serializeAMimeType: N7 } = ve();
  v.exports.parseMIMEType = T7;
  v.exports.serializeAMimeType = N7;
  var { CloseEvent: U7, ErrorEvent: M7, MessageEvent: L7 } = zn();
  v.exports.WebSocket = fM().WebSocket;
  v.exports.CloseEvent = U7;
  v.exports.ErrorEvent = M7;
  v.exports.MessageEvent = L7;
  v.exports.request = za(oi.request);
  v.exports.stream = za(oi.stream);
  v.exports.pipeline = za(oi.pipeline);
  v.exports.connect = za(oi.connect);
  v.exports.upgrade = za(oi.upgrade);
  v.exports.MockClient = Q7;
  v.exports.MockPool = B7;
  v.exports.MockAgent = C7;
  v.exports.mockErrors = u7;
  var { EventSource: G7 } = UM();
  v.exports.EventSource = G7;
});
var YM = B((ZA) => {
  'use strict';
  var x7 =
      (ZA && ZA.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    v7 =
      (ZA && ZA.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    O7 =
      (ZA && ZA.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              x7(e, A, t);
        return v7(e, A), e;
      },
    Y7 =
      (ZA && ZA.__awaiter) ||
      function (A, e, t, r) {
        function o(s) {
          return s instanceof t
            ? s
            : new t(function (n) {
                n(s);
              });
        }
        return new (t || (t = Promise))(function (s, n) {
          function i(g) {
            try {
              c(r.next(g));
            } catch (E) {
              n(E);
            }
          }
          function a(g) {
            try {
              c(r.throw(g));
            } catch (E) {
              n(E);
            }
          }
          function c(g) {
            g.done ? s(g.value) : o(g.value).then(i, a);
          }
          c((r = r.apply(A, e || [])).next());
        });
      };
  Object.defineProperty(ZA, '__esModule', { value: !0 });
  ZA.getApiBaseUrl =
    ZA.getProxyFetch =
    ZA.getProxyAgentDispatcher =
    ZA.getProxyAgent =
    ZA.getAuthString =
      void 0;
  var vM = O7(lu()),
    J7 = xM();
  function H7(A, e) {
    if (!A && !e.auth)
      throw new Error('Parameter token or opts.auth is required');
    if (A && e.auth)
      throw new Error(
        'Parameters token and opts.auth may not both be specified',
      );
    return typeof e.auth == 'string' ? e.auth : `token ${A}`;
  }
  ZA.getAuthString = H7;
  function V7(A) {
    return new vM.HttpClient().getAgent(A);
  }
  ZA.getProxyAgent = V7;
  function OM(A) {
    return new vM.HttpClient().getAgentDispatcher(A);
  }
  ZA.getProxyAgentDispatcher = OM;
  function q7(A) {
    let e = OM(A);
    return (r, o) =>
      Y7(this, void 0, void 0, function* () {
        return (0, J7.fetch)(
          r,
          Object.assign(Object.assign({}, o), { dispatcher: e }),
        );
      });
  }
  ZA.getProxyFetch = q7;
  function P7() {
    return process.env.GITHUB_API_URL || 'https://api.github.com';
  }
  ZA.getApiBaseUrl = P7;
});
var $a = B((Zd) => {
  'use strict';
  Object.defineProperty(Zd, '__esModule', { value: !0 });
  function W7() {
    return typeof navigator == 'object' && 'userAgent' in navigator
      ? navigator.userAgent
      : typeof process == 'object' && process.version !== void 0
        ? `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`
        : '<environment undetectable>';
  }
  Zd.getUserAgent = W7;
});
var VM = B((FnA, HM) => {
  HM.exports = JM;
  function JM(A, e, t, r) {
    if (typeof t != 'function')
      throw new Error('method for before hook must be a function');
    return (
      r || (r = {}),
      Array.isArray(e)
        ? e.reverse().reduce(function (o, s) {
            return JM.bind(null, A, s, o, r);
          }, t)()
        : Promise.resolve().then(function () {
            return A.registry[e]
              ? A.registry[e].reduce(function (o, s) {
                  return s.hook.bind(null, o, r);
                }, t)()
              : t(r);
          })
    );
  }
});
var PM = B((SnA, qM) => {
  qM.exports = _7;
  function _7(A, e, t, r) {
    var o = r;
    A.registry[t] || (A.registry[t] = []),
      e === 'before' &&
        (r = function (s, n) {
          return Promise.resolve().then(o.bind(null, n)).then(s.bind(null, n));
        }),
      e === 'after' &&
        (r = function (s, n) {
          var i;
          return Promise.resolve()
            .then(s.bind(null, n))
            .then(function (a) {
              return (i = a), o(i, n);
            })
            .then(function () {
              return i;
            });
        }),
      e === 'error' &&
        (r = function (s, n) {
          return Promise.resolve()
            .then(s.bind(null, n))
            .catch(function (i) {
              return o(i, n);
            });
        }),
      A.registry[t].push({ hook: r, orig: o });
  }
});
var _M = B((TnA, WM) => {
  WM.exports = j7;
  function j7(A, e, t) {
    if (A.registry[e]) {
      var r = A.registry[e]
        .map(function (o) {
          return o.orig;
        })
        .indexOf(t);
      r !== -1 && A.registry[e].splice(r, 1);
    }
  }
});
var AL = B((NnA, Ac) => {
  var XM = VM(),
    Z7 = PM(),
    K7 = _M(),
    jM = Function.bind,
    ZM = jM.bind(jM);
  function zM(A, e, t) {
    var r = ZM(K7, null).apply(null, t ? [e, t] : [e]);
    (A.api = { remove: r }),
      (A.remove = r),
      ['before', 'error', 'after', 'wrap'].forEach(function (o) {
        var s = t ? [e, o, t] : [e, o];
        A[o] = A.api[o] = ZM(Z7, null).apply(null, s);
      });
  }
  function X7() {
    var A = 'h',
      e = { registry: {} },
      t = XM.bind(null, e, A);
    return zM(t, e, A), t;
  }
  function $M() {
    var A = { registry: {} },
      e = XM.bind(null, A);
    return zM(e, A), e;
  }
  var KM = !1;
  function si() {
    return (
      KM ||
        (console.warn(
          '[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4',
        ),
        (KM = !0)),
      $M()
    );
  }
  si.Singular = X7.bind();
  si.Collection = $M.bind();
  Ac.exports = si;
  Ac.exports.Hook = si;
  Ac.exports.Singular = si.Singular;
  Ac.exports.Collection = si.Collection;
});
var cL = B((UnA, aL) => {
  'use strict';
  var zd = Object.defineProperty,
    z7 = Object.getOwnPropertyDescriptor,
    $7 = Object.getOwnPropertyNames,
    AAA = Object.prototype.hasOwnProperty,
    eAA = (A, e) => {
      for (var t in e) zd(A, t, { get: e[t], enumerable: !0 });
    },
    tAA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of $7(e))
          !AAA.call(A, o) &&
            o !== t &&
            zd(A, o, {
              get: () => e[o],
              enumerable: !(r = z7(e, o)) || r.enumerable,
            });
      return A;
    },
    rAA = (A) => tAA(zd({}, '__esModule', { value: !0 }), A),
    rL = {};
  eAA(rL, { endpoint: () => IAA });
  aL.exports = rAA(rL);
  var oAA = $a(),
    sAA = '9.0.5',
    nAA = `octokit-endpoint.js/${sAA} ${(0, oAA.getUserAgent)()}`,
    iAA = {
      method: 'GET',
      baseUrl: 'https://api.github.com',
      headers: { accept: 'application/vnd.github.v3+json', 'user-agent': nAA },
      mediaType: { format: '' },
    };
  function aAA(A) {
    return A
      ? Object.keys(A).reduce((e, t) => ((e[t.toLowerCase()] = A[t]), e), {})
      : {};
  }
  function cAA(A) {
    if (
      typeof A != 'object' ||
      A === null ||
      Object.prototype.toString.call(A) !== '[object Object]'
    )
      return !1;
    let e = Object.getPrototypeOf(A);
    if (e === null) return !0;
    let t =
      Object.prototype.hasOwnProperty.call(e, 'constructor') && e.constructor;
    return (
      typeof t == 'function' &&
      t instanceof t &&
      Function.prototype.call(t) === Function.prototype.call(A)
    );
  }
  function oL(A, e) {
    let t = Object.assign({}, A);
    return (
      Object.keys(e).forEach((r) => {
        cAA(e[r])
          ? r in A
            ? (t[r] = oL(A[r], e[r]))
            : Object.assign(t, { [r]: e[r] })
          : Object.assign(t, { [r]: e[r] });
      }),
      t
    );
  }
  function eL(A) {
    for (let e in A) A[e] === void 0 && delete A[e];
    return A;
  }
  function Xd(A, e, t) {
    if (typeof e == 'string') {
      let [o, s] = e.split(' ');
      t = Object.assign(s ? { method: o, url: s } : { url: o }, t);
    } else t = Object.assign({}, e);
    (t.headers = aAA(t.headers)), eL(t), eL(t.headers);
    let r = oL(A || {}, t);
    return (
      t.url === '/graphql' &&
        (A &&
          A.mediaType.previews?.length &&
          (r.mediaType.previews = A.mediaType.previews
            .filter((o) => !r.mediaType.previews.includes(o))
            .concat(r.mediaType.previews)),
        (r.mediaType.previews = (r.mediaType.previews || []).map((o) =>
          o.replace(/-preview/, ''),
        ))),
      r
    );
  }
  function gAA(A, e) {
    let t = /\?/.test(A) ? '&' : '?',
      r = Object.keys(e);
    return r.length === 0
      ? A
      : A +
          t +
          r
            .map((o) =>
              o === 'q'
                ? 'q=' + e.q.split('+').map(encodeURIComponent).join('+')
                : `${o}=${encodeURIComponent(e[o])}`,
            )
            .join('&');
  }
  var EAA = /\{[^}]+\}/g;
  function lAA(A) {
    return A.replace(/^\W+|\W+$/g, '').split(/,/);
  }
  function QAA(A) {
    let e = A.match(EAA);
    return e ? e.map(lAA).reduce((t, r) => t.concat(r), []) : [];
  }
  function tL(A, e) {
    let t = { __proto__: null };
    for (let r of Object.keys(A)) e.indexOf(r) === -1 && (t[r] = A[r]);
    return t;
  }
  function sL(A) {
    return A.split(/(%[0-9A-Fa-f]{2})/g)
      .map(function (e) {
        return (
          /%[0-9A-Fa-f]/.test(e) ||
            (e = encodeURI(e).replace(/%5B/g, '[').replace(/%5D/g, ']')),
          e
        );
      })
      .join('');
  }
  function ii(A) {
    return encodeURIComponent(A).replace(/[!'()*]/g, function (e) {
      return '%' + e.charCodeAt(0).toString(16).toUpperCase();
    });
  }
  function ec(A, e, t) {
    return (
      (e = A === '+' || A === '#' ? sL(e) : ii(e)), t ? ii(t) + '=' + e : e
    );
  }
  function ni(A) {
    return A != null;
  }
  function Kd(A) {
    return A === ';' || A === '&' || A === '?';
  }
  function CAA(A, e, t, r) {
    var o = A[t],
      s = [];
    if (ni(o) && o !== '')
      if (typeof o == 'string' || typeof o == 'number' || typeof o == 'boolean')
        (o = o.toString()),
          r && r !== '*' && (o = o.substring(0, parseInt(r, 10))),
          s.push(ec(e, o, Kd(e) ? t : ''));
      else if (r === '*')
        Array.isArray(o)
          ? o.filter(ni).forEach(function (n) {
              s.push(ec(e, n, Kd(e) ? t : ''));
            })
          : Object.keys(o).forEach(function (n) {
              ni(o[n]) && s.push(ec(e, o[n], n));
            });
      else {
        let n = [];
        Array.isArray(o)
          ? o.filter(ni).forEach(function (i) {
              n.push(ec(e, i));
            })
          : Object.keys(o).forEach(function (i) {
              ni(o[i]) && (n.push(ii(i)), n.push(ec(e, o[i].toString())));
            }),
          Kd(e)
            ? s.push(ii(t) + '=' + n.join(','))
            : n.length !== 0 && s.push(n.join(','));
      }
    else
      e === ';'
        ? ni(o) && s.push(ii(t))
        : o === '' && (e === '&' || e === '?')
          ? s.push(ii(t) + '=')
          : o === '' && s.push('');
    return s;
  }
  function BAA(A) {
    return { expand: uAA.bind(null, A) };
  }
  function uAA(A, e) {
    var t = ['+', '#', '.', '/', ';', '?', '&'];
    return (
      (A = A.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (r, o, s) {
        if (o) {
          let i = '',
            a = [];
          if (
            (t.indexOf(o.charAt(0)) !== -1 &&
              ((i = o.charAt(0)), (o = o.substr(1))),
            o.split(/,/g).forEach(function (c) {
              var g = /([^:\*]*)(?::(\d+)|(\*))?/.exec(c);
              a.push(CAA(e, i, g[1], g[2] || g[3]));
            }),
            i && i !== '+')
          ) {
            var n = ',';
            return (
              i === '?' ? (n = '&') : i !== '#' && (n = i),
              (a.length !== 0 ? i : '') + a.join(n)
            );
          } else return a.join(',');
        } else return sL(s);
      })),
      A === '/' ? A : A.replace(/\/$/, '')
    );
  }
  function nL(A) {
    let e = A.method.toUpperCase(),
      t = (A.url || '/').replace(/:([a-z]\w+)/g, '{$1}'),
      r = Object.assign({}, A.headers),
      o,
      s = tL(A, [
        'method',
        'baseUrl',
        'url',
        'headers',
        'request',
        'mediaType',
      ]),
      n = QAA(t);
    (t = BAA(t).expand(s)), /^http/.test(t) || (t = A.baseUrl + t);
    let i = Object.keys(A)
        .filter((g) => n.includes(g))
        .concat('baseUrl'),
      a = tL(s, i);
    if (
      !/application\/octet-stream/i.test(r.accept) &&
      (A.mediaType.format &&
        (r.accept = r.accept
          .split(/,/)
          .map((g) =>
            g.replace(
              /application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,
              `application/vnd$1$2.${A.mediaType.format}`,
            ),
          )
          .join(',')),
      t.endsWith('/graphql') && A.mediaType.previews?.length)
    ) {
      let g = r.accept.match(/[\w-]+(?=-preview)/g) || [];
      r.accept = g
        .concat(A.mediaType.previews)
        .map((E) => {
          let l = A.mediaType.format ? `.${A.mediaType.format}` : '+json';
          return `application/vnd.github.${E}-preview${l}`;
        })
        .join(',');
    }
    return (
      ['GET', 'HEAD'].includes(e)
        ? (t = gAA(t, a))
        : 'data' in a
          ? (o = a.data)
          : Object.keys(a).length && (o = a),
      !r['content-type'] &&
        typeof o < 'u' &&
        (r['content-type'] = 'application/json; charset=utf-8'),
      ['PATCH', 'PUT'].includes(e) && typeof o > 'u' && (o = ''),
      Object.assign(
        { method: e, url: t, headers: r },
        typeof o < 'u' ? { body: o } : null,
        A.request ? { request: A.request } : null,
      )
    );
  }
  function hAA(A, e, t) {
    return nL(Xd(A, e, t));
  }
  function iL(A, e) {
    let t = Xd(A, e),
      r = hAA.bind(null, t);
    return Object.assign(r, {
      DEFAULTS: t,
      defaults: iL.bind(null, t),
      merge: Xd.bind(null, t),
      parse: nL,
    });
  }
  var IAA = iL(null, iAA);
});
var gL = B((Af) => {
  'use strict';
  Object.defineProperty(Af, '__esModule', { value: !0 });
  var $d = class extends Error {
    constructor(e) {
      super(e),
        Error.captureStackTrace &&
          Error.captureStackTrace(this, this.constructor),
        (this.name = 'Deprecation');
    }
  };
  Af.Deprecation = $d;
});
var QL = B((LnA, lL) => {
  lL.exports = EL;
  function EL(A, e) {
    if (A && e) return EL(A)(e);
    if (typeof A != 'function') throw new TypeError('need wrapper function');
    return (
      Object.keys(A).forEach(function (r) {
        t[r] = A[r];
      }),
      t
    );
    function t() {
      for (var r = new Array(arguments.length), o = 0; o < r.length; o++)
        r[o] = arguments[o];
      var s = A.apply(this, r),
        n = r[r.length - 1];
      return (
        typeof s == 'function' &&
          s !== n &&
          Object.keys(n).forEach(function (i) {
            s[i] = n[i];
          }),
        s
      );
    }
  }
});
var uL = B((GnA, ef) => {
  var CL = QL();
  ef.exports = CL(AQ);
  ef.exports.strict = CL(BL);
  AQ.proto = AQ(function () {
    Object.defineProperty(Function.prototype, 'once', {
      value: function () {
        return AQ(this);
      },
      configurable: !0,
    }),
      Object.defineProperty(Function.prototype, 'onceStrict', {
        value: function () {
          return BL(this);
        },
        configurable: !0,
      });
  });
  function AQ(A) {
    var e = function () {
      return e.called
        ? e.value
        : ((e.called = !0), (e.value = A.apply(this, arguments)));
    };
    return (e.called = !1), e;
  }
  function BL(A) {
    var e = function () {
        if (e.called) throw new Error(e.onceError);
        return (e.called = !0), (e.value = A.apply(this, arguments));
      },
      t = A.name || 'Function wrapped with `once`';
    return (
      (e.onceError = t + " shouldn't be called more than once"),
      (e.called = !1),
      e
    );
  }
});
var wL = B((xnA, pL) => {
  'use strict';
  var dAA = Object.create,
    eQ = Object.defineProperty,
    fAA = Object.getOwnPropertyDescriptor,
    pAA = Object.getOwnPropertyNames,
    wAA = Object.getPrototypeOf,
    yAA = Object.prototype.hasOwnProperty,
    DAA = (A, e) => {
      for (var t in e) eQ(A, t, { get: e[t], enumerable: !0 });
    },
    IL = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of pAA(e))
          !yAA.call(A, o) &&
            o !== t &&
            eQ(A, o, {
              get: () => e[o],
              enumerable: !(r = fAA(e, o)) || r.enumerable,
            });
      return A;
    },
    mAA = (A, e, t) => (
      (t = A != null ? dAA(wAA(A)) : {}),
      IL(
        e || !A || !A.__esModule
          ? eQ(t, 'default', { value: A, enumerable: !0 })
          : t,
        A,
      )
    ),
    kAA = (A) => IL(eQ({}, '__esModule', { value: !0 }), A),
    dL = {};
  DAA(dL, { RequestError: () => FAA });
  pL.exports = kAA(dL);
  var hL = gL(),
    fL = mAA(uL()),
    RAA = (0, fL.default)((A) => console.warn(A)),
    bAA = (0, fL.default)((A) => console.warn(A)),
    FAA = class extends Error {
      constructor(A, e, t) {
        super(A),
          Error.captureStackTrace &&
            Error.captureStackTrace(this, this.constructor),
          (this.name = 'HttpError'),
          (this.status = e);
        let r;
        'headers' in t && typeof t.headers < 'u' && (r = t.headers),
          'response' in t &&
            ((this.response = t.response), (r = t.response.headers));
        let o = Object.assign({}, t.request);
        t.request.headers.authorization &&
          (o.headers = Object.assign({}, t.request.headers, {
            authorization: t.request.headers.authorization.replace(
              / .*$/,
              ' [REDACTED]',
            ),
          })),
          (o.url = o.url
            .replace(/\bclient_secret=\w+/g, 'client_secret=[REDACTED]')
            .replace(/\baccess_token=\w+/g, 'access_token=[REDACTED]')),
          (this.request = o),
          Object.defineProperty(this, 'code', {
            get() {
              return (
                RAA(
                  new hL.Deprecation(
                    '[@octokit/request-error] `error.code` is deprecated, use `error.status`.',
                  ),
                ),
                e
              );
            },
          }),
          Object.defineProperty(this, 'headers', {
            get() {
              return (
                bAA(
                  new hL.Deprecation(
                    '[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.',
                  ),
                ),
                r || {}
              );
            },
          });
      }
    };
});
var rc = B((OnA, mL) => {
  'use strict';
  var of = Object.defineProperty,
    SAA = Object.getOwnPropertyDescriptor,
    TAA = Object.getOwnPropertyNames,
    NAA = Object.prototype.hasOwnProperty,
    UAA = (A, e) => {
      for (var t in e) of(A, t, { get: e[t], enumerable: !0 });
    },
    MAA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of TAA(e))
          !NAA.call(A, o) &&
            o !== t &&
            of(A, o, {
              get: () => e[o],
              enumerable: !(r = SAA(e, o)) || r.enumerable,
            });
      return A;
    },
    LAA = (A) => MAA(of({}, '__esModule', { value: !0 }), A),
    DL = {};
  UAA(DL, { request: () => HAA });
  mL.exports = LAA(DL);
  var GAA = cL(),
    xAA = $a(),
    vAA = '8.4.0';
  function OAA(A) {
    if (
      typeof A != 'object' ||
      A === null ||
      Object.prototype.toString.call(A) !== '[object Object]'
    )
      return !1;
    let e = Object.getPrototypeOf(A);
    if (e === null) return !0;
    let t =
      Object.prototype.hasOwnProperty.call(e, 'constructor') && e.constructor;
    return (
      typeof t == 'function' &&
      t instanceof t &&
      Function.prototype.call(t) === Function.prototype.call(A)
    );
  }
  var tc = wL();
  function YAA(A) {
    return A.arrayBuffer();
  }
  function yL(A) {
    var e, t, r, o;
    let s = A.request && A.request.log ? A.request.log : console,
      n =
        ((e = A.request) == null ? void 0 : e.parseSuccessResponseBody) !== !1;
    (OAA(A.body) || Array.isArray(A.body)) && (A.body = JSON.stringify(A.body));
    let i = {},
      a,
      c,
      { fetch: g } = globalThis;
    if (((t = A.request) != null && t.fetch && (g = A.request.fetch), !g))
      throw new Error(
        'fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing',
      );
    return g(A.url, {
      method: A.method,
      body: A.body,
      redirect: (r = A.request) == null ? void 0 : r.redirect,
      headers: A.headers,
      signal: (o = A.request) == null ? void 0 : o.signal,
      ...(A.body && { duplex: 'half' }),
    })
      .then(async (E) => {
        (c = E.url), (a = E.status);
        for (let l of E.headers) i[l[0]] = l[1];
        if ('deprecation' in i) {
          let l = i.link && i.link.match(/<([^>]+)>; rel="deprecation"/),
            C = l && l.pop();
          s.warn(
            `[@octokit/request] "${A.method} ${A.url}" is deprecated. It is scheduled to be removed on ${i.sunset}${C ? `. See ${C}` : ''}`,
          );
        }
        if (!(a === 204 || a === 205)) {
          if (A.method === 'HEAD') {
            if (a < 400) return;
            throw new tc.RequestError(E.statusText, a, {
              response: { url: c, status: a, headers: i, data: void 0 },
              request: A,
            });
          }
          if (a === 304)
            throw new tc.RequestError('Not modified', a, {
              response: { url: c, status: a, headers: i, data: await tf(E) },
              request: A,
            });
          if (a >= 400) {
            let l = await tf(E);
            throw new tc.RequestError(JAA(l), a, {
              response: { url: c, status: a, headers: i, data: l },
              request: A,
            });
          }
          return n ? await tf(E) : E.body;
        }
      })
      .then((E) => ({ status: a, url: c, headers: i, data: E }))
      .catch((E) => {
        if (E instanceof tc.RequestError) throw E;
        if (E.name === 'AbortError') throw E;
        let l = E.message;
        throw (
          (E.name === 'TypeError' &&
            'cause' in E &&
            (E.cause instanceof Error
              ? (l = E.cause.message)
              : typeof E.cause == 'string' && (l = E.cause)),
          new tc.RequestError(l, 500, { request: A }))
        );
      });
  }
  async function tf(A) {
    let e = A.headers.get('content-type');
    return /application\/json/.test(e)
      ? A.json()
          .catch(() => A.text())
          .catch(() => '')
      : !e || /^text\/|charset=utf-8$/.test(e)
        ? A.text()
        : YAA(A);
  }
  function JAA(A) {
    if (typeof A == 'string') return A;
    let e;
    return (
      'documentation_url' in A ? (e = ` - ${A.documentation_url}`) : (e = ''),
      'message' in A
        ? Array.isArray(A.errors)
          ? `${A.message}: ${A.errors.map(JSON.stringify).join(', ')}${e}`
          : `${A.message}${e}`
        : `Unknown error: ${JSON.stringify(A)}`
    );
  }
  function rf(A, e) {
    let t = A.defaults(e);
    return Object.assign(
      function (o, s) {
        let n = t.merge(o, s);
        if (!n.request || !n.request.hook) return yL(t.parse(n));
        let i = (a, c) => yL(t.parse(t.merge(a, c)));
        return (
          Object.assign(i, { endpoint: t, defaults: rf.bind(null, t) }),
          n.request.hook(i, n)
        );
      },
      { endpoint: t, defaults: rf.bind(null, t) },
    );
  }
  var HAA = rf(GAA.endpoint, {
    headers: {
      'user-agent': `octokit-request.js/${vAA} ${(0, xAA.getUserAgent)()}`,
    },
  });
});
var SL = B((HnA, FL) => {
  'use strict';
  var sf = Object.defineProperty,
    VAA = Object.getOwnPropertyDescriptor,
    qAA = Object.getOwnPropertyNames,
    PAA = Object.prototype.hasOwnProperty,
    WAA = (A, e) => {
      for (var t in e) sf(A, t, { get: e[t], enumerable: !0 });
    },
    _AA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of qAA(e))
          !PAA.call(A, o) &&
            o !== t &&
            sf(A, o, {
              get: () => e[o],
              enumerable: !(r = VAA(e, o)) || r.enumerable,
            });
      return A;
    },
    jAA = (A) => _AA(sf({}, '__esModule', { value: !0 }), A),
    RL = {};
  WAA(RL, {
    GraphqlResponseError: () => bL,
    graphql: () => teA,
    withCustomRequest: () => reA,
  });
  FL.exports = jAA(RL);
  var ZAA = rc(),
    KAA = $a(),
    XAA = '7.1.0',
    YnA = rc(),
    JnA = rc();
  function zAA(A) {
    return (
      `Request failed due to following response errors:
` +
      A.errors
        .map((e) => ` - ${e.message}`)
        .join(`
`)
    );
  }
  var bL = class extends Error {
      constructor(A, e, t) {
        super(zAA(t)),
          (this.request = A),
          (this.headers = e),
          (this.response = t),
          (this.name = 'GraphqlResponseError'),
          (this.errors = t.errors),
          (this.data = t.data),
          Error.captureStackTrace &&
            Error.captureStackTrace(this, this.constructor);
      }
    },
    $AA = [
      'method',
      'baseUrl',
      'url',
      'headers',
      'request',
      'query',
      'mediaType',
    ],
    AeA = ['query', 'method', 'url'],
    kL = /\/api\/v3\/?$/;
  function eeA(A, e, t) {
    if (t) {
      if (typeof e == 'string' && 'query' in t)
        return Promise.reject(
          new Error(
            '[@octokit/graphql] "query" cannot be used as variable name',
          ),
        );
      for (let n in t)
        if (AeA.includes(n))
          return Promise.reject(
            new Error(
              `[@octokit/graphql] "${n}" cannot be used as variable name`,
            ),
          );
    }
    let r = typeof e == 'string' ? Object.assign({ query: e }, t) : e,
      o = Object.keys(r).reduce(
        (n, i) =>
          $AA.includes(i)
            ? ((n[i] = r[i]), n)
            : (n.variables || (n.variables = {}), (n.variables[i] = r[i]), n),
        {},
      ),
      s = r.baseUrl || A.endpoint.DEFAULTS.baseUrl;
    return (
      kL.test(s) && (o.url = s.replace(kL, '/api/graphql')),
      A(o).then((n) => {
        if (n.data.errors) {
          let i = {};
          for (let a of Object.keys(n.headers)) i[a] = n.headers[a];
          throw new bL(o, i, n.data);
        }
        return n.data.data;
      })
    );
  }
  function nf(A, e) {
    let t = A.defaults(e);
    return Object.assign((o, s) => eeA(t, o, s), {
      defaults: nf.bind(null, t),
      endpoint: t.endpoint,
    });
  }
  var teA = nf(ZAA.request, {
    headers: {
      'user-agent': `octokit-graphql.js/${XAA} ${(0, KAA.getUserAgent)()}`,
    },
    method: 'POST',
    url: '/graphql',
  });
  function reA(A) {
    return nf(A, { method: 'POST', url: '/graphql' });
  }
});
var UL = B((qnA, NL) => {
  'use strict';
  var af = Object.defineProperty,
    oeA = Object.getOwnPropertyDescriptor,
    seA = Object.getOwnPropertyNames,
    neA = Object.prototype.hasOwnProperty,
    ieA = (A, e) => {
      for (var t in e) af(A, t, { get: e[t], enumerable: !0 });
    },
    aeA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of seA(e))
          !neA.call(A, o) &&
            o !== t &&
            af(A, o, {
              get: () => e[o],
              enumerable: !(r = oeA(e, o)) || r.enumerable,
            });
      return A;
    },
    ceA = (A) => aeA(af({}, '__esModule', { value: !0 }), A),
    TL = {};
  ieA(TL, { createTokenAuth: () => ueA });
  NL.exports = ceA(TL);
  var geA = /^v1\./,
    EeA = /^ghs_/,
    leA = /^ghu_/;
  async function QeA(A) {
    let e = A.split(/\./).length === 3,
      t = geA.test(A) || EeA.test(A),
      r = leA.test(A);
    return {
      type: 'token',
      token: A,
      tokenType: e
        ? 'app'
        : t
          ? 'installation'
          : r
            ? 'user-to-server'
            : 'oauth',
    };
  }
  function CeA(A) {
    return A.split(/\./).length === 3 ? `bearer ${A}` : `token ${A}`;
  }
  async function BeA(A, e, t, r) {
    let o = e.endpoint.merge(t, r);
    return (o.headers.authorization = CeA(A)), e(o);
  }
  var ueA = function (e) {
    if (!e)
      throw new Error(
        '[@octokit/auth-token] No token passed to createTokenAuth',
      );
    if (typeof e != 'string')
      throw new Error(
        '[@octokit/auth-token] Token passed to createTokenAuth is not a string',
      );
    return (
      (e = e.replace(/^(token|bearer) +/i, '')),
      Object.assign(QeA.bind(null, e), { hook: BeA.bind(null, e) })
    );
  };
});
var YL = B((PnA, OL) => {
  'use strict';
  var cf = Object.defineProperty,
    heA = Object.getOwnPropertyDescriptor,
    IeA = Object.getOwnPropertyNames,
    deA = Object.prototype.hasOwnProperty,
    feA = (A, e) => {
      for (var t in e) cf(A, t, { get: e[t], enumerable: !0 });
    },
    peA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of IeA(e))
          !deA.call(A, o) &&
            o !== t &&
            cf(A, o, {
              get: () => e[o],
              enumerable: !(r = heA(e, o)) || r.enumerable,
            });
      return A;
    },
    weA = (A) => peA(cf({}, '__esModule', { value: !0 }), A),
    xL = {};
  feA(xL, { Octokit: () => FeA });
  OL.exports = weA(xL);
  var yeA = $a(),
    DeA = AL(),
    ML = rc(),
    meA = SL(),
    keA = UL(),
    vL = '5.2.0',
    LL = () => {},
    ReA = console.warn.bind(console),
    beA = console.error.bind(console),
    GL = `octokit-core.js/${vL} ${(0, yeA.getUserAgent)()}`,
    FeA = class {
      static {
        this.VERSION = vL;
      }
      static defaults(A) {
        return class extends this {
          constructor(...t) {
            let r = t[0] || {};
            if (typeof A == 'function') {
              super(A(r));
              return;
            }
            super(
              Object.assign(
                {},
                A,
                r,
                r.userAgent && A.userAgent
                  ? { userAgent: `${r.userAgent} ${A.userAgent}` }
                  : null,
              ),
            );
          }
        };
      }
      static {
        this.plugins = [];
      }
      static plugin(...A) {
        let e = this.plugins;
        return class extends this {
          static {
            this.plugins = e.concat(A.filter((r) => !e.includes(r)));
          }
        };
      }
      constructor(A = {}) {
        let e = new DeA.Collection(),
          t = {
            baseUrl: ML.request.endpoint.DEFAULTS.baseUrl,
            headers: {},
            request: Object.assign({}, A.request, {
              hook: e.bind(null, 'request'),
            }),
            mediaType: { previews: [], format: '' },
          };
        if (
          ((t.headers['user-agent'] = A.userAgent
            ? `${A.userAgent} ${GL}`
            : GL),
          A.baseUrl && (t.baseUrl = A.baseUrl),
          A.previews && (t.mediaType.previews = A.previews),
          A.timeZone && (t.headers['time-zone'] = A.timeZone),
          (this.request = ML.request.defaults(t)),
          (this.graphql = (0, meA.withCustomRequest)(this.request).defaults(t)),
          (this.log = Object.assign(
            { debug: LL, info: LL, warn: ReA, error: beA },
            A.log,
          )),
          (this.hook = e),
          A.authStrategy)
        ) {
          let { authStrategy: o, ...s } = A,
            n = o(
              Object.assign(
                {
                  request: this.request,
                  log: this.log,
                  octokit: this,
                  octokitOptions: s,
                },
                A.auth,
              ),
            );
          e.wrap('request', n.hook), (this.auth = n);
        } else if (!A.auth)
          this.auth = async () => ({ type: 'unauthenticated' });
        else {
          let o = (0, keA.createTokenAuth)(A.auth);
          e.wrap('request', o.hook), (this.auth = o);
        }
        let r = this.constructor;
        for (let o = 0; o < r.plugins.length; ++o)
          Object.assign(this, r.plugins[o](this, A));
      }
    };
});
var _L = B((ZnA, WL) => {
  'use strict';
  var gf = Object.defineProperty,
    SeA = Object.getOwnPropertyDescriptor,
    TeA = Object.getOwnPropertyNames,
    NeA = Object.prototype.hasOwnProperty,
    UeA = (A, e) => {
      for (var t in e) gf(A, t, { get: e[t], enumerable: !0 });
    },
    MeA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of TeA(e))
          !NeA.call(A, o) &&
            o !== t &&
            gf(A, o, {
              get: () => e[o],
              enumerable: !(r = SeA(e, o)) || r.enumerable,
            });
      return A;
    },
    LeA = (A) => MeA(gf({}, '__esModule', { value: !0 }), A),
    JL = {};
  UeA(JL, {
    legacyRestEndpointMethods: () => PL,
    restEndpointMethods: () => qL,
  });
  WL.exports = LeA(JL);
  var HL = '10.4.1',
    GeA = {
      actions: {
        addCustomLabelsToSelfHostedRunnerForOrg: [
          'POST /orgs/{org}/actions/runners/{runner_id}/labels',
        ],
        addCustomLabelsToSelfHostedRunnerForRepo: [
          'POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels',
        ],
        addSelectedRepoToOrgSecret: [
          'PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}',
        ],
        addSelectedRepoToOrgVariable: [
          'PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}',
        ],
        approveWorkflowRun: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve',
        ],
        cancelWorkflowRun: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel',
        ],
        createEnvironmentVariable: [
          'POST /repositories/{repository_id}/environments/{environment_name}/variables',
        ],
        createOrUpdateEnvironmentSecret: [
          'PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}',
        ],
        createOrUpdateOrgSecret: [
          'PUT /orgs/{org}/actions/secrets/{secret_name}',
        ],
        createOrUpdateRepoSecret: [
          'PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}',
        ],
        createOrgVariable: ['POST /orgs/{org}/actions/variables'],
        createRegistrationTokenForOrg: [
          'POST /orgs/{org}/actions/runners/registration-token',
        ],
        createRegistrationTokenForRepo: [
          'POST /repos/{owner}/{repo}/actions/runners/registration-token',
        ],
        createRemoveTokenForOrg: [
          'POST /orgs/{org}/actions/runners/remove-token',
        ],
        createRemoveTokenForRepo: [
          'POST /repos/{owner}/{repo}/actions/runners/remove-token',
        ],
        createRepoVariable: ['POST /repos/{owner}/{repo}/actions/variables'],
        createWorkflowDispatch: [
          'POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches',
        ],
        deleteActionsCacheById: [
          'DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}',
        ],
        deleteActionsCacheByKey: [
          'DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}',
        ],
        deleteArtifact: [
          'DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}',
        ],
        deleteEnvironmentSecret: [
          'DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}',
        ],
        deleteEnvironmentVariable: [
          'DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}',
        ],
        deleteOrgSecret: ['DELETE /orgs/{org}/actions/secrets/{secret_name}'],
        deleteOrgVariable: ['DELETE /orgs/{org}/actions/variables/{name}'],
        deleteRepoSecret: [
          'DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}',
        ],
        deleteRepoVariable: [
          'DELETE /repos/{owner}/{repo}/actions/variables/{name}',
        ],
        deleteSelfHostedRunnerFromOrg: [
          'DELETE /orgs/{org}/actions/runners/{runner_id}',
        ],
        deleteSelfHostedRunnerFromRepo: [
          'DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}',
        ],
        deleteWorkflowRun: [
          'DELETE /repos/{owner}/{repo}/actions/runs/{run_id}',
        ],
        deleteWorkflowRunLogs: [
          'DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs',
        ],
        disableSelectedRepositoryGithubActionsOrganization: [
          'DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}',
        ],
        disableWorkflow: [
          'PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable',
        ],
        downloadArtifact: [
          'GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}',
        ],
        downloadJobLogsForWorkflowRun: [
          'GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs',
        ],
        downloadWorkflowRunAttemptLogs: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs',
        ],
        downloadWorkflowRunLogs: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs',
        ],
        enableSelectedRepositoryGithubActionsOrganization: [
          'PUT /orgs/{org}/actions/permissions/repositories/{repository_id}',
        ],
        enableWorkflow: [
          'PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable',
        ],
        forceCancelWorkflowRun: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel',
        ],
        generateRunnerJitconfigForOrg: [
          'POST /orgs/{org}/actions/runners/generate-jitconfig',
        ],
        generateRunnerJitconfigForRepo: [
          'POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig',
        ],
        getActionsCacheList: ['GET /repos/{owner}/{repo}/actions/caches'],
        getActionsCacheUsage: ['GET /repos/{owner}/{repo}/actions/cache/usage'],
        getActionsCacheUsageByRepoForOrg: [
          'GET /orgs/{org}/actions/cache/usage-by-repository',
        ],
        getActionsCacheUsageForOrg: ['GET /orgs/{org}/actions/cache/usage'],
        getAllowedActionsOrganization: [
          'GET /orgs/{org}/actions/permissions/selected-actions',
        ],
        getAllowedActionsRepository: [
          'GET /repos/{owner}/{repo}/actions/permissions/selected-actions',
        ],
        getArtifact: [
          'GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}',
        ],
        getCustomOidcSubClaimForRepo: [
          'GET /repos/{owner}/{repo}/actions/oidc/customization/sub',
        ],
        getEnvironmentPublicKey: [
          'GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key',
        ],
        getEnvironmentSecret: [
          'GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}',
        ],
        getEnvironmentVariable: [
          'GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}',
        ],
        getGithubActionsDefaultWorkflowPermissionsOrganization: [
          'GET /orgs/{org}/actions/permissions/workflow',
        ],
        getGithubActionsDefaultWorkflowPermissionsRepository: [
          'GET /repos/{owner}/{repo}/actions/permissions/workflow',
        ],
        getGithubActionsPermissionsOrganization: [
          'GET /orgs/{org}/actions/permissions',
        ],
        getGithubActionsPermissionsRepository: [
          'GET /repos/{owner}/{repo}/actions/permissions',
        ],
        getJobForWorkflowRun: [
          'GET /repos/{owner}/{repo}/actions/jobs/{job_id}',
        ],
        getOrgPublicKey: ['GET /orgs/{org}/actions/secrets/public-key'],
        getOrgSecret: ['GET /orgs/{org}/actions/secrets/{secret_name}'],
        getOrgVariable: ['GET /orgs/{org}/actions/variables/{name}'],
        getPendingDeploymentsForRun: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments',
        ],
        getRepoPermissions: [
          'GET /repos/{owner}/{repo}/actions/permissions',
          {},
          { renamed: ['actions', 'getGithubActionsPermissionsRepository'] },
        ],
        getRepoPublicKey: [
          'GET /repos/{owner}/{repo}/actions/secrets/public-key',
        ],
        getRepoSecret: [
          'GET /repos/{owner}/{repo}/actions/secrets/{secret_name}',
        ],
        getRepoVariable: ['GET /repos/{owner}/{repo}/actions/variables/{name}'],
        getReviewsForRun: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals',
        ],
        getSelfHostedRunnerForOrg: [
          'GET /orgs/{org}/actions/runners/{runner_id}',
        ],
        getSelfHostedRunnerForRepo: [
          'GET /repos/{owner}/{repo}/actions/runners/{runner_id}',
        ],
        getWorkflow: [
          'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}',
        ],
        getWorkflowAccessToRepository: [
          'GET /repos/{owner}/{repo}/actions/permissions/access',
        ],
        getWorkflowRun: ['GET /repos/{owner}/{repo}/actions/runs/{run_id}'],
        getWorkflowRunAttempt: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}',
        ],
        getWorkflowRunUsage: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing',
        ],
        getWorkflowUsage: [
          'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing',
        ],
        listArtifactsForRepo: ['GET /repos/{owner}/{repo}/actions/artifacts'],
        listEnvironmentSecrets: [
          'GET /repositories/{repository_id}/environments/{environment_name}/secrets',
        ],
        listEnvironmentVariables: [
          'GET /repositories/{repository_id}/environments/{environment_name}/variables',
        ],
        listJobsForWorkflowRun: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs',
        ],
        listJobsForWorkflowRunAttempt: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs',
        ],
        listLabelsForSelfHostedRunnerForOrg: [
          'GET /orgs/{org}/actions/runners/{runner_id}/labels',
        ],
        listLabelsForSelfHostedRunnerForRepo: [
          'GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels',
        ],
        listOrgSecrets: ['GET /orgs/{org}/actions/secrets'],
        listOrgVariables: ['GET /orgs/{org}/actions/variables'],
        listRepoOrganizationSecrets: [
          'GET /repos/{owner}/{repo}/actions/organization-secrets',
        ],
        listRepoOrganizationVariables: [
          'GET /repos/{owner}/{repo}/actions/organization-variables',
        ],
        listRepoSecrets: ['GET /repos/{owner}/{repo}/actions/secrets'],
        listRepoVariables: ['GET /repos/{owner}/{repo}/actions/variables'],
        listRepoWorkflows: ['GET /repos/{owner}/{repo}/actions/workflows'],
        listRunnerApplicationsForOrg: [
          'GET /orgs/{org}/actions/runners/downloads',
        ],
        listRunnerApplicationsForRepo: [
          'GET /repos/{owner}/{repo}/actions/runners/downloads',
        ],
        listSelectedReposForOrgSecret: [
          'GET /orgs/{org}/actions/secrets/{secret_name}/repositories',
        ],
        listSelectedReposForOrgVariable: [
          'GET /orgs/{org}/actions/variables/{name}/repositories',
        ],
        listSelectedRepositoriesEnabledGithubActionsOrganization: [
          'GET /orgs/{org}/actions/permissions/repositories',
        ],
        listSelfHostedRunnersForOrg: ['GET /orgs/{org}/actions/runners'],
        listSelfHostedRunnersForRepo: [
          'GET /repos/{owner}/{repo}/actions/runners',
        ],
        listWorkflowRunArtifacts: [
          'GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts',
        ],
        listWorkflowRuns: [
          'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs',
        ],
        listWorkflowRunsForRepo: ['GET /repos/{owner}/{repo}/actions/runs'],
        reRunJobForWorkflowRun: [
          'POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun',
        ],
        reRunWorkflow: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun',
        ],
        reRunWorkflowFailedJobs: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs',
        ],
        removeAllCustomLabelsFromSelfHostedRunnerForOrg: [
          'DELETE /orgs/{org}/actions/runners/{runner_id}/labels',
        ],
        removeAllCustomLabelsFromSelfHostedRunnerForRepo: [
          'DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels',
        ],
        removeCustomLabelFromSelfHostedRunnerForOrg: [
          'DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}',
        ],
        removeCustomLabelFromSelfHostedRunnerForRepo: [
          'DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}',
        ],
        removeSelectedRepoFromOrgSecret: [
          'DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}',
        ],
        removeSelectedRepoFromOrgVariable: [
          'DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}',
        ],
        reviewCustomGatesForRun: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule',
        ],
        reviewPendingDeploymentsForRun: [
          'POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments',
        ],
        setAllowedActionsOrganization: [
          'PUT /orgs/{org}/actions/permissions/selected-actions',
        ],
        setAllowedActionsRepository: [
          'PUT /repos/{owner}/{repo}/actions/permissions/selected-actions',
        ],
        setCustomLabelsForSelfHostedRunnerForOrg: [
          'PUT /orgs/{org}/actions/runners/{runner_id}/labels',
        ],
        setCustomLabelsForSelfHostedRunnerForRepo: [
          'PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels',
        ],
        setCustomOidcSubClaimForRepo: [
          'PUT /repos/{owner}/{repo}/actions/oidc/customization/sub',
        ],
        setGithubActionsDefaultWorkflowPermissionsOrganization: [
          'PUT /orgs/{org}/actions/permissions/workflow',
        ],
        setGithubActionsDefaultWorkflowPermissionsRepository: [
          'PUT /repos/{owner}/{repo}/actions/permissions/workflow',
        ],
        setGithubActionsPermissionsOrganization: [
          'PUT /orgs/{org}/actions/permissions',
        ],
        setGithubActionsPermissionsRepository: [
          'PUT /repos/{owner}/{repo}/actions/permissions',
        ],
        setSelectedReposForOrgSecret: [
          'PUT /orgs/{org}/actions/secrets/{secret_name}/repositories',
        ],
        setSelectedReposForOrgVariable: [
          'PUT /orgs/{org}/actions/variables/{name}/repositories',
        ],
        setSelectedRepositoriesEnabledGithubActionsOrganization: [
          'PUT /orgs/{org}/actions/permissions/repositories',
        ],
        setWorkflowAccessToRepository: [
          'PUT /repos/{owner}/{repo}/actions/permissions/access',
        ],
        updateEnvironmentVariable: [
          'PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}',
        ],
        updateOrgVariable: ['PATCH /orgs/{org}/actions/variables/{name}'],
        updateRepoVariable: [
          'PATCH /repos/{owner}/{repo}/actions/variables/{name}',
        ],
      },
      activity: {
        checkRepoIsStarredByAuthenticatedUser: [
          'GET /user/starred/{owner}/{repo}',
        ],
        deleteRepoSubscription: ['DELETE /repos/{owner}/{repo}/subscription'],
        deleteThreadSubscription: [
          'DELETE /notifications/threads/{thread_id}/subscription',
        ],
        getFeeds: ['GET /feeds'],
        getRepoSubscription: ['GET /repos/{owner}/{repo}/subscription'],
        getThread: ['GET /notifications/threads/{thread_id}'],
        getThreadSubscriptionForAuthenticatedUser: [
          'GET /notifications/threads/{thread_id}/subscription',
        ],
        listEventsForAuthenticatedUser: ['GET /users/{username}/events'],
        listNotificationsForAuthenticatedUser: ['GET /notifications'],
        listOrgEventsForAuthenticatedUser: [
          'GET /users/{username}/events/orgs/{org}',
        ],
        listPublicEvents: ['GET /events'],
        listPublicEventsForRepoNetwork: ['GET /networks/{owner}/{repo}/events'],
        listPublicEventsForUser: ['GET /users/{username}/events/public'],
        listPublicOrgEvents: ['GET /orgs/{org}/events'],
        listReceivedEventsForUser: ['GET /users/{username}/received_events'],
        listReceivedPublicEventsForUser: [
          'GET /users/{username}/received_events/public',
        ],
        listRepoEvents: ['GET /repos/{owner}/{repo}/events'],
        listRepoNotificationsForAuthenticatedUser: [
          'GET /repos/{owner}/{repo}/notifications',
        ],
        listReposStarredByAuthenticatedUser: ['GET /user/starred'],
        listReposStarredByUser: ['GET /users/{username}/starred'],
        listReposWatchedByUser: ['GET /users/{username}/subscriptions'],
        listStargazersForRepo: ['GET /repos/{owner}/{repo}/stargazers'],
        listWatchedReposForAuthenticatedUser: ['GET /user/subscriptions'],
        listWatchersForRepo: ['GET /repos/{owner}/{repo}/subscribers'],
        markNotificationsAsRead: ['PUT /notifications'],
        markRepoNotificationsAsRead: [
          'PUT /repos/{owner}/{repo}/notifications',
        ],
        markThreadAsDone: ['DELETE /notifications/threads/{thread_id}'],
        markThreadAsRead: ['PATCH /notifications/threads/{thread_id}'],
        setRepoSubscription: ['PUT /repos/{owner}/{repo}/subscription'],
        setThreadSubscription: [
          'PUT /notifications/threads/{thread_id}/subscription',
        ],
        starRepoForAuthenticatedUser: ['PUT /user/starred/{owner}/{repo}'],
        unstarRepoForAuthenticatedUser: ['DELETE /user/starred/{owner}/{repo}'],
      },
      apps: {
        addRepoToInstallation: [
          'PUT /user/installations/{installation_id}/repositories/{repository_id}',
          {},
          { renamed: ['apps', 'addRepoToInstallationForAuthenticatedUser'] },
        ],
        addRepoToInstallationForAuthenticatedUser: [
          'PUT /user/installations/{installation_id}/repositories/{repository_id}',
        ],
        checkToken: ['POST /applications/{client_id}/token'],
        createFromManifest: ['POST /app-manifests/{code}/conversions'],
        createInstallationAccessToken: [
          'POST /app/installations/{installation_id}/access_tokens',
        ],
        deleteAuthorization: ['DELETE /applications/{client_id}/grant'],
        deleteInstallation: ['DELETE /app/installations/{installation_id}'],
        deleteToken: ['DELETE /applications/{client_id}/token'],
        getAuthenticated: ['GET /app'],
        getBySlug: ['GET /apps/{app_slug}'],
        getInstallation: ['GET /app/installations/{installation_id}'],
        getOrgInstallation: ['GET /orgs/{org}/installation'],
        getRepoInstallation: ['GET /repos/{owner}/{repo}/installation'],
        getSubscriptionPlanForAccount: [
          'GET /marketplace_listing/accounts/{account_id}',
        ],
        getSubscriptionPlanForAccountStubbed: [
          'GET /marketplace_listing/stubbed/accounts/{account_id}',
        ],
        getUserInstallation: ['GET /users/{username}/installation'],
        getWebhookConfigForApp: ['GET /app/hook/config'],
        getWebhookDelivery: ['GET /app/hook/deliveries/{delivery_id}'],
        listAccountsForPlan: [
          'GET /marketplace_listing/plans/{plan_id}/accounts',
        ],
        listAccountsForPlanStubbed: [
          'GET /marketplace_listing/stubbed/plans/{plan_id}/accounts',
        ],
        listInstallationReposForAuthenticatedUser: [
          'GET /user/installations/{installation_id}/repositories',
        ],
        listInstallationRequestsForAuthenticatedApp: [
          'GET /app/installation-requests',
        ],
        listInstallations: ['GET /app/installations'],
        listInstallationsForAuthenticatedUser: ['GET /user/installations'],
        listPlans: ['GET /marketplace_listing/plans'],
        listPlansStubbed: ['GET /marketplace_listing/stubbed/plans'],
        listReposAccessibleToInstallation: ['GET /installation/repositories'],
        listSubscriptionsForAuthenticatedUser: [
          'GET /user/marketplace_purchases',
        ],
        listSubscriptionsForAuthenticatedUserStubbed: [
          'GET /user/marketplace_purchases/stubbed',
        ],
        listWebhookDeliveries: ['GET /app/hook/deliveries'],
        redeliverWebhookDelivery: [
          'POST /app/hook/deliveries/{delivery_id}/attempts',
        ],
        removeRepoFromInstallation: [
          'DELETE /user/installations/{installation_id}/repositories/{repository_id}',
          {},
          {
            renamed: ['apps', 'removeRepoFromInstallationForAuthenticatedUser'],
          },
        ],
        removeRepoFromInstallationForAuthenticatedUser: [
          'DELETE /user/installations/{installation_id}/repositories/{repository_id}',
        ],
        resetToken: ['PATCH /applications/{client_id}/token'],
        revokeInstallationAccessToken: ['DELETE /installation/token'],
        scopeToken: ['POST /applications/{client_id}/token/scoped'],
        suspendInstallation: [
          'PUT /app/installations/{installation_id}/suspended',
        ],
        unsuspendInstallation: [
          'DELETE /app/installations/{installation_id}/suspended',
        ],
        updateWebhookConfigForApp: ['PATCH /app/hook/config'],
      },
      billing: {
        getGithubActionsBillingOrg: [
          'GET /orgs/{org}/settings/billing/actions',
        ],
        getGithubActionsBillingUser: [
          'GET /users/{username}/settings/billing/actions',
        ],
        getGithubPackagesBillingOrg: [
          'GET /orgs/{org}/settings/billing/packages',
        ],
        getGithubPackagesBillingUser: [
          'GET /users/{username}/settings/billing/packages',
        ],
        getSharedStorageBillingOrg: [
          'GET /orgs/{org}/settings/billing/shared-storage',
        ],
        getSharedStorageBillingUser: [
          'GET /users/{username}/settings/billing/shared-storage',
        ],
      },
      checks: {
        create: ['POST /repos/{owner}/{repo}/check-runs'],
        createSuite: ['POST /repos/{owner}/{repo}/check-suites'],
        get: ['GET /repos/{owner}/{repo}/check-runs/{check_run_id}'],
        getSuite: ['GET /repos/{owner}/{repo}/check-suites/{check_suite_id}'],
        listAnnotations: [
          'GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations',
        ],
        listForRef: ['GET /repos/{owner}/{repo}/commits/{ref}/check-runs'],
        listForSuite: [
          'GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs',
        ],
        listSuitesForRef: [
          'GET /repos/{owner}/{repo}/commits/{ref}/check-suites',
        ],
        rerequestRun: [
          'POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest',
        ],
        rerequestSuite: [
          'POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest',
        ],
        setSuitesPreferences: [
          'PATCH /repos/{owner}/{repo}/check-suites/preferences',
        ],
        update: ['PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}'],
      },
      codeScanning: {
        deleteAnalysis: [
          'DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}',
        ],
        getAlert: [
          'GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}',
          {},
          { renamedParameters: { alert_id: 'alert_number' } },
        ],
        getAnalysis: [
          'GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}',
        ],
        getCodeqlDatabase: [
          'GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}',
        ],
        getDefaultSetup: [
          'GET /repos/{owner}/{repo}/code-scanning/default-setup',
        ],
        getSarif: ['GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}'],
        listAlertInstances: [
          'GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances',
        ],
        listAlertsForOrg: ['GET /orgs/{org}/code-scanning/alerts'],
        listAlertsForRepo: ['GET /repos/{owner}/{repo}/code-scanning/alerts'],
        listAlertsInstances: [
          'GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances',
          {},
          { renamed: ['codeScanning', 'listAlertInstances'] },
        ],
        listCodeqlDatabases: [
          'GET /repos/{owner}/{repo}/code-scanning/codeql/databases',
        ],
        listRecentAnalyses: [
          'GET /repos/{owner}/{repo}/code-scanning/analyses',
        ],
        updateAlert: [
          'PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}',
        ],
        updateDefaultSetup: [
          'PATCH /repos/{owner}/{repo}/code-scanning/default-setup',
        ],
        uploadSarif: ['POST /repos/{owner}/{repo}/code-scanning/sarifs'],
      },
      codesOfConduct: {
        getAllCodesOfConduct: ['GET /codes_of_conduct'],
        getConductCode: ['GET /codes_of_conduct/{key}'],
      },
      codespaces: {
        addRepositoryForSecretForAuthenticatedUser: [
          'PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}',
        ],
        addSelectedRepoToOrgSecret: [
          'PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}',
        ],
        checkPermissionsForDevcontainer: [
          'GET /repos/{owner}/{repo}/codespaces/permissions_check',
        ],
        codespaceMachinesForAuthenticatedUser: [
          'GET /user/codespaces/{codespace_name}/machines',
        ],
        createForAuthenticatedUser: ['POST /user/codespaces'],
        createOrUpdateOrgSecret: [
          'PUT /orgs/{org}/codespaces/secrets/{secret_name}',
        ],
        createOrUpdateRepoSecret: [
          'PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}',
        ],
        createOrUpdateSecretForAuthenticatedUser: [
          'PUT /user/codespaces/secrets/{secret_name}',
        ],
        createWithPrForAuthenticatedUser: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces',
        ],
        createWithRepoForAuthenticatedUser: [
          'POST /repos/{owner}/{repo}/codespaces',
        ],
        deleteForAuthenticatedUser: [
          'DELETE /user/codespaces/{codespace_name}',
        ],
        deleteFromOrganization: [
          'DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}',
        ],
        deleteOrgSecret: [
          'DELETE /orgs/{org}/codespaces/secrets/{secret_name}',
        ],
        deleteRepoSecret: [
          'DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}',
        ],
        deleteSecretForAuthenticatedUser: [
          'DELETE /user/codespaces/secrets/{secret_name}',
        ],
        exportForAuthenticatedUser: [
          'POST /user/codespaces/{codespace_name}/exports',
        ],
        getCodespacesForUserInOrg: [
          'GET /orgs/{org}/members/{username}/codespaces',
        ],
        getExportDetailsForAuthenticatedUser: [
          'GET /user/codespaces/{codespace_name}/exports/{export_id}',
        ],
        getForAuthenticatedUser: ['GET /user/codespaces/{codespace_name}'],
        getOrgPublicKey: ['GET /orgs/{org}/codespaces/secrets/public-key'],
        getOrgSecret: ['GET /orgs/{org}/codespaces/secrets/{secret_name}'],
        getPublicKeyForAuthenticatedUser: [
          'GET /user/codespaces/secrets/public-key',
        ],
        getRepoPublicKey: [
          'GET /repos/{owner}/{repo}/codespaces/secrets/public-key',
        ],
        getRepoSecret: [
          'GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}',
        ],
        getSecretForAuthenticatedUser: [
          'GET /user/codespaces/secrets/{secret_name}',
        ],
        listDevcontainersInRepositoryForAuthenticatedUser: [
          'GET /repos/{owner}/{repo}/codespaces/devcontainers',
        ],
        listForAuthenticatedUser: ['GET /user/codespaces'],
        listInOrganization: [
          'GET /orgs/{org}/codespaces',
          {},
          { renamedParameters: { org_id: 'org' } },
        ],
        listInRepositoryForAuthenticatedUser: [
          'GET /repos/{owner}/{repo}/codespaces',
        ],
        listOrgSecrets: ['GET /orgs/{org}/codespaces/secrets'],
        listRepoSecrets: ['GET /repos/{owner}/{repo}/codespaces/secrets'],
        listRepositoriesForSecretForAuthenticatedUser: [
          'GET /user/codespaces/secrets/{secret_name}/repositories',
        ],
        listSecretsForAuthenticatedUser: ['GET /user/codespaces/secrets'],
        listSelectedReposForOrgSecret: [
          'GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories',
        ],
        preFlightWithRepoForAuthenticatedUser: [
          'GET /repos/{owner}/{repo}/codespaces/new',
        ],
        publishForAuthenticatedUser: [
          'POST /user/codespaces/{codespace_name}/publish',
        ],
        removeRepositoryForSecretForAuthenticatedUser: [
          'DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}',
        ],
        removeSelectedRepoFromOrgSecret: [
          'DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}',
        ],
        repoMachinesForAuthenticatedUser: [
          'GET /repos/{owner}/{repo}/codespaces/machines',
        ],
        setRepositoriesForSecretForAuthenticatedUser: [
          'PUT /user/codespaces/secrets/{secret_name}/repositories',
        ],
        setSelectedReposForOrgSecret: [
          'PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories',
        ],
        startForAuthenticatedUser: [
          'POST /user/codespaces/{codespace_name}/start',
        ],
        stopForAuthenticatedUser: [
          'POST /user/codespaces/{codespace_name}/stop',
        ],
        stopInOrganization: [
          'POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop',
        ],
        updateForAuthenticatedUser: ['PATCH /user/codespaces/{codespace_name}'],
      },
      copilot: {
        addCopilotSeatsForTeams: [
          'POST /orgs/{org}/copilot/billing/selected_teams',
        ],
        addCopilotSeatsForUsers: [
          'POST /orgs/{org}/copilot/billing/selected_users',
        ],
        cancelCopilotSeatAssignmentForTeams: [
          'DELETE /orgs/{org}/copilot/billing/selected_teams',
        ],
        cancelCopilotSeatAssignmentForUsers: [
          'DELETE /orgs/{org}/copilot/billing/selected_users',
        ],
        getCopilotOrganizationDetails: ['GET /orgs/{org}/copilot/billing'],
        getCopilotSeatDetailsForUser: [
          'GET /orgs/{org}/members/{username}/copilot',
        ],
        listCopilotSeats: ['GET /orgs/{org}/copilot/billing/seats'],
      },
      dependabot: {
        addSelectedRepoToOrgSecret: [
          'PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}',
        ],
        createOrUpdateOrgSecret: [
          'PUT /orgs/{org}/dependabot/secrets/{secret_name}',
        ],
        createOrUpdateRepoSecret: [
          'PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}',
        ],
        deleteOrgSecret: [
          'DELETE /orgs/{org}/dependabot/secrets/{secret_name}',
        ],
        deleteRepoSecret: [
          'DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}',
        ],
        getAlert: [
          'GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}',
        ],
        getOrgPublicKey: ['GET /orgs/{org}/dependabot/secrets/public-key'],
        getOrgSecret: ['GET /orgs/{org}/dependabot/secrets/{secret_name}'],
        getRepoPublicKey: [
          'GET /repos/{owner}/{repo}/dependabot/secrets/public-key',
        ],
        getRepoSecret: [
          'GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}',
        ],
        listAlertsForEnterprise: [
          'GET /enterprises/{enterprise}/dependabot/alerts',
        ],
        listAlertsForOrg: ['GET /orgs/{org}/dependabot/alerts'],
        listAlertsForRepo: ['GET /repos/{owner}/{repo}/dependabot/alerts'],
        listOrgSecrets: ['GET /orgs/{org}/dependabot/secrets'],
        listRepoSecrets: ['GET /repos/{owner}/{repo}/dependabot/secrets'],
        listSelectedReposForOrgSecret: [
          'GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories',
        ],
        removeSelectedRepoFromOrgSecret: [
          'DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}',
        ],
        setSelectedReposForOrgSecret: [
          'PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories',
        ],
        updateAlert: [
          'PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}',
        ],
      },
      dependencyGraph: {
        createRepositorySnapshot: [
          'POST /repos/{owner}/{repo}/dependency-graph/snapshots',
        ],
        diffRange: [
          'GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}',
        ],
        exportSbom: ['GET /repos/{owner}/{repo}/dependency-graph/sbom'],
      },
      emojis: { get: ['GET /emojis'] },
      gists: {
        checkIsStarred: ['GET /gists/{gist_id}/star'],
        create: ['POST /gists'],
        createComment: ['POST /gists/{gist_id}/comments'],
        delete: ['DELETE /gists/{gist_id}'],
        deleteComment: ['DELETE /gists/{gist_id}/comments/{comment_id}'],
        fork: ['POST /gists/{gist_id}/forks'],
        get: ['GET /gists/{gist_id}'],
        getComment: ['GET /gists/{gist_id}/comments/{comment_id}'],
        getRevision: ['GET /gists/{gist_id}/{sha}'],
        list: ['GET /gists'],
        listComments: ['GET /gists/{gist_id}/comments'],
        listCommits: ['GET /gists/{gist_id}/commits'],
        listForUser: ['GET /users/{username}/gists'],
        listForks: ['GET /gists/{gist_id}/forks'],
        listPublic: ['GET /gists/public'],
        listStarred: ['GET /gists/starred'],
        star: ['PUT /gists/{gist_id}/star'],
        unstar: ['DELETE /gists/{gist_id}/star'],
        update: ['PATCH /gists/{gist_id}'],
        updateComment: ['PATCH /gists/{gist_id}/comments/{comment_id}'],
      },
      git: {
        createBlob: ['POST /repos/{owner}/{repo}/git/blobs'],
        createCommit: ['POST /repos/{owner}/{repo}/git/commits'],
        createRef: ['POST /repos/{owner}/{repo}/git/refs'],
        createTag: ['POST /repos/{owner}/{repo}/git/tags'],
        createTree: ['POST /repos/{owner}/{repo}/git/trees'],
        deleteRef: ['DELETE /repos/{owner}/{repo}/git/refs/{ref}'],
        getBlob: ['GET /repos/{owner}/{repo}/git/blobs/{file_sha}'],
        getCommit: ['GET /repos/{owner}/{repo}/git/commits/{commit_sha}'],
        getRef: ['GET /repos/{owner}/{repo}/git/ref/{ref}'],
        getTag: ['GET /repos/{owner}/{repo}/git/tags/{tag_sha}'],
        getTree: ['GET /repos/{owner}/{repo}/git/trees/{tree_sha}'],
        listMatchingRefs: ['GET /repos/{owner}/{repo}/git/matching-refs/{ref}'],
        updateRef: ['PATCH /repos/{owner}/{repo}/git/refs/{ref}'],
      },
      gitignore: {
        getAllTemplates: ['GET /gitignore/templates'],
        getTemplate: ['GET /gitignore/templates/{name}'],
      },
      interactions: {
        getRestrictionsForAuthenticatedUser: ['GET /user/interaction-limits'],
        getRestrictionsForOrg: ['GET /orgs/{org}/interaction-limits'],
        getRestrictionsForRepo: [
          'GET /repos/{owner}/{repo}/interaction-limits',
        ],
        getRestrictionsForYourPublicRepos: [
          'GET /user/interaction-limits',
          {},
          { renamed: ['interactions', 'getRestrictionsForAuthenticatedUser'] },
        ],
        removeRestrictionsForAuthenticatedUser: [
          'DELETE /user/interaction-limits',
        ],
        removeRestrictionsForOrg: ['DELETE /orgs/{org}/interaction-limits'],
        removeRestrictionsForRepo: [
          'DELETE /repos/{owner}/{repo}/interaction-limits',
        ],
        removeRestrictionsForYourPublicRepos: [
          'DELETE /user/interaction-limits',
          {},
          {
            renamed: ['interactions', 'removeRestrictionsForAuthenticatedUser'],
          },
        ],
        setRestrictionsForAuthenticatedUser: ['PUT /user/interaction-limits'],
        setRestrictionsForOrg: ['PUT /orgs/{org}/interaction-limits'],
        setRestrictionsForRepo: [
          'PUT /repos/{owner}/{repo}/interaction-limits',
        ],
        setRestrictionsForYourPublicRepos: [
          'PUT /user/interaction-limits',
          {},
          { renamed: ['interactions', 'setRestrictionsForAuthenticatedUser'] },
        ],
      },
      issues: {
        addAssignees: [
          'POST /repos/{owner}/{repo}/issues/{issue_number}/assignees',
        ],
        addLabels: ['POST /repos/{owner}/{repo}/issues/{issue_number}/labels'],
        checkUserCanBeAssigned: [
          'GET /repos/{owner}/{repo}/assignees/{assignee}',
        ],
        checkUserCanBeAssignedToIssue: [
          'GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}',
        ],
        create: ['POST /repos/{owner}/{repo}/issues'],
        createComment: [
          'POST /repos/{owner}/{repo}/issues/{issue_number}/comments',
        ],
        createLabel: ['POST /repos/{owner}/{repo}/labels'],
        createMilestone: ['POST /repos/{owner}/{repo}/milestones'],
        deleteComment: [
          'DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}',
        ],
        deleteLabel: ['DELETE /repos/{owner}/{repo}/labels/{name}'],
        deleteMilestone: [
          'DELETE /repos/{owner}/{repo}/milestones/{milestone_number}',
        ],
        get: ['GET /repos/{owner}/{repo}/issues/{issue_number}'],
        getComment: ['GET /repos/{owner}/{repo}/issues/comments/{comment_id}'],
        getEvent: ['GET /repos/{owner}/{repo}/issues/events/{event_id}'],
        getLabel: ['GET /repos/{owner}/{repo}/labels/{name}'],
        getMilestone: [
          'GET /repos/{owner}/{repo}/milestones/{milestone_number}',
        ],
        list: ['GET /issues'],
        listAssignees: ['GET /repos/{owner}/{repo}/assignees'],
        listComments: [
          'GET /repos/{owner}/{repo}/issues/{issue_number}/comments',
        ],
        listCommentsForRepo: ['GET /repos/{owner}/{repo}/issues/comments'],
        listEvents: ['GET /repos/{owner}/{repo}/issues/{issue_number}/events'],
        listEventsForRepo: ['GET /repos/{owner}/{repo}/issues/events'],
        listEventsForTimeline: [
          'GET /repos/{owner}/{repo}/issues/{issue_number}/timeline',
        ],
        listForAuthenticatedUser: ['GET /user/issues'],
        listForOrg: ['GET /orgs/{org}/issues'],
        listForRepo: ['GET /repos/{owner}/{repo}/issues'],
        listLabelsForMilestone: [
          'GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels',
        ],
        listLabelsForRepo: ['GET /repos/{owner}/{repo}/labels'],
        listLabelsOnIssue: [
          'GET /repos/{owner}/{repo}/issues/{issue_number}/labels',
        ],
        listMilestones: ['GET /repos/{owner}/{repo}/milestones'],
        lock: ['PUT /repos/{owner}/{repo}/issues/{issue_number}/lock'],
        removeAllLabels: [
          'DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels',
        ],
        removeAssignees: [
          'DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees',
        ],
        removeLabel: [
          'DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}',
        ],
        setLabels: ['PUT /repos/{owner}/{repo}/issues/{issue_number}/labels'],
        unlock: ['DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock'],
        update: ['PATCH /repos/{owner}/{repo}/issues/{issue_number}'],
        updateComment: [
          'PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}',
        ],
        updateLabel: ['PATCH /repos/{owner}/{repo}/labels/{name}'],
        updateMilestone: [
          'PATCH /repos/{owner}/{repo}/milestones/{milestone_number}',
        ],
      },
      licenses: {
        get: ['GET /licenses/{license}'],
        getAllCommonlyUsed: ['GET /licenses'],
        getForRepo: ['GET /repos/{owner}/{repo}/license'],
      },
      markdown: {
        render: ['POST /markdown'],
        renderRaw: [
          'POST /markdown/raw',
          { headers: { 'content-type': 'text/plain; charset=utf-8' } },
        ],
      },
      meta: {
        get: ['GET /meta'],
        getAllVersions: ['GET /versions'],
        getOctocat: ['GET /octocat'],
        getZen: ['GET /zen'],
        root: ['GET /'],
      },
      migrations: {
        cancelImport: [
          'DELETE /repos/{owner}/{repo}/import',
          {},
          {
            deprecated:
              'octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import',
          },
        ],
        deleteArchiveForAuthenticatedUser: [
          'DELETE /user/migrations/{migration_id}/archive',
        ],
        deleteArchiveForOrg: [
          'DELETE /orgs/{org}/migrations/{migration_id}/archive',
        ],
        downloadArchiveForOrg: [
          'GET /orgs/{org}/migrations/{migration_id}/archive',
        ],
        getArchiveForAuthenticatedUser: [
          'GET /user/migrations/{migration_id}/archive',
        ],
        getCommitAuthors: [
          'GET /repos/{owner}/{repo}/import/authors',
          {},
          {
            deprecated:
              'octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors',
          },
        ],
        getImportStatus: [
          'GET /repos/{owner}/{repo}/import',
          {},
          {
            deprecated:
              'octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status',
          },
        ],
        getLargeFiles: [
          'GET /repos/{owner}/{repo}/import/large_files',
          {},
          {
            deprecated:
              'octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files',
          },
        ],
        getStatusForAuthenticatedUser: ['GET /user/migrations/{migration_id}'],
        getStatusForOrg: ['GET /orgs/{org}/migrations/{migration_id}'],
        listForAuthenticatedUser: ['GET /user/migrations'],
        listForOrg: ['GET /orgs/{org}/migrations'],
        listReposForAuthenticatedUser: [
          'GET /user/migrations/{migration_id}/repositories',
        ],
        listReposForOrg: [
          'GET /orgs/{org}/migrations/{migration_id}/repositories',
        ],
        listReposForUser: [
          'GET /user/migrations/{migration_id}/repositories',
          {},
          { renamed: ['migrations', 'listReposForAuthenticatedUser'] },
        ],
        mapCommitAuthor: [
          'PATCH /repos/{owner}/{repo}/import/authors/{author_id}',
          {},
          {
            deprecated:
              'octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author',
          },
        ],
        setLfsPreference: [
          'PATCH /repos/{owner}/{repo}/import/lfs',
          {},
          {
            deprecated:
              'octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference',
          },
        ],
        startForAuthenticatedUser: ['POST /user/migrations'],
        startForOrg: ['POST /orgs/{org}/migrations'],
        startImport: [
          'PUT /repos/{owner}/{repo}/import',
          {},
          {
            deprecated:
              'octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import',
          },
        ],
        unlockRepoForAuthenticatedUser: [
          'DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock',
        ],
        unlockRepoForOrg: [
          'DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock',
        ],
        updateImport: [
          'PATCH /repos/{owner}/{repo}/import',
          {},
          {
            deprecated:
              'octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import',
          },
        ],
      },
      oidc: {
        getOidcCustomSubTemplateForOrg: [
          'GET /orgs/{org}/actions/oidc/customization/sub',
        ],
        updateOidcCustomSubTemplateForOrg: [
          'PUT /orgs/{org}/actions/oidc/customization/sub',
        ],
      },
      orgs: {
        addSecurityManagerTeam: [
          'PUT /orgs/{org}/security-managers/teams/{team_slug}',
        ],
        assignTeamToOrgRole: [
          'PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}',
        ],
        assignUserToOrgRole: [
          'PUT /orgs/{org}/organization-roles/users/{username}/{role_id}',
        ],
        blockUser: ['PUT /orgs/{org}/blocks/{username}'],
        cancelInvitation: ['DELETE /orgs/{org}/invitations/{invitation_id}'],
        checkBlockedUser: ['GET /orgs/{org}/blocks/{username}'],
        checkMembershipForUser: ['GET /orgs/{org}/members/{username}'],
        checkPublicMembershipForUser: [
          'GET /orgs/{org}/public_members/{username}',
        ],
        convertMemberToOutsideCollaborator: [
          'PUT /orgs/{org}/outside_collaborators/{username}',
        ],
        createCustomOrganizationRole: ['POST /orgs/{org}/organization-roles'],
        createInvitation: ['POST /orgs/{org}/invitations'],
        createOrUpdateCustomProperties: ['PATCH /orgs/{org}/properties/schema'],
        createOrUpdateCustomPropertiesValuesForRepos: [
          'PATCH /orgs/{org}/properties/values',
        ],
        createOrUpdateCustomProperty: [
          'PUT /orgs/{org}/properties/schema/{custom_property_name}',
        ],
        createWebhook: ['POST /orgs/{org}/hooks'],
        delete: ['DELETE /orgs/{org}'],
        deleteCustomOrganizationRole: [
          'DELETE /orgs/{org}/organization-roles/{role_id}',
        ],
        deleteWebhook: ['DELETE /orgs/{org}/hooks/{hook_id}'],
        enableOrDisableSecurityProductOnAllOrgRepos: [
          'POST /orgs/{org}/{security_product}/{enablement}',
        ],
        get: ['GET /orgs/{org}'],
        getAllCustomProperties: ['GET /orgs/{org}/properties/schema'],
        getCustomProperty: [
          'GET /orgs/{org}/properties/schema/{custom_property_name}',
        ],
        getMembershipForAuthenticatedUser: ['GET /user/memberships/orgs/{org}'],
        getMembershipForUser: ['GET /orgs/{org}/memberships/{username}'],
        getOrgRole: ['GET /orgs/{org}/organization-roles/{role_id}'],
        getWebhook: ['GET /orgs/{org}/hooks/{hook_id}'],
        getWebhookConfigForOrg: ['GET /orgs/{org}/hooks/{hook_id}/config'],
        getWebhookDelivery: [
          'GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}',
        ],
        list: ['GET /organizations'],
        listAppInstallations: ['GET /orgs/{org}/installations'],
        listBlockedUsers: ['GET /orgs/{org}/blocks'],
        listCustomPropertiesValuesForRepos: [
          'GET /orgs/{org}/properties/values',
        ],
        listFailedInvitations: ['GET /orgs/{org}/failed_invitations'],
        listForAuthenticatedUser: ['GET /user/orgs'],
        listForUser: ['GET /users/{username}/orgs'],
        listInvitationTeams: [
          'GET /orgs/{org}/invitations/{invitation_id}/teams',
        ],
        listMembers: ['GET /orgs/{org}/members'],
        listMembershipsForAuthenticatedUser: ['GET /user/memberships/orgs'],
        listOrgRoleTeams: [
          'GET /orgs/{org}/organization-roles/{role_id}/teams',
        ],
        listOrgRoleUsers: [
          'GET /orgs/{org}/organization-roles/{role_id}/users',
        ],
        listOrgRoles: ['GET /orgs/{org}/organization-roles'],
        listOrganizationFineGrainedPermissions: [
          'GET /orgs/{org}/organization-fine-grained-permissions',
        ],
        listOutsideCollaborators: ['GET /orgs/{org}/outside_collaborators'],
        listPatGrantRepositories: [
          'GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories',
        ],
        listPatGrantRequestRepositories: [
          'GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories',
        ],
        listPatGrantRequests: [
          'GET /orgs/{org}/personal-access-token-requests',
        ],
        listPatGrants: ['GET /orgs/{org}/personal-access-tokens'],
        listPendingInvitations: ['GET /orgs/{org}/invitations'],
        listPublicMembers: ['GET /orgs/{org}/public_members'],
        listSecurityManagerTeams: ['GET /orgs/{org}/security-managers'],
        listWebhookDeliveries: ['GET /orgs/{org}/hooks/{hook_id}/deliveries'],
        listWebhooks: ['GET /orgs/{org}/hooks'],
        patchCustomOrganizationRole: [
          'PATCH /orgs/{org}/organization-roles/{role_id}',
        ],
        pingWebhook: ['POST /orgs/{org}/hooks/{hook_id}/pings'],
        redeliverWebhookDelivery: [
          'POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts',
        ],
        removeCustomProperty: [
          'DELETE /orgs/{org}/properties/schema/{custom_property_name}',
        ],
        removeMember: ['DELETE /orgs/{org}/members/{username}'],
        removeMembershipForUser: ['DELETE /orgs/{org}/memberships/{username}'],
        removeOutsideCollaborator: [
          'DELETE /orgs/{org}/outside_collaborators/{username}',
        ],
        removePublicMembershipForAuthenticatedUser: [
          'DELETE /orgs/{org}/public_members/{username}',
        ],
        removeSecurityManagerTeam: [
          'DELETE /orgs/{org}/security-managers/teams/{team_slug}',
        ],
        reviewPatGrantRequest: [
          'POST /orgs/{org}/personal-access-token-requests/{pat_request_id}',
        ],
        reviewPatGrantRequestsInBulk: [
          'POST /orgs/{org}/personal-access-token-requests',
        ],
        revokeAllOrgRolesTeam: [
          'DELETE /orgs/{org}/organization-roles/teams/{team_slug}',
        ],
        revokeAllOrgRolesUser: [
          'DELETE /orgs/{org}/organization-roles/users/{username}',
        ],
        revokeOrgRoleTeam: [
          'DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}',
        ],
        revokeOrgRoleUser: [
          'DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}',
        ],
        setMembershipForUser: ['PUT /orgs/{org}/memberships/{username}'],
        setPublicMembershipForAuthenticatedUser: [
          'PUT /orgs/{org}/public_members/{username}',
        ],
        unblockUser: ['DELETE /orgs/{org}/blocks/{username}'],
        update: ['PATCH /orgs/{org}'],
        updateMembershipForAuthenticatedUser: [
          'PATCH /user/memberships/orgs/{org}',
        ],
        updatePatAccess: ['POST /orgs/{org}/personal-access-tokens/{pat_id}'],
        updatePatAccesses: ['POST /orgs/{org}/personal-access-tokens'],
        updateWebhook: ['PATCH /orgs/{org}/hooks/{hook_id}'],
        updateWebhookConfigForOrg: ['PATCH /orgs/{org}/hooks/{hook_id}/config'],
      },
      packages: {
        deletePackageForAuthenticatedUser: [
          'DELETE /user/packages/{package_type}/{package_name}',
        ],
        deletePackageForOrg: [
          'DELETE /orgs/{org}/packages/{package_type}/{package_name}',
        ],
        deletePackageForUser: [
          'DELETE /users/{username}/packages/{package_type}/{package_name}',
        ],
        deletePackageVersionForAuthenticatedUser: [
          'DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        deletePackageVersionForOrg: [
          'DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        deletePackageVersionForUser: [
          'DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        getAllPackageVersionsForAPackageOwnedByAnOrg: [
          'GET /orgs/{org}/packages/{package_type}/{package_name}/versions',
          {},
          {
            renamed: ['packages', 'getAllPackageVersionsForPackageOwnedByOrg'],
          },
        ],
        getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser: [
          'GET /user/packages/{package_type}/{package_name}/versions',
          {},
          {
            renamed: [
              'packages',
              'getAllPackageVersionsForPackageOwnedByAuthenticatedUser',
            ],
          },
        ],
        getAllPackageVersionsForPackageOwnedByAuthenticatedUser: [
          'GET /user/packages/{package_type}/{package_name}/versions',
        ],
        getAllPackageVersionsForPackageOwnedByOrg: [
          'GET /orgs/{org}/packages/{package_type}/{package_name}/versions',
        ],
        getAllPackageVersionsForPackageOwnedByUser: [
          'GET /users/{username}/packages/{package_type}/{package_name}/versions',
        ],
        getPackageForAuthenticatedUser: [
          'GET /user/packages/{package_type}/{package_name}',
        ],
        getPackageForOrganization: [
          'GET /orgs/{org}/packages/{package_type}/{package_name}',
        ],
        getPackageForUser: [
          'GET /users/{username}/packages/{package_type}/{package_name}',
        ],
        getPackageVersionForAuthenticatedUser: [
          'GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        getPackageVersionForOrganization: [
          'GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        getPackageVersionForUser: [
          'GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}',
        ],
        listDockerMigrationConflictingPackagesForAuthenticatedUser: [
          'GET /user/docker/conflicts',
        ],
        listDockerMigrationConflictingPackagesForOrganization: [
          'GET /orgs/{org}/docker/conflicts',
        ],
        listDockerMigrationConflictingPackagesForUser: [
          'GET /users/{username}/docker/conflicts',
        ],
        listPackagesForAuthenticatedUser: ['GET /user/packages'],
        listPackagesForOrganization: ['GET /orgs/{org}/packages'],
        listPackagesForUser: ['GET /users/{username}/packages'],
        restorePackageForAuthenticatedUser: [
          'POST /user/packages/{package_type}/{package_name}/restore{?token}',
        ],
        restorePackageForOrg: [
          'POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}',
        ],
        restorePackageForUser: [
          'POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}',
        ],
        restorePackageVersionForAuthenticatedUser: [
          'POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore',
        ],
        restorePackageVersionForOrg: [
          'POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore',
        ],
        restorePackageVersionForUser: [
          'POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore',
        ],
      },
      projects: {
        addCollaborator: [
          'PUT /projects/{project_id}/collaborators/{username}',
        ],
        createCard: ['POST /projects/columns/{column_id}/cards'],
        createColumn: ['POST /projects/{project_id}/columns'],
        createForAuthenticatedUser: ['POST /user/projects'],
        createForOrg: ['POST /orgs/{org}/projects'],
        createForRepo: ['POST /repos/{owner}/{repo}/projects'],
        delete: ['DELETE /projects/{project_id}'],
        deleteCard: ['DELETE /projects/columns/cards/{card_id}'],
        deleteColumn: ['DELETE /projects/columns/{column_id}'],
        get: ['GET /projects/{project_id}'],
        getCard: ['GET /projects/columns/cards/{card_id}'],
        getColumn: ['GET /projects/columns/{column_id}'],
        getPermissionForUser: [
          'GET /projects/{project_id}/collaborators/{username}/permission',
        ],
        listCards: ['GET /projects/columns/{column_id}/cards'],
        listCollaborators: ['GET /projects/{project_id}/collaborators'],
        listColumns: ['GET /projects/{project_id}/columns'],
        listForOrg: ['GET /orgs/{org}/projects'],
        listForRepo: ['GET /repos/{owner}/{repo}/projects'],
        listForUser: ['GET /users/{username}/projects'],
        moveCard: ['POST /projects/columns/cards/{card_id}/moves'],
        moveColumn: ['POST /projects/columns/{column_id}/moves'],
        removeCollaborator: [
          'DELETE /projects/{project_id}/collaborators/{username}',
        ],
        update: ['PATCH /projects/{project_id}'],
        updateCard: ['PATCH /projects/columns/cards/{card_id}'],
        updateColumn: ['PATCH /projects/columns/{column_id}'],
      },
      pulls: {
        checkIfMerged: ['GET /repos/{owner}/{repo}/pulls/{pull_number}/merge'],
        create: ['POST /repos/{owner}/{repo}/pulls'],
        createReplyForReviewComment: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies',
        ],
        createReview: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews',
        ],
        createReviewComment: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/comments',
        ],
        deletePendingReview: [
          'DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}',
        ],
        deleteReviewComment: [
          'DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}',
        ],
        dismissReview: [
          'PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals',
        ],
        get: ['GET /repos/{owner}/{repo}/pulls/{pull_number}'],
        getReview: [
          'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}',
        ],
        getReviewComment: [
          'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}',
        ],
        list: ['GET /repos/{owner}/{repo}/pulls'],
        listCommentsForReview: [
          'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments',
        ],
        listCommits: ['GET /repos/{owner}/{repo}/pulls/{pull_number}/commits'],
        listFiles: ['GET /repos/{owner}/{repo}/pulls/{pull_number}/files'],
        listRequestedReviewers: [
          'GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers',
        ],
        listReviewComments: [
          'GET /repos/{owner}/{repo}/pulls/{pull_number}/comments',
        ],
        listReviewCommentsForRepo: ['GET /repos/{owner}/{repo}/pulls/comments'],
        listReviews: ['GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews'],
        merge: ['PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge'],
        removeRequestedReviewers: [
          'DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers',
        ],
        requestReviewers: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers',
        ],
        submitReview: [
          'POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events',
        ],
        update: ['PATCH /repos/{owner}/{repo}/pulls/{pull_number}'],
        updateBranch: [
          'PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch',
        ],
        updateReview: [
          'PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}',
        ],
        updateReviewComment: [
          'PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}',
        ],
      },
      rateLimit: { get: ['GET /rate_limit'] },
      reactions: {
        createForCommitComment: [
          'POST /repos/{owner}/{repo}/comments/{comment_id}/reactions',
        ],
        createForIssue: [
          'POST /repos/{owner}/{repo}/issues/{issue_number}/reactions',
        ],
        createForIssueComment: [
          'POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions',
        ],
        createForPullRequestReviewComment: [
          'POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions',
        ],
        createForRelease: [
          'POST /repos/{owner}/{repo}/releases/{release_id}/reactions',
        ],
        createForTeamDiscussionCommentInOrg: [
          'POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions',
        ],
        createForTeamDiscussionInOrg: [
          'POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions',
        ],
        deleteForCommitComment: [
          'DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}',
        ],
        deleteForIssue: [
          'DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}',
        ],
        deleteForIssueComment: [
          'DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}',
        ],
        deleteForPullRequestComment: [
          'DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}',
        ],
        deleteForRelease: [
          'DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}',
        ],
        deleteForTeamDiscussion: [
          'DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}',
        ],
        deleteForTeamDiscussionComment: [
          'DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}',
        ],
        listForCommitComment: [
          'GET /repos/{owner}/{repo}/comments/{comment_id}/reactions',
        ],
        listForIssue: [
          'GET /repos/{owner}/{repo}/issues/{issue_number}/reactions',
        ],
        listForIssueComment: [
          'GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions',
        ],
        listForPullRequestReviewComment: [
          'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions',
        ],
        listForRelease: [
          'GET /repos/{owner}/{repo}/releases/{release_id}/reactions',
        ],
        listForTeamDiscussionCommentInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions',
        ],
        listForTeamDiscussionInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions',
        ],
      },
      repos: {
        acceptInvitation: [
          'PATCH /user/repository_invitations/{invitation_id}',
          {},
          { renamed: ['repos', 'acceptInvitationForAuthenticatedUser'] },
        ],
        acceptInvitationForAuthenticatedUser: [
          'PATCH /user/repository_invitations/{invitation_id}',
        ],
        addAppAccessRestrictions: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps',
          {},
          { mapToData: 'apps' },
        ],
        addCollaborator: ['PUT /repos/{owner}/{repo}/collaborators/{username}'],
        addStatusCheckContexts: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts',
          {},
          { mapToData: 'contexts' },
        ],
        addTeamAccessRestrictions: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams',
          {},
          { mapToData: 'teams' },
        ],
        addUserAccessRestrictions: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users',
          {},
          { mapToData: 'users' },
        ],
        cancelPagesDeployment: [
          'POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel',
        ],
        checkAutomatedSecurityFixes: [
          'GET /repos/{owner}/{repo}/automated-security-fixes',
        ],
        checkCollaborator: [
          'GET /repos/{owner}/{repo}/collaborators/{username}',
        ],
        checkVulnerabilityAlerts: [
          'GET /repos/{owner}/{repo}/vulnerability-alerts',
        ],
        codeownersErrors: ['GET /repos/{owner}/{repo}/codeowners/errors'],
        compareCommits: ['GET /repos/{owner}/{repo}/compare/{base}...{head}'],
        compareCommitsWithBasehead: [
          'GET /repos/{owner}/{repo}/compare/{basehead}',
        ],
        createAutolink: ['POST /repos/{owner}/{repo}/autolinks'],
        createCommitComment: [
          'POST /repos/{owner}/{repo}/commits/{commit_sha}/comments',
        ],
        createCommitSignatureProtection: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures',
        ],
        createCommitStatus: ['POST /repos/{owner}/{repo}/statuses/{sha}'],
        createDeployKey: ['POST /repos/{owner}/{repo}/keys'],
        createDeployment: ['POST /repos/{owner}/{repo}/deployments'],
        createDeploymentBranchPolicy: [
          'POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies',
        ],
        createDeploymentProtectionRule: [
          'POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules',
        ],
        createDeploymentStatus: [
          'POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses',
        ],
        createDispatchEvent: ['POST /repos/{owner}/{repo}/dispatches'],
        createForAuthenticatedUser: ['POST /user/repos'],
        createFork: ['POST /repos/{owner}/{repo}/forks'],
        createInOrg: ['POST /orgs/{org}/repos'],
        createOrUpdateCustomPropertiesValues: [
          'PATCH /repos/{owner}/{repo}/properties/values',
        ],
        createOrUpdateEnvironment: [
          'PUT /repos/{owner}/{repo}/environments/{environment_name}',
        ],
        createOrUpdateFileContents: [
          'PUT /repos/{owner}/{repo}/contents/{path}',
        ],
        createOrgRuleset: ['POST /orgs/{org}/rulesets'],
        createPagesDeployment: ['POST /repos/{owner}/{repo}/pages/deployments'],
        createPagesSite: ['POST /repos/{owner}/{repo}/pages'],
        createRelease: ['POST /repos/{owner}/{repo}/releases'],
        createRepoRuleset: ['POST /repos/{owner}/{repo}/rulesets'],
        createTagProtection: ['POST /repos/{owner}/{repo}/tags/protection'],
        createUsingTemplate: [
          'POST /repos/{template_owner}/{template_repo}/generate',
        ],
        createWebhook: ['POST /repos/{owner}/{repo}/hooks'],
        declineInvitation: [
          'DELETE /user/repository_invitations/{invitation_id}',
          {},
          { renamed: ['repos', 'declineInvitationForAuthenticatedUser'] },
        ],
        declineInvitationForAuthenticatedUser: [
          'DELETE /user/repository_invitations/{invitation_id}',
        ],
        delete: ['DELETE /repos/{owner}/{repo}'],
        deleteAccessRestrictions: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions',
        ],
        deleteAdminBranchProtection: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins',
        ],
        deleteAnEnvironment: [
          'DELETE /repos/{owner}/{repo}/environments/{environment_name}',
        ],
        deleteAutolink: [
          'DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}',
        ],
        deleteBranchProtection: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection',
        ],
        deleteCommitComment: [
          'DELETE /repos/{owner}/{repo}/comments/{comment_id}',
        ],
        deleteCommitSignatureProtection: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures',
        ],
        deleteDeployKey: ['DELETE /repos/{owner}/{repo}/keys/{key_id}'],
        deleteDeployment: [
          'DELETE /repos/{owner}/{repo}/deployments/{deployment_id}',
        ],
        deleteDeploymentBranchPolicy: [
          'DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}',
        ],
        deleteFile: ['DELETE /repos/{owner}/{repo}/contents/{path}'],
        deleteInvitation: [
          'DELETE /repos/{owner}/{repo}/invitations/{invitation_id}',
        ],
        deleteOrgRuleset: ['DELETE /orgs/{org}/rulesets/{ruleset_id}'],
        deletePagesSite: ['DELETE /repos/{owner}/{repo}/pages'],
        deletePullRequestReviewProtection: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews',
        ],
        deleteRelease: ['DELETE /repos/{owner}/{repo}/releases/{release_id}'],
        deleteReleaseAsset: [
          'DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}',
        ],
        deleteRepoRuleset: [
          'DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}',
        ],
        deleteTagProtection: [
          'DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}',
        ],
        deleteWebhook: ['DELETE /repos/{owner}/{repo}/hooks/{hook_id}'],
        disableAutomatedSecurityFixes: [
          'DELETE /repos/{owner}/{repo}/automated-security-fixes',
        ],
        disableDeploymentProtectionRule: [
          'DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}',
        ],
        disablePrivateVulnerabilityReporting: [
          'DELETE /repos/{owner}/{repo}/private-vulnerability-reporting',
        ],
        disableVulnerabilityAlerts: [
          'DELETE /repos/{owner}/{repo}/vulnerability-alerts',
        ],
        downloadArchive: [
          'GET /repos/{owner}/{repo}/zipball/{ref}',
          {},
          { renamed: ['repos', 'downloadZipballArchive'] },
        ],
        downloadTarballArchive: ['GET /repos/{owner}/{repo}/tarball/{ref}'],
        downloadZipballArchive: ['GET /repos/{owner}/{repo}/zipball/{ref}'],
        enableAutomatedSecurityFixes: [
          'PUT /repos/{owner}/{repo}/automated-security-fixes',
        ],
        enablePrivateVulnerabilityReporting: [
          'PUT /repos/{owner}/{repo}/private-vulnerability-reporting',
        ],
        enableVulnerabilityAlerts: [
          'PUT /repos/{owner}/{repo}/vulnerability-alerts',
        ],
        generateReleaseNotes: [
          'POST /repos/{owner}/{repo}/releases/generate-notes',
        ],
        get: ['GET /repos/{owner}/{repo}'],
        getAccessRestrictions: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions',
        ],
        getAdminBranchProtection: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins',
        ],
        getAllDeploymentProtectionRules: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules',
        ],
        getAllEnvironments: ['GET /repos/{owner}/{repo}/environments'],
        getAllStatusCheckContexts: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts',
        ],
        getAllTopics: ['GET /repos/{owner}/{repo}/topics'],
        getAppsWithAccessToProtectedBranch: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps',
        ],
        getAutolink: ['GET /repos/{owner}/{repo}/autolinks/{autolink_id}'],
        getBranch: ['GET /repos/{owner}/{repo}/branches/{branch}'],
        getBranchProtection: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection',
        ],
        getBranchRules: ['GET /repos/{owner}/{repo}/rules/branches/{branch}'],
        getClones: ['GET /repos/{owner}/{repo}/traffic/clones'],
        getCodeFrequencyStats: [
          'GET /repos/{owner}/{repo}/stats/code_frequency',
        ],
        getCollaboratorPermissionLevel: [
          'GET /repos/{owner}/{repo}/collaborators/{username}/permission',
        ],
        getCombinedStatusForRef: [
          'GET /repos/{owner}/{repo}/commits/{ref}/status',
        ],
        getCommit: ['GET /repos/{owner}/{repo}/commits/{ref}'],
        getCommitActivityStats: [
          'GET /repos/{owner}/{repo}/stats/commit_activity',
        ],
        getCommitComment: ['GET /repos/{owner}/{repo}/comments/{comment_id}'],
        getCommitSignatureProtection: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures',
        ],
        getCommunityProfileMetrics: [
          'GET /repos/{owner}/{repo}/community/profile',
        ],
        getContent: ['GET /repos/{owner}/{repo}/contents/{path}'],
        getContributorsStats: ['GET /repos/{owner}/{repo}/stats/contributors'],
        getCustomDeploymentProtectionRule: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}',
        ],
        getCustomPropertiesValues: [
          'GET /repos/{owner}/{repo}/properties/values',
        ],
        getDeployKey: ['GET /repos/{owner}/{repo}/keys/{key_id}'],
        getDeployment: [
          'GET /repos/{owner}/{repo}/deployments/{deployment_id}',
        ],
        getDeploymentBranchPolicy: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}',
        ],
        getDeploymentStatus: [
          'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}',
        ],
        getEnvironment: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}',
        ],
        getLatestPagesBuild: ['GET /repos/{owner}/{repo}/pages/builds/latest'],
        getLatestRelease: ['GET /repos/{owner}/{repo}/releases/latest'],
        getOrgRuleSuite: [
          'GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}',
        ],
        getOrgRuleSuites: ['GET /orgs/{org}/rulesets/rule-suites'],
        getOrgRuleset: ['GET /orgs/{org}/rulesets/{ruleset_id}'],
        getOrgRulesets: ['GET /orgs/{org}/rulesets'],
        getPages: ['GET /repos/{owner}/{repo}/pages'],
        getPagesBuild: ['GET /repos/{owner}/{repo}/pages/builds/{build_id}'],
        getPagesDeployment: [
          'GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}',
        ],
        getPagesHealthCheck: ['GET /repos/{owner}/{repo}/pages/health'],
        getParticipationStats: [
          'GET /repos/{owner}/{repo}/stats/participation',
        ],
        getPullRequestReviewProtection: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews',
        ],
        getPunchCardStats: ['GET /repos/{owner}/{repo}/stats/punch_card'],
        getReadme: ['GET /repos/{owner}/{repo}/readme'],
        getReadmeInDirectory: ['GET /repos/{owner}/{repo}/readme/{dir}'],
        getRelease: ['GET /repos/{owner}/{repo}/releases/{release_id}'],
        getReleaseAsset: [
          'GET /repos/{owner}/{repo}/releases/assets/{asset_id}',
        ],
        getReleaseByTag: ['GET /repos/{owner}/{repo}/releases/tags/{tag}'],
        getRepoRuleSuite: [
          'GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}',
        ],
        getRepoRuleSuites: ['GET /repos/{owner}/{repo}/rulesets/rule-suites'],
        getRepoRuleset: ['GET /repos/{owner}/{repo}/rulesets/{ruleset_id}'],
        getRepoRulesets: ['GET /repos/{owner}/{repo}/rulesets'],
        getStatusChecksProtection: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks',
        ],
        getTeamsWithAccessToProtectedBranch: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams',
        ],
        getTopPaths: ['GET /repos/{owner}/{repo}/traffic/popular/paths'],
        getTopReferrers: [
          'GET /repos/{owner}/{repo}/traffic/popular/referrers',
        ],
        getUsersWithAccessToProtectedBranch: [
          'GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users',
        ],
        getViews: ['GET /repos/{owner}/{repo}/traffic/views'],
        getWebhook: ['GET /repos/{owner}/{repo}/hooks/{hook_id}'],
        getWebhookConfigForRepo: [
          'GET /repos/{owner}/{repo}/hooks/{hook_id}/config',
        ],
        getWebhookDelivery: [
          'GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}',
        ],
        listActivities: ['GET /repos/{owner}/{repo}/activity'],
        listAutolinks: ['GET /repos/{owner}/{repo}/autolinks'],
        listBranches: ['GET /repos/{owner}/{repo}/branches'],
        listBranchesForHeadCommit: [
          'GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head',
        ],
        listCollaborators: ['GET /repos/{owner}/{repo}/collaborators'],
        listCommentsForCommit: [
          'GET /repos/{owner}/{repo}/commits/{commit_sha}/comments',
        ],
        listCommitCommentsForRepo: ['GET /repos/{owner}/{repo}/comments'],
        listCommitStatusesForRef: [
          'GET /repos/{owner}/{repo}/commits/{ref}/statuses',
        ],
        listCommits: ['GET /repos/{owner}/{repo}/commits'],
        listContributors: ['GET /repos/{owner}/{repo}/contributors'],
        listCustomDeploymentRuleIntegrations: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps',
        ],
        listDeployKeys: ['GET /repos/{owner}/{repo}/keys'],
        listDeploymentBranchPolicies: [
          'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies',
        ],
        listDeploymentStatuses: [
          'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses',
        ],
        listDeployments: ['GET /repos/{owner}/{repo}/deployments'],
        listForAuthenticatedUser: ['GET /user/repos'],
        listForOrg: ['GET /orgs/{org}/repos'],
        listForUser: ['GET /users/{username}/repos'],
        listForks: ['GET /repos/{owner}/{repo}/forks'],
        listInvitations: ['GET /repos/{owner}/{repo}/invitations'],
        listInvitationsForAuthenticatedUser: [
          'GET /user/repository_invitations',
        ],
        listLanguages: ['GET /repos/{owner}/{repo}/languages'],
        listPagesBuilds: ['GET /repos/{owner}/{repo}/pages/builds'],
        listPublic: ['GET /repositories'],
        listPullRequestsAssociatedWithCommit: [
          'GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls',
        ],
        listReleaseAssets: [
          'GET /repos/{owner}/{repo}/releases/{release_id}/assets',
        ],
        listReleases: ['GET /repos/{owner}/{repo}/releases'],
        listTagProtection: ['GET /repos/{owner}/{repo}/tags/protection'],
        listTags: ['GET /repos/{owner}/{repo}/tags'],
        listTeams: ['GET /repos/{owner}/{repo}/teams'],
        listWebhookDeliveries: [
          'GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries',
        ],
        listWebhooks: ['GET /repos/{owner}/{repo}/hooks'],
        merge: ['POST /repos/{owner}/{repo}/merges'],
        mergeUpstream: ['POST /repos/{owner}/{repo}/merge-upstream'],
        pingWebhook: ['POST /repos/{owner}/{repo}/hooks/{hook_id}/pings'],
        redeliverWebhookDelivery: [
          'POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts',
        ],
        removeAppAccessRestrictions: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps',
          {},
          { mapToData: 'apps' },
        ],
        removeCollaborator: [
          'DELETE /repos/{owner}/{repo}/collaborators/{username}',
        ],
        removeStatusCheckContexts: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts',
          {},
          { mapToData: 'contexts' },
        ],
        removeStatusCheckProtection: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks',
        ],
        removeTeamAccessRestrictions: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams',
          {},
          { mapToData: 'teams' },
        ],
        removeUserAccessRestrictions: [
          'DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users',
          {},
          { mapToData: 'users' },
        ],
        renameBranch: ['POST /repos/{owner}/{repo}/branches/{branch}/rename'],
        replaceAllTopics: ['PUT /repos/{owner}/{repo}/topics'],
        requestPagesBuild: ['POST /repos/{owner}/{repo}/pages/builds'],
        setAdminBranchProtection: [
          'POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins',
        ],
        setAppAccessRestrictions: [
          'PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps',
          {},
          { mapToData: 'apps' },
        ],
        setStatusCheckContexts: [
          'PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts',
          {},
          { mapToData: 'contexts' },
        ],
        setTeamAccessRestrictions: [
          'PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams',
          {},
          { mapToData: 'teams' },
        ],
        setUserAccessRestrictions: [
          'PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users',
          {},
          { mapToData: 'users' },
        ],
        testPushWebhook: ['POST /repos/{owner}/{repo}/hooks/{hook_id}/tests'],
        transfer: ['POST /repos/{owner}/{repo}/transfer'],
        update: ['PATCH /repos/{owner}/{repo}'],
        updateBranchProtection: [
          'PUT /repos/{owner}/{repo}/branches/{branch}/protection',
        ],
        updateCommitComment: [
          'PATCH /repos/{owner}/{repo}/comments/{comment_id}',
        ],
        updateDeploymentBranchPolicy: [
          'PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}',
        ],
        updateInformationAboutPagesSite: ['PUT /repos/{owner}/{repo}/pages'],
        updateInvitation: [
          'PATCH /repos/{owner}/{repo}/invitations/{invitation_id}',
        ],
        updateOrgRuleset: ['PUT /orgs/{org}/rulesets/{ruleset_id}'],
        updatePullRequestReviewProtection: [
          'PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews',
        ],
        updateRelease: ['PATCH /repos/{owner}/{repo}/releases/{release_id}'],
        updateReleaseAsset: [
          'PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}',
        ],
        updateRepoRuleset: ['PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}'],
        updateStatusCheckPotection: [
          'PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks',
          {},
          { renamed: ['repos', 'updateStatusCheckProtection'] },
        ],
        updateStatusCheckProtection: [
          'PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks',
        ],
        updateWebhook: ['PATCH /repos/{owner}/{repo}/hooks/{hook_id}'],
        updateWebhookConfigForRepo: [
          'PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config',
        ],
        uploadReleaseAsset: [
          'POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}',
          { baseUrl: 'https://uploads.github.com' },
        ],
      },
      search: {
        code: ['GET /search/code'],
        commits: ['GET /search/commits'],
        issuesAndPullRequests: ['GET /search/issues'],
        labels: ['GET /search/labels'],
        repos: ['GET /search/repositories'],
        topics: ['GET /search/topics'],
        users: ['GET /search/users'],
      },
      secretScanning: {
        getAlert: [
          'GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}',
        ],
        listAlertsForEnterprise: [
          'GET /enterprises/{enterprise}/secret-scanning/alerts',
        ],
        listAlertsForOrg: ['GET /orgs/{org}/secret-scanning/alerts'],
        listAlertsForRepo: ['GET /repos/{owner}/{repo}/secret-scanning/alerts'],
        listLocationsForAlert: [
          'GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations',
        ],
        updateAlert: [
          'PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}',
        ],
      },
      securityAdvisories: {
        createFork: [
          'POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks',
        ],
        createPrivateVulnerabilityReport: [
          'POST /repos/{owner}/{repo}/security-advisories/reports',
        ],
        createRepositoryAdvisory: [
          'POST /repos/{owner}/{repo}/security-advisories',
        ],
        createRepositoryAdvisoryCveRequest: [
          'POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve',
        ],
        getGlobalAdvisory: ['GET /advisories/{ghsa_id}'],
        getRepositoryAdvisory: [
          'GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}',
        ],
        listGlobalAdvisories: ['GET /advisories'],
        listOrgRepositoryAdvisories: ['GET /orgs/{org}/security-advisories'],
        listRepositoryAdvisories: [
          'GET /repos/{owner}/{repo}/security-advisories',
        ],
        updateRepositoryAdvisory: [
          'PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}',
        ],
      },
      teams: {
        addOrUpdateMembershipForUserInOrg: [
          'PUT /orgs/{org}/teams/{team_slug}/memberships/{username}',
        ],
        addOrUpdateProjectPermissionsInOrg: [
          'PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}',
        ],
        addOrUpdateRepoPermissionsInOrg: [
          'PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}',
        ],
        checkPermissionsForProjectInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/projects/{project_id}',
        ],
        checkPermissionsForRepoInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}',
        ],
        create: ['POST /orgs/{org}/teams'],
        createDiscussionCommentInOrg: [
          'POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments',
        ],
        createDiscussionInOrg: [
          'POST /orgs/{org}/teams/{team_slug}/discussions',
        ],
        deleteDiscussionCommentInOrg: [
          'DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}',
        ],
        deleteDiscussionInOrg: [
          'DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}',
        ],
        deleteInOrg: ['DELETE /orgs/{org}/teams/{team_slug}'],
        getByName: ['GET /orgs/{org}/teams/{team_slug}'],
        getDiscussionCommentInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}',
        ],
        getDiscussionInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}',
        ],
        getMembershipForUserInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/memberships/{username}',
        ],
        list: ['GET /orgs/{org}/teams'],
        listChildInOrg: ['GET /orgs/{org}/teams/{team_slug}/teams'],
        listDiscussionCommentsInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments',
        ],
        listDiscussionsInOrg: ['GET /orgs/{org}/teams/{team_slug}/discussions'],
        listForAuthenticatedUser: ['GET /user/teams'],
        listMembersInOrg: ['GET /orgs/{org}/teams/{team_slug}/members'],
        listPendingInvitationsInOrg: [
          'GET /orgs/{org}/teams/{team_slug}/invitations',
        ],
        listProjectsInOrg: ['GET /orgs/{org}/teams/{team_slug}/projects'],
        listReposInOrg: ['GET /orgs/{org}/teams/{team_slug}/repos'],
        removeMembershipForUserInOrg: [
          'DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}',
        ],
        removeProjectInOrg: [
          'DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}',
        ],
        removeRepoInOrg: [
          'DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}',
        ],
        updateDiscussionCommentInOrg: [
          'PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}',
        ],
        updateDiscussionInOrg: [
          'PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}',
        ],
        updateInOrg: ['PATCH /orgs/{org}/teams/{team_slug}'],
      },
      users: {
        addEmailForAuthenticated: [
          'POST /user/emails',
          {},
          { renamed: ['users', 'addEmailForAuthenticatedUser'] },
        ],
        addEmailForAuthenticatedUser: ['POST /user/emails'],
        addSocialAccountForAuthenticatedUser: ['POST /user/social_accounts'],
        block: ['PUT /user/blocks/{username}'],
        checkBlocked: ['GET /user/blocks/{username}'],
        checkFollowingForUser: [
          'GET /users/{username}/following/{target_user}',
        ],
        checkPersonIsFollowedByAuthenticated: [
          'GET /user/following/{username}',
        ],
        createGpgKeyForAuthenticated: [
          'POST /user/gpg_keys',
          {},
          { renamed: ['users', 'createGpgKeyForAuthenticatedUser'] },
        ],
        createGpgKeyForAuthenticatedUser: ['POST /user/gpg_keys'],
        createPublicSshKeyForAuthenticated: [
          'POST /user/keys',
          {},
          { renamed: ['users', 'createPublicSshKeyForAuthenticatedUser'] },
        ],
        createPublicSshKeyForAuthenticatedUser: ['POST /user/keys'],
        createSshSigningKeyForAuthenticatedUser: [
          'POST /user/ssh_signing_keys',
        ],
        deleteEmailForAuthenticated: [
          'DELETE /user/emails',
          {},
          { renamed: ['users', 'deleteEmailForAuthenticatedUser'] },
        ],
        deleteEmailForAuthenticatedUser: ['DELETE /user/emails'],
        deleteGpgKeyForAuthenticated: [
          'DELETE /user/gpg_keys/{gpg_key_id}',
          {},
          { renamed: ['users', 'deleteGpgKeyForAuthenticatedUser'] },
        ],
        deleteGpgKeyForAuthenticatedUser: [
          'DELETE /user/gpg_keys/{gpg_key_id}',
        ],
        deletePublicSshKeyForAuthenticated: [
          'DELETE /user/keys/{key_id}',
          {},
          { renamed: ['users', 'deletePublicSshKeyForAuthenticatedUser'] },
        ],
        deletePublicSshKeyForAuthenticatedUser: ['DELETE /user/keys/{key_id}'],
        deleteSocialAccountForAuthenticatedUser: [
          'DELETE /user/social_accounts',
        ],
        deleteSshSigningKeyForAuthenticatedUser: [
          'DELETE /user/ssh_signing_keys/{ssh_signing_key_id}',
        ],
        follow: ['PUT /user/following/{username}'],
        getAuthenticated: ['GET /user'],
        getByUsername: ['GET /users/{username}'],
        getContextForUser: ['GET /users/{username}/hovercard'],
        getGpgKeyForAuthenticated: [
          'GET /user/gpg_keys/{gpg_key_id}',
          {},
          { renamed: ['users', 'getGpgKeyForAuthenticatedUser'] },
        ],
        getGpgKeyForAuthenticatedUser: ['GET /user/gpg_keys/{gpg_key_id}'],
        getPublicSshKeyForAuthenticated: [
          'GET /user/keys/{key_id}',
          {},
          { renamed: ['users', 'getPublicSshKeyForAuthenticatedUser'] },
        ],
        getPublicSshKeyForAuthenticatedUser: ['GET /user/keys/{key_id}'],
        getSshSigningKeyForAuthenticatedUser: [
          'GET /user/ssh_signing_keys/{ssh_signing_key_id}',
        ],
        list: ['GET /users'],
        listBlockedByAuthenticated: [
          'GET /user/blocks',
          {},
          { renamed: ['users', 'listBlockedByAuthenticatedUser'] },
        ],
        listBlockedByAuthenticatedUser: ['GET /user/blocks'],
        listEmailsForAuthenticated: [
          'GET /user/emails',
          {},
          { renamed: ['users', 'listEmailsForAuthenticatedUser'] },
        ],
        listEmailsForAuthenticatedUser: ['GET /user/emails'],
        listFollowedByAuthenticated: [
          'GET /user/following',
          {},
          { renamed: ['users', 'listFollowedByAuthenticatedUser'] },
        ],
        listFollowedByAuthenticatedUser: ['GET /user/following'],
        listFollowersForAuthenticatedUser: ['GET /user/followers'],
        listFollowersForUser: ['GET /users/{username}/followers'],
        listFollowingForUser: ['GET /users/{username}/following'],
        listGpgKeysForAuthenticated: [
          'GET /user/gpg_keys',
          {},
          { renamed: ['users', 'listGpgKeysForAuthenticatedUser'] },
        ],
        listGpgKeysForAuthenticatedUser: ['GET /user/gpg_keys'],
        listGpgKeysForUser: ['GET /users/{username}/gpg_keys'],
        listPublicEmailsForAuthenticated: [
          'GET /user/public_emails',
          {},
          { renamed: ['users', 'listPublicEmailsForAuthenticatedUser'] },
        ],
        listPublicEmailsForAuthenticatedUser: ['GET /user/public_emails'],
        listPublicKeysForUser: ['GET /users/{username}/keys'],
        listPublicSshKeysForAuthenticated: [
          'GET /user/keys',
          {},
          { renamed: ['users', 'listPublicSshKeysForAuthenticatedUser'] },
        ],
        listPublicSshKeysForAuthenticatedUser: ['GET /user/keys'],
        listSocialAccountsForAuthenticatedUser: ['GET /user/social_accounts'],
        listSocialAccountsForUser: ['GET /users/{username}/social_accounts'],
        listSshSigningKeysForAuthenticatedUser: ['GET /user/ssh_signing_keys'],
        listSshSigningKeysForUser: ['GET /users/{username}/ssh_signing_keys'],
        setPrimaryEmailVisibilityForAuthenticated: [
          'PATCH /user/email/visibility',
          {},
          {
            renamed: ['users', 'setPrimaryEmailVisibilityForAuthenticatedUser'],
          },
        ],
        setPrimaryEmailVisibilityForAuthenticatedUser: [
          'PATCH /user/email/visibility',
        ],
        unblock: ['DELETE /user/blocks/{username}'],
        unfollow: ['DELETE /user/following/{username}'],
        updateAuthenticated: ['PATCH /user'],
      },
    },
    xeA = GeA,
    Bs = new Map();
  for (let [A, e] of Object.entries(xeA))
    for (let [t, r] of Object.entries(e)) {
      let [o, s, n] = r,
        [i, a] = o.split(/ /),
        c = Object.assign({ method: i, url: a }, s);
      Bs.has(A) || Bs.set(A, new Map()),
        Bs.get(A).set(t, {
          scope: A,
          methodName: t,
          endpointDefaults: c,
          decorations: n,
        });
    }
  var veA = {
    has({ scope: A }, e) {
      return Bs.get(A).has(e);
    },
    getOwnPropertyDescriptor(A, e) {
      return {
        value: this.get(A, e),
        configurable: !0,
        writable: !0,
        enumerable: !0,
      };
    },
    defineProperty(A, e, t) {
      return Object.defineProperty(A.cache, e, t), !0;
    },
    deleteProperty(A, e) {
      return delete A.cache[e], !0;
    },
    ownKeys({ scope: A }) {
      return [...Bs.get(A).keys()];
    },
    set(A, e, t) {
      return (A.cache[e] = t);
    },
    get({ octokit: A, scope: e, cache: t }, r) {
      if (t[r]) return t[r];
      let o = Bs.get(e).get(r);
      if (!o) return;
      let { endpointDefaults: s, decorations: n } = o;
      return (
        n ? (t[r] = OeA(A, e, r, s, n)) : (t[r] = A.request.defaults(s)), t[r]
      );
    },
  };
  function VL(A) {
    let e = {};
    for (let t of Bs.keys())
      e[t] = new Proxy({ octokit: A, scope: t, cache: {} }, veA);
    return e;
  }
  function OeA(A, e, t, r, o) {
    let s = A.request.defaults(r);
    function n(...i) {
      let a = s.endpoint.merge(...i);
      if (o.mapToData)
        return (
          (a = Object.assign({}, a, {
            data: a[o.mapToData],
            [o.mapToData]: void 0,
          })),
          s(a)
        );
      if (o.renamed) {
        let [c, g] = o.renamed;
        A.log.warn(
          `octokit.${e}.${t}() has been renamed to octokit.${c}.${g}()`,
        );
      }
      if ((o.deprecated && A.log.warn(o.deprecated), o.renamedParameters)) {
        let c = s.endpoint.merge(...i);
        for (let [g, E] of Object.entries(o.renamedParameters))
          g in c &&
            (A.log.warn(
              `"${g}" parameter is deprecated for "octokit.${e}.${t}()". Use "${E}" instead`,
            ),
            E in c || (c[E] = c[g]),
            delete c[g]);
        return s(c);
      }
      return s(...i);
    }
    return Object.assign(n, s);
  }
  function qL(A) {
    return { rest: VL(A) };
  }
  qL.VERSION = HL;
  function PL(A) {
    let e = VL(A);
    return { ...e, rest: e };
  }
  PL.VERSION = HL;
});
var AG = B((KnA, $L) => {
  'use strict';
  var Ef = Object.defineProperty,
    YeA = Object.getOwnPropertyDescriptor,
    JeA = Object.getOwnPropertyNames,
    HeA = Object.prototype.hasOwnProperty,
    VeA = (A, e) => {
      for (var t in e) Ef(A, t, { get: e[t], enumerable: !0 });
    },
    qeA = (A, e, t, r) => {
      if ((e && typeof e == 'object') || typeof e == 'function')
        for (let o of JeA(e))
          !HeA.call(A, o) &&
            o !== t &&
            Ef(A, o, {
              get: () => e[o],
              enumerable: !(r = YeA(e, o)) || r.enumerable,
            });
      return A;
    },
    PeA = (A) => qeA(Ef({}, '__esModule', { value: !0 }), A),
    jL = {};
  VeA(jL, {
    composePaginateRest: () => jeA,
    isPaginatingEndpoint: () => ZeA,
    paginateRest: () => zL,
    paginatingEndpoints: () => XL,
  });
  $L.exports = PeA(jL);
  var WeA = '9.2.1';
  function _eA(A) {
    if (!A.data) return { ...A, data: [] };
    if (!('total_count' in A.data && !('url' in A.data))) return A;
    let t = A.data.incomplete_results,
      r = A.data.repository_selection,
      o = A.data.total_count;
    delete A.data.incomplete_results,
      delete A.data.repository_selection,
      delete A.data.total_count;
    let s = Object.keys(A.data)[0],
      n = A.data[s];
    return (
      (A.data = n),
      typeof t < 'u' && (A.data.incomplete_results = t),
      typeof r < 'u' && (A.data.repository_selection = r),
      (A.data.total_count = o),
      A
    );
  }
  function lf(A, e, t) {
    let r = typeof e == 'function' ? e.endpoint(t) : A.request.endpoint(e, t),
      o = typeof e == 'function' ? e : A.request,
      s = r.method,
      n = r.headers,
      i = r.url;
    return {
      [Symbol.asyncIterator]: () => ({
        async next() {
          if (!i) return { done: !0 };
          try {
            let a = await o({ method: s, url: i, headers: n }),
              c = _eA(a);
            return (
              (i = ((c.headers.link || '').match(/<([^>]+)>;\s*rel="next"/) ||
                [])[1]),
              { value: c }
            );
          } catch (a) {
            if (a.status !== 409) throw a;
            return (i = ''), { value: { status: 200, headers: {}, data: [] } };
          }
        },
      }),
    };
  }
  function ZL(A, e, t, r) {
    return (
      typeof t == 'function' && ((r = t), (t = void 0)),
      KL(A, [], lf(A, e, t)[Symbol.asyncIterator](), r)
    );
  }
  function KL(A, e, t, r) {
    return t.next().then((o) => {
      if (o.done) return e;
      let s = !1;
      function n() {
        s = !0;
      }
      return (
        (e = e.concat(r ? r(o.value, n) : o.value.data)), s ? e : KL(A, e, t, r)
      );
    });
  }
  var jeA = Object.assign(ZL, { iterator: lf }),
    XL = [
      'GET /advisories',
      'GET /app/hook/deliveries',
      'GET /app/installation-requests',
      'GET /app/installations',
      'GET /assignments/{assignment_id}/accepted_assignments',
      'GET /classrooms',
      'GET /classrooms/{classroom_id}/assignments',
      'GET /enterprises/{enterprise}/dependabot/alerts',
      'GET /enterprises/{enterprise}/secret-scanning/alerts',
      'GET /events',
      'GET /gists',
      'GET /gists/public',
      'GET /gists/starred',
      'GET /gists/{gist_id}/comments',
      'GET /gists/{gist_id}/commits',
      'GET /gists/{gist_id}/forks',
      'GET /installation/repositories',
      'GET /issues',
      'GET /licenses',
      'GET /marketplace_listing/plans',
      'GET /marketplace_listing/plans/{plan_id}/accounts',
      'GET /marketplace_listing/stubbed/plans',
      'GET /marketplace_listing/stubbed/plans/{plan_id}/accounts',
      'GET /networks/{owner}/{repo}/events',
      'GET /notifications',
      'GET /organizations',
      'GET /orgs/{org}/actions/cache/usage-by-repository',
      'GET /orgs/{org}/actions/permissions/repositories',
      'GET /orgs/{org}/actions/runners',
      'GET /orgs/{org}/actions/secrets',
      'GET /orgs/{org}/actions/secrets/{secret_name}/repositories',
      'GET /orgs/{org}/actions/variables',
      'GET /orgs/{org}/actions/variables/{name}/repositories',
      'GET /orgs/{org}/blocks',
      'GET /orgs/{org}/code-scanning/alerts',
      'GET /orgs/{org}/codespaces',
      'GET /orgs/{org}/codespaces/secrets',
      'GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories',
      'GET /orgs/{org}/copilot/billing/seats',
      'GET /orgs/{org}/dependabot/alerts',
      'GET /orgs/{org}/dependabot/secrets',
      'GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories',
      'GET /orgs/{org}/events',
      'GET /orgs/{org}/failed_invitations',
      'GET /orgs/{org}/hooks',
      'GET /orgs/{org}/hooks/{hook_id}/deliveries',
      'GET /orgs/{org}/installations',
      'GET /orgs/{org}/invitations',
      'GET /orgs/{org}/invitations/{invitation_id}/teams',
      'GET /orgs/{org}/issues',
      'GET /orgs/{org}/members',
      'GET /orgs/{org}/members/{username}/codespaces',
      'GET /orgs/{org}/migrations',
      'GET /orgs/{org}/migrations/{migration_id}/repositories',
      'GET /orgs/{org}/organization-roles/{role_id}/teams',
      'GET /orgs/{org}/organization-roles/{role_id}/users',
      'GET /orgs/{org}/outside_collaborators',
      'GET /orgs/{org}/packages',
      'GET /orgs/{org}/packages/{package_type}/{package_name}/versions',
      'GET /orgs/{org}/personal-access-token-requests',
      'GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories',
      'GET /orgs/{org}/personal-access-tokens',
      'GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories',
      'GET /orgs/{org}/projects',
      'GET /orgs/{org}/properties/values',
      'GET /orgs/{org}/public_members',
      'GET /orgs/{org}/repos',
      'GET /orgs/{org}/rulesets',
      'GET /orgs/{org}/rulesets/rule-suites',
      'GET /orgs/{org}/secret-scanning/alerts',
      'GET /orgs/{org}/security-advisories',
      'GET /orgs/{org}/teams',
      'GET /orgs/{org}/teams/{team_slug}/discussions',
      'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments',
      'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions',
      'GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions',
      'GET /orgs/{org}/teams/{team_slug}/invitations',
      'GET /orgs/{org}/teams/{team_slug}/members',
      'GET /orgs/{org}/teams/{team_slug}/projects',
      'GET /orgs/{org}/teams/{team_slug}/repos',
      'GET /orgs/{org}/teams/{team_slug}/teams',
      'GET /projects/columns/{column_id}/cards',
      'GET /projects/{project_id}/collaborators',
      'GET /projects/{project_id}/columns',
      'GET /repos/{owner}/{repo}/actions/artifacts',
      'GET /repos/{owner}/{repo}/actions/caches',
      'GET /repos/{owner}/{repo}/actions/organization-secrets',
      'GET /repos/{owner}/{repo}/actions/organization-variables',
      'GET /repos/{owner}/{repo}/actions/runners',
      'GET /repos/{owner}/{repo}/actions/runs',
      'GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts',
      'GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs',
      'GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs',
      'GET /repos/{owner}/{repo}/actions/secrets',
      'GET /repos/{owner}/{repo}/actions/variables',
      'GET /repos/{owner}/{repo}/actions/workflows',
      'GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs',
      'GET /repos/{owner}/{repo}/activity',
      'GET /repos/{owner}/{repo}/assignees',
      'GET /repos/{owner}/{repo}/branches',
      'GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations',
      'GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs',
      'GET /repos/{owner}/{repo}/code-scanning/alerts',
      'GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances',
      'GET /repos/{owner}/{repo}/code-scanning/analyses',
      'GET /repos/{owner}/{repo}/codespaces',
      'GET /repos/{owner}/{repo}/codespaces/devcontainers',
      'GET /repos/{owner}/{repo}/codespaces/secrets',
      'GET /repos/{owner}/{repo}/collaborators',
      'GET /repos/{owner}/{repo}/comments',
      'GET /repos/{owner}/{repo}/comments/{comment_id}/reactions',
      'GET /repos/{owner}/{repo}/commits',
      'GET /repos/{owner}/{repo}/commits/{commit_sha}/comments',
      'GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls',
      'GET /repos/{owner}/{repo}/commits/{ref}/check-runs',
      'GET /repos/{owner}/{repo}/commits/{ref}/check-suites',
      'GET /repos/{owner}/{repo}/commits/{ref}/status',
      'GET /repos/{owner}/{repo}/commits/{ref}/statuses',
      'GET /repos/{owner}/{repo}/contributors',
      'GET /repos/{owner}/{repo}/dependabot/alerts',
      'GET /repos/{owner}/{repo}/dependabot/secrets',
      'GET /repos/{owner}/{repo}/deployments',
      'GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses',
      'GET /repos/{owner}/{repo}/environments',
      'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies',
      'GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps',
      'GET /repos/{owner}/{repo}/events',
      'GET /repos/{owner}/{repo}/forks',
      'GET /repos/{owner}/{repo}/hooks',
      'GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries',
      'GET /repos/{owner}/{repo}/invitations',
      'GET /repos/{owner}/{repo}/issues',
      'GET /repos/{owner}/{repo}/issues/comments',
      'GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions',
      'GET /repos/{owner}/{repo}/issues/events',
      'GET /repos/{owner}/{repo}/issues/{issue_number}/comments',
      'GET /repos/{owner}/{repo}/issues/{issue_number}/events',
      'GET /repos/{owner}/{repo}/issues/{issue_number}/labels',
      'GET /repos/{owner}/{repo}/issues/{issue_number}/reactions',
      'GET /repos/{owner}/{repo}/issues/{issue_number}/timeline',
      'GET /repos/{owner}/{repo}/keys',
      'GET /repos/{owner}/{repo}/labels',
      'GET /repos/{owner}/{repo}/milestones',
      'GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels',
      'GET /repos/{owner}/{repo}/notifications',
      'GET /repos/{owner}/{repo}/pages/builds',
      'GET /repos/{owner}/{repo}/projects',
      'GET /repos/{owner}/{repo}/pulls',
      'GET /repos/{owner}/{repo}/pulls/comments',
      'GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions',
      'GET /repos/{owner}/{repo}/pulls/{pull_number}/comments',
      'GET /repos/{owner}/{repo}/pulls/{pull_number}/commits',
      'GET /repos/{owner}/{repo}/pulls/{pull_number}/files',
      'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews',
      'GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments',
      'GET /repos/{owner}/{repo}/releases',
      'GET /repos/{owner}/{repo}/releases/{release_id}/assets',
      'GET /repos/{owner}/{repo}/releases/{release_id}/reactions',
      'GET /repos/{owner}/{repo}/rules/branches/{branch}',
      'GET /repos/{owner}/{repo}/rulesets',
      'GET /repos/{owner}/{repo}/rulesets/rule-suites',
      'GET /repos/{owner}/{repo}/secret-scanning/alerts',
      'GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations',
      'GET /repos/{owner}/{repo}/security-advisories',
      'GET /repos/{owner}/{repo}/stargazers',
      'GET /repos/{owner}/{repo}/subscribers',
      'GET /repos/{owner}/{repo}/tags',
      'GET /repos/{owner}/{repo}/teams',
      'GET /repos/{owner}/{repo}/topics',
      'GET /repositories',
      'GET /repositories/{repository_id}/environments/{environment_name}/secrets',
      'GET /repositories/{repository_id}/environments/{environment_name}/variables',
      'GET /search/code',
      'GET /search/commits',
      'GET /search/issues',
      'GET /search/labels',
      'GET /search/repositories',
      'GET /search/topics',
      'GET /search/users',
      'GET /teams/{team_id}/discussions',
      'GET /teams/{team_id}/discussions/{discussion_number}/comments',
      'GET /teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions',
      'GET /teams/{team_id}/discussions/{discussion_number}/reactions',
      'GET /teams/{team_id}/invitations',
      'GET /teams/{team_id}/members',
      'GET /teams/{team_id}/projects',
      'GET /teams/{team_id}/repos',
      'GET /teams/{team_id}/teams',
      'GET /user/blocks',
      'GET /user/codespaces',
      'GET /user/codespaces/secrets',
      'GET /user/emails',
      'GET /user/followers',
      'GET /user/following',
      'GET /user/gpg_keys',
      'GET /user/installations',
      'GET /user/installations/{installation_id}/repositories',
      'GET /user/issues',
      'GET /user/keys',
      'GET /user/marketplace_purchases',
      'GET /user/marketplace_purchases/stubbed',
      'GET /user/memberships/orgs',
      'GET /user/migrations',
      'GET /user/migrations/{migration_id}/repositories',
      'GET /user/orgs',
      'GET /user/packages',
      'GET /user/packages/{package_type}/{package_name}/versions',
      'GET /user/public_emails',
      'GET /user/repos',
      'GET /user/repository_invitations',
      'GET /user/social_accounts',
      'GET /user/ssh_signing_keys',
      'GET /user/starred',
      'GET /user/subscriptions',
      'GET /user/teams',
      'GET /users',
      'GET /users/{username}/events',
      'GET /users/{username}/events/orgs/{org}',
      'GET /users/{username}/events/public',
      'GET /users/{username}/followers',
      'GET /users/{username}/following',
      'GET /users/{username}/gists',
      'GET /users/{username}/gpg_keys',
      'GET /users/{username}/keys',
      'GET /users/{username}/orgs',
      'GET /users/{username}/packages',
      'GET /users/{username}/projects',
      'GET /users/{username}/received_events',
      'GET /users/{username}/received_events/public',
      'GET /users/{username}/repos',
      'GET /users/{username}/social_accounts',
      'GET /users/{username}/ssh_signing_keys',
      'GET /users/{username}/starred',
      'GET /users/{username}/subscriptions',
    ];
  function ZeA(A) {
    return typeof A == 'string' ? XL.includes(A) : !1;
  }
  function zL(A) {
    return {
      paginate: Object.assign(ZL.bind(null, A), { iterator: lf.bind(null, A) }),
    };
  }
  zL.VERSION = WeA;
});
var tG = B((ae) => {
  'use strict';
  var KeA =
      (ae && ae.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    XeA =
      (ae && ae.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    eG =
      (ae && ae.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              KeA(e, A, t);
        return XeA(e, A), e;
      };
  Object.defineProperty(ae, '__esModule', { value: !0 });
  ae.getOctokitOptions = ae.GitHub = ae.defaults = ae.context = void 0;
  var zeA = eG(Nu()),
    tQ = eG(YM()),
    $eA = YL(),
    AtA = _L(),
    etA = AG();
  ae.context = new zeA.Context();
  var Qf = tQ.getApiBaseUrl();
  ae.defaults = {
    baseUrl: Qf,
    request: { agent: tQ.getProxyAgent(Qf), fetch: tQ.getProxyFetch(Qf) },
  };
  ae.GitHub = $eA.Octokit.plugin(
    AtA.restEndpointMethods,
    etA.paginateRest,
  ).defaults(ae.defaults);
  function ttA(A, e) {
    let t = Object.assign({}, e || {}),
      r = tQ.getAuthString(A, t);
    return r && (t.auth = r), t;
  }
  ae.getOctokitOptions = ttA;
});
var Cf = B((bt) => {
  'use strict';
  var rtA =
      (bt && bt.__createBinding) ||
      (Object.create
        ? function (A, e, t, r) {
            r === void 0 && (r = t);
            var o = Object.getOwnPropertyDescriptor(e, t);
            (!o ||
              ('get' in o ? !e.__esModule : o.writable || o.configurable)) &&
              (o = {
                enumerable: !0,
                get: function () {
                  return e[t];
                },
              }),
              Object.defineProperty(A, r, o);
          }
        : function (A, e, t, r) {
            r === void 0 && (r = t), (A[r] = e[t]);
          }),
    otA =
      (bt && bt.__setModuleDefault) ||
      (Object.create
        ? function (A, e) {
            Object.defineProperty(A, 'default', { enumerable: !0, value: e });
          }
        : function (A, e) {
            A.default = e;
          }),
    stA =
      (bt && bt.__importStar) ||
      function (A) {
        if (A && A.__esModule) return A;
        var e = {};
        if (A != null)
          for (var t in A)
            t !== 'default' &&
              Object.prototype.hasOwnProperty.call(A, t) &&
              rtA(e, A, t);
        return otA(e, A), e;
      };
  Object.defineProperty(bt, '__esModule', { value: !0 });
  bt.getOctokit = bt.context = void 0;
  var ntA = stA(Nu()),
    rG = tG();
  bt.context = new ntA.Context();
  function itA(A, e, ...t) {
    let r = rG.GitHub.plugin(...t);
    return new r((0, rG.getOctokitOptions)(A, e));
  }
  bt.getOctokit = itA;
});
var he = us(En()),
  mG = us(Cf());
var ue = us(En());
function oG() {
  return {
    githubToken: ue.getInput('github-token'),
    dokployBaseUrl: ue.getInput('dokploy-base-url', { required: !0 }),
    dokployToken: ue.getInput('dokploy-token', { required: !0 }),
    projectId: ue.getInput('project-id', { required: !0 }),
    applicationId: ue.getInput('application-id'),
    applicationName: ue.getInput('application-name', { required: !0 }),
    dockerImage: ue.getInput('docker-image'),
    dockerUsername: ue.getInput('docker-username'),
    dockerPassword: ue.getInput('docker-password'),
    dockerPort: ue.getInput('docker-port'),
    env: ue.getMultilineInput('env'),
    commentPr: ue.getBooleanInput('comment-pr'),
    action: ue.getInput('action', { required: !0 }),
  };
}
var Wr = us(En()),
  Bf = us(Cf()),
  sG = '<!-- dokploy-preview-comment -->';
async function nG(A, { appName: e, appUrl: t, appSettingsUrl: r }) {
  try {
    let { owner: o, repo: s } = Bf.context.repo,
      { number: n } = Bf.context.issue,
      i = `
  ## \u{1F680} Preview deployment
  
  **Your PR has been automatically deployed to Dokploy**

  - \u2705 [App Preview](${t})
  
  - \u2699\uFE0F [App Administration](${r})
  
  ${sG}
      `,
      { data: a } = await A.rest.issues.listComments({
        owner: o,
        repo: s,
        issue_number: n,
      });
    Wr.debug(`Comments: ${JSON.stringify(a, null, 2)}`);
    let c = a.find((g) => g.body?.includes(sG));
    c
      ? c.body !== i &&
        (await A.rest.issues.updateComment({
          owner: o,
          repo: s,
          comment_id: c.id,
          body: i,
        }),
        Wr.info('Comment updated'))
      : (await A.rest.issues.createComment({
          owner: o,
          repo: s,
          issue_number: n,
          body: i,
        }),
        Wr.info('Comment successfully added'));
  } catch (o) {
    Wr.error(o.stack), Wr.setFailed(o.message);
  }
}
var oQ = us(En());
var atA = /\{[^{}]+\}/g,
  rQ = ({ allowReserved: A, name: e, value: t }) => {
    if (t == null) return '';
    if (typeof t == 'object')
      throw new Error(
        'Deeply-nested arrays/objects aren\u2019t supported. Provide your own `querySerializer()` to handle these.',
      );
    return `${e}=${A ? t : encodeURIComponent(t)}`;
  },
  ctA = (A) => {
    switch (A) {
      case 'label':
        return '.';
      case 'matrix':
        return ';';
      case 'simple':
        return ',';
      default:
        return '&';
    }
  },
  gtA = (A) => {
    switch (A) {
      case 'form':
        return ',';
      case 'pipeDelimited':
        return '|';
      case 'spaceDelimited':
        return '%20';
      default:
        return ',';
    }
  },
  EtA = (A) => {
    switch (A) {
      case 'label':
        return '.';
      case 'matrix':
        return ';';
      case 'simple':
        return ',';
      default:
        return '&';
    }
  },
  aG = ({ allowReserved: A, explode: e, name: t, style: r, value: o }) => {
    if (!e) {
      let i = (A ? o : o.map((a) => encodeURIComponent(a))).join(gtA(r));
      switch (r) {
        case 'label':
          return `.${i}`;
        case 'matrix':
          return `;${t}=${i}`;
        case 'simple':
          return i;
        default:
          return `${t}=${i}`;
      }
    }
    let s = ctA(r),
      n = o
        .map((i) =>
          r === 'label' || r === 'simple'
            ? A
              ? i
              : encodeURIComponent(i)
            : rQ({ allowReserved: A, name: t, value: i }),
        )
        .join(s);
    return r === 'label' || r === 'matrix' ? s + n : n;
  },
  cG = ({ allowReserved: A, explode: e, name: t, style: r, value: o }) => {
    if (o instanceof Date) return `${t}=${o.toISOString()}`;
    if (r !== 'deepObject' && !e) {
      let i = [];
      Object.entries(o).forEach(([c, g]) => {
        i = [...i, c, A ? g : encodeURIComponent(g)];
      });
      let a = i.join(',');
      switch (r) {
        case 'form':
          return `${t}=${a}`;
        case 'label':
          return `.${a}`;
        case 'matrix':
          return `;${t}=${a}`;
        default:
          return a;
      }
    }
    let s = EtA(r),
      n = Object.entries(o)
        .map(([i, a]) =>
          rQ({
            allowReserved: A,
            name: r === 'deepObject' ? `${t}[${i}]` : i,
            value: a,
          }),
        )
        .join(s);
    return r === 'label' || r === 'matrix' ? s + n : n;
  },
  ltA = ({ path: A, url: e }) => {
    let t = e,
      r = e.match(atA);
    if (r)
      for (let o of r) {
        let s = !1,
          n = o.substring(1, o.length - 1),
          i = 'simple';
        n.endsWith('*') && ((s = !0), (n = n.substring(0, n.length - 1))),
          n.startsWith('.')
            ? ((n = n.substring(1)), (i = 'label'))
            : n.startsWith(';') && ((n = n.substring(1)), (i = 'matrix'));
        let a = A[n];
        if (a == null) continue;
        if (Array.isArray(a)) {
          t = t.replace(o, aG({ explode: s, name: n, style: i, value: a }));
          continue;
        }
        if (typeof a == 'object') {
          t = t.replace(o, cG({ explode: s, name: n, style: i, value: a }));
          continue;
        }
        if (i === 'matrix') {
          t = t.replace(o, `;${rQ({ name: n, value: a })}`);
          continue;
        }
        let c = encodeURIComponent(i === 'label' ? `.${a}` : a);
        t = t.replace(o, c);
      }
    return t;
  },
  gG =
    ({ allowReserved: A, array: e, object: t } = {}) =>
    (r) => {
      let o = [];
      if (r && typeof r == 'object')
        for (let s in r) {
          let n = r[s];
          if (n != null) {
            if (Array.isArray(n)) {
              o = [
                ...o,
                aG({
                  allowReserved: A,
                  explode: !0,
                  name: s,
                  style: 'form',
                  value: n,
                  ...e,
                }),
              ];
              continue;
            }
            if (typeof n == 'object') {
              o = [
                ...o,
                cG({
                  allowReserved: A,
                  explode: !0,
                  name: s,
                  style: 'deepObject',
                  value: n,
                  ...t,
                }),
              ];
              continue;
            }
            o = [...o, rQ({ allowReserved: A, name: s, value: n })];
          }
        }
      return o.join('&');
    },
  QtA = (A) => {
    if (!A) return;
    let e = A.split(';')[0].trim();
    if (e.startsWith('application/json') || e.endsWith('+json')) return 'json';
    if (e === 'multipart/form-data') return 'formData';
    if (
      ['application/', 'audio/', 'image/', 'video/'].some((t) =>
        e.startsWith(t),
      )
    )
      return 'blob';
    if (e.startsWith('text/')) return 'text';
  },
  CtA = ({ baseUrl: A, path: e, query: t, querySerializer: r, url: o }) => {
    let s = o.startsWith('/') ? o : `/${o}`,
      n = A + s;
    e && (n = ltA({ path: e, url: n }));
    let i = t ? r(t) : '';
    return i.startsWith('?') && (i = i.substring(1)), i && (n += `?${i}`), n;
  },
  iG = (A, e) => {
    let t = { ...A, ...e };
    return (
      t.baseUrl?.endsWith('/') &&
        (t.baseUrl = t.baseUrl.substring(0, t.baseUrl.length - 1)),
      (t.headers = EG(A.headers, e.headers)),
      t
    );
  },
  EG = (...A) => {
    let e = new Headers();
    for (let t of A) {
      if (!t || typeof t != 'object') continue;
      let r = t instanceof Headers ? t.entries() : Object.entries(t);
      for (let [o, s] of r)
        if (s === null) e.delete(o);
        else if (Array.isArray(s)) for (let n of s) e.append(o, n);
        else
          s !== void 0 &&
            e.set(o, typeof s == 'object' ? JSON.stringify(s) : s);
    }
    return e;
  },
  uf = class {
    _fns;
    constructor() {
      this._fns = [];
    }
    clear() {
      this._fns = [];
    }
    exists(A) {
      return this._fns.indexOf(A) !== -1;
    }
    eject(A) {
      let e = this._fns.indexOf(A);
      e !== -1 &&
        (this._fns = [...this._fns.slice(0, e), ...this._fns.slice(e + 1)]);
    }
    use(A) {
      this._fns = [...this._fns, A];
    }
  },
  BtA = () => ({ error: new uf(), request: new uf(), response: new uf() });
var utA = { bodySerializer: (A) => JSON.stringify(A) };
var htA = gG({
    allowReserved: !1,
    array: { explode: !0, style: 'form' },
    object: { explode: !0, style: 'deepObject' },
  }),
  ItA = { 'Content-Type': 'application/json' },
  hf = (A = {}) => ({
    ...utA,
    baseUrl: '',
    fetch: globalThis.fetch,
    headers: ItA,
    parseAs: 'auto',
    querySerializer: htA,
    ...A,
  }),
  lG = (A = {}) => {
    let e = iG(hf(), A),
      t = () => ({ ...e }),
      r = (i) => ((e = iG(e, i)), t()),
      o = (i) =>
        CtA({
          baseUrl: i.baseUrl ?? '',
          path: i.path,
          query: i.query,
          querySerializer:
            typeof i.querySerializer == 'function'
              ? i.querySerializer
              : gG(i.querySerializer),
          url: i.url,
        }),
      s = BtA(),
      n = async (i) => {
        let a = { ...e, ...i, headers: EG(e.headers, i.headers) };
        a.body && a.bodySerializer && (a.body = a.bodySerializer(a.body)),
          a.body || a.headers.delete('Content-Type');
        let c = o(a),
          g = { redirect: 'follow', ...a },
          E = new Request(c, g);
        for (let u of s.request._fns) E = await u(E, a);
        let l = a.fetch,
          C = await l(E);
        for (let u of s.response._fns) C = await u(C, E, a);
        let Q = { request: E, response: C };
        if (C.ok) {
          if (C.status === 204 || C.headers.get('Content-Length') === '0')
            return { data: {}, ...Q };
          if (a.parseAs === 'stream') return { data: C.body, ...Q };
          let u =
              (a.parseAs === 'auto'
                ? QtA(C.headers.get('Content-Type'))
                : a.parseAs) ?? 'json',
            d = await C[u]();
          return (
            u === 'json' &&
              a.responseTransformer &&
              (d = await a.responseTransformer(d)),
            { data: d, ...Q }
          );
        }
        let h = await C.text();
        try {
          h = JSON.parse(h);
        } catch {}
        let I = h;
        for (let u of s.error._fns) I = await u(h, C, E, a);
        if (((I = I || {}), a.throwOnError)) throw I;
        return { error: I, ...Q };
      };
    return {
      buildUrl: o,
      connect: (i) => n({ ...i, method: 'CONNECT' }),
      delete: (i) => n({ ...i, method: 'DELETE' }),
      get: (i) => n({ ...i, method: 'GET' }),
      getConfig: t,
      head: (i) => n({ ...i, method: 'HEAD' }),
      interceptors: s,
      options: (i) => n({ ...i, method: 'OPTIONS' }),
      patch: (i) => n({ ...i, method: 'PATCH' }),
      post: (i) => n({ ...i, method: 'POST' }),
      put: (i) => n({ ...i, method: 'PUT' }),
      request: n,
      setConfig: r,
      trace: (i) => n({ ...i, method: 'TRACE' }),
    };
  };
var Ft = lG(hf());
var QG = (A) => (A?.client ?? Ft).get({ ...A, url: '/project.one' });
var CG = (A) =>
    (A?.client ?? Ft).post({
      ...A,
      headers: { 'Content-Type': 'application/json', ...A?.headers },
      url: '/application.create',
    }),
  If = (A) => (A?.client ?? Ft).get({ ...A, url: '/application.one' });
var BG = (A) =>
  (A?.client ?? Ft).post({
    ...A,
    headers: { 'Content-Type': 'application/json', ...A?.headers },
    url: '/application.delete',
  });
var uG = (A) =>
  (A?.client ?? Ft).post({
    ...A,
    headers: { 'Content-Type': 'application/json', ...A?.headers },
    url: '/application.saveEnvironment',
  });
var hG = (A) =>
  (A?.client ?? Ft).post({
    ...A,
    headers: { 'Content-Type': 'application/json', ...A?.headers },
    url: '/application.saveDockerProvider',
  });
var IG = (A) =>
  (A?.client ?? Ft).post({
    ...A,
    headers: { 'Content-Type': 'application/json', ...A?.headers },
    url: '/application.deploy',
  });
var dG = (A) =>
    (A?.client ?? Ft).post({
      ...A,
      headers: { 'Content-Type': 'application/json', ...A?.headers },
      url: '/domain.create',
    }),
  fG = (A) => (A?.client ?? Ft).get({ ...A, url: '/domain.byApplicationId' });
var pG = (A) => (A?.client ?? Ft).get({ ...A, url: '/server.publicIp' });
function wG(A) {
  return A.replace(/([a-z])([A-Z])/g, '$1-$2')
    .toLowerCase()
    .replace(/\s+/g, '-');
}
async function yG({
  applicationId: A,
  applicationName: e,
  projectId: t,
  dockerPort: r,
}) {
  let { application: o, project: s } = await df({
    applicationId: A,
    applicationName: e,
    projectId: t,
  });
  if (o) return o;
  oQ.info(`Creating application ${e}...`);
  let { data: n } = await CG({ body: { projectId: t, name: e, appName: e } });
  if (n) {
    let i = await dtA({ appName: n.name, projectName: s.name });
    return (
      await dG({
        body: {
          host: i,
          applicationId: n.applicationId,
          https: !0,
          certificateType: 'letsencrypt',
          port: Number.parseInt(r ?? '80'),
        },
      }),
      n
    );
  }
}
async function df({ applicationId: A, applicationName: e, projectId: t }) {
  if (A) {
    let { data: o } = await If({ query: { applicationId: A } });
    if (o) return oQ.info(`Application ${e} found`), { application: o };
  }
  let { data: r } = await QG({ query: { projectId: t } });
  if (!r) return { application: void 0, project: void 0 };
  for (let o of r.applications)
    if (o.name === e)
      return oQ.info(`Application ${e} found`), { application: o };
  return { project: r };
}
async function dtA({ appName: A, projectName: e, domain: t = 'sslip.io' }) {
  let r = wG(`${e}-${A}`);
  if (t === 'sslip.io') {
    let { data: o } = await pG();
    return `${r}.${o.replace(/\./g, '-')}.${t}`;
  }
  return `${r}.${t}`;
}
async function ff(A) {
  let t = (await If({ query: { applicationId: A } })).data;
  if (!t) throw new Error('Application not found');
  if (t.applicationStatus === 'error')
    throw new Error('Application deployment failed');
  t.applicationStatus !== 'done' &&
    (await new Promise((r) => setTimeout(r, 5e3)), await ff(A));
}
async function DG(A) {
  let { data: e } = await fG({ query: { applicationId: A } });
  return `https://${e[0].host}`;
}
var zA = oG(),
  kG;
zA.githubToken && (kG = mG.getOctokit(zA.githubToken));
Ft.setConfig({
  baseUrl: `${zA.dokployBaseUrl}/api`,
  headers: { Authorization: `Bearer ${zA.dokployToken}` },
});
async function ftA() {
  try {
    zA.action === 'deploy' ? await ptA() : await wtA();
  } catch (A) {
    he.error(A.stack), he.setFailed(A.message);
  }
}
async function ptA() {
  let A = await yG({
    applicationId: zA.applicationId,
    applicationName: zA.applicationName,
    projectId: zA.projectId,
    dockerPort: zA.dockerPort,
  });
  if ((he.debug(`Application: ${JSON.stringify(A, null, 2)}`), A)) {
    he.info(`Updating docker image of ${A.name}...`),
      await hG({
        body: {
          applicationId: A.applicationId,
          dockerImage: zA.dockerImage,
          username: zA.dockerUsername,
          password: zA.dockerPassword,
        },
      }),
      he.info(`Updating environment variables of ${A.name}...`),
      await uG({
        body: {
          applicationId: A.applicationId,
          env: zA.env.join(`
`),
        },
      }),
      he.info(`Deploying ${A.name}...`),
      await IG({ parseAs: 'text', body: { applicationId: A.applicationId } }),
      he.debug('Waiting for deployment to be done...'),
      await ff(A.applicationId);
    let e = await DG(A.applicationId);
    zA.commentPr &&
      (he.debug('Setting pull request comment...'),
      await nG(kG, {
        appName: A.name,
        appUrl: e,
        appSettingsUrl: `${zA.dokployBaseUrl}/dashboard/project/${zA.projectId}/services/application/${A.applicationId}`,
      })),
      he.info(`\u{1F680} ${A.name} successfully deployed to ${e}`);
  }
}
async function wtA() {
  he.info('Destroying application...');
  let { application: A } = await df({
    applicationId: zA.applicationId,
    applicationName: zA.applicationName,
    projectId: zA.projectId,
  });
  if (!A) {
    he.setFailed('Application not found');
    return;
  }
  await BG({ body: { applicationId: A.applicationId } }),
    he.info(`Application ${A.name} successfuly destroyed`);
}
ftA();
/*! Bundled license information:

undici/lib/fetch/body.js:
  (*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

undici/lib/websocket/frame.js:
  (*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> *)

undici/lib/web/fetch/body.js:
  (*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> *)

undici/lib/web/websocket/frame.js:
  (*! ws. MIT License. Einar Otto Stangvik <einaros@gmail.com> *)
*/
//# sourceMappingURL=index.js.map
